const Discord = require('discord.js');
const client = new Discord.Client();
const fs = require("fs") 
const ms = require('parse-ms');
client.commands = new Discord.Collection();
let register = require("./register.json");
const millify = require('millify');
let RxCoins = require("./RxCoins.json")
let phenixspecial1 = require("./phenixspecial1.json")
let dechetemote = "<:dechet:777140981782020107>"
let Acier = require("./Acier.json");
let Fpret = require("./Fpret.json")
let BoisdeSapin = require("./BoisdeSapin.json");
let BoisdeBouleau = require("./BoisdeBouleau.json");
let fish1emote = "<:fish1_common:777132221915332618>"
let fish2emote = "<:fish1_rare:777132268737134612>"
let fish3emote = "<:fish1_epic:777132232816197684>"
let fish4emote = "<:fish1_legend:777132251938029578>"
let fishglobal = require("./fishglobal.json")
let totalcollecte = require("./totalcollecte.json")
let BoisdeChêne = require("./BoisdeChêne.json");
let BoisDoré = require("./BoisDoré.json");
let potatkemote = "<:potatk:611527185311989760>"
let potdefemote = "<:potdef:611527203510812674>"
let potpvemote = "<:potpv:611527232401309696>"
let pot25emote = "<:pot25:611527095432118282>"
let pot50emote = "<:pot50:611527140055187488>"
let pot100emote = "<:pot100:611527162884784128>"
let potxp1emote = "<:potxp1:725814232205099099>"
let potxp2emote = "<:potxp2:725814264975196300>"
let potxp3emote = "<:potxp3:725815298099249273>"
let Diamant = require("./Diamant.json");
let Fer = require("./Fer.json");
let Or = require("./Or.json");
let Pierre = require("./Pierre.json");
let xp = require("./experience.json");
let xpclasse = require("./experienceclasse.json")
let classeunlock = require("./classeunlock.json")
let Foreuse = require("./Foreuse.json");
let Hache = require("./Hache.json");
let PierreNoire = require("./PierreNoire.json");
let Platine = require("./Platine.json");
let Plutonium = require("./Plutonium.json");
let Looting = require("./Looting.json");
let XPBoost = require("./XPBoost.json");
let TimerReduc = require("./TimerReduc.json");
let Attaque = require("./Attaque.json");
let Défense = require("./Défense.json");
let Pv = require("./Pv.json");
let Pvmax = require("./Pvmax.json");
let Epee = require("./Epee.json");
let Bouclier = require("./Bouclier.json");
let Atk = require("./Atk.json");
let Def = require("./Def.json");
let admin = require("./admins.json");
let etoileh = require("./etoileh.json");
let etoilef = require("./etoilef.json");
let classe = require("./classe.json");
let Héro = require("./Héro.json");
let etage = require("./etage.json")
let etage2 = require("./etage2.json")
let etage3 = require("./etage3.json")
let etage4 = require("./etage4.json")
let fragemote = "<:frag:612723334844514360>"
let etage5 = require("./etage5.json")
let Pieceor = require("./Pieceor");
let boxcommonemote = "<:commonbox:598570287075819532>"
let boxrareemote = "<:rarebox:598570313411985408>"
let boxepicemote = "<:epicbox:598570331049033729>"
let boxmysteryemote = "<:mysterybox:598570354905972765>"
let boxgoldemote = "<:goldbox:598570372014538922>"
let boxsupremeemote = "<:supremebox:598570402775564298>"
let RXemote = "<:RXCoin:775382925033340979>"
let dailyemote = "<:DailyPoint:775385016703123496>"
let POemote = "<:poemote:776947582077370412>"
let PPlemote = "<:pplemote:776947557284577300>"
let emotepierre = "<:stone:598606416911269888>"
let emoteacier = "<:steelingot:598607115728322570>"
let emotefer = "<:Iron:598603891667632139>"
let emoteor = "<:gold:598605289637281829>"
let emoteplatine = "<:platine:598603937330888827>"
let emotediamant = "<:diamond:598603711073484811>"
let emotepluto = "<:plutonium:598603991898914816>"
let emotePN = "<:DarkStone:598603667855114250>"
let emotebs = "<:BS:598603632899784704>"
let emotebbl = "<:BBL:598603594660577290>"
let emotebc = "<:BC:598603614088331265>"
let emotegwood = "<:GWOOD:598603817453355219>"
let heronumber = Math.floor(Math.random() * 35) + 0;
let boxcommune = require("./boxcommune.json")
let boxrare = require("./boxrare.json")
let boxepique = require("./boxepique.json")
let mysterybox = require("./mysterybox.json")
let goldbox = require("./goldbox.json")
let supremebox = require("./supremebox.json")
let writepcommon = require("./writepcommon.json")
let writeprare = require("./writeprare.json")
let writepepic = require("./writepepic.json")
let writeplegend = require("./writeplegend.json")
let writecommon = require("./writecommon.json")
let writerare = require("./writerare.json")
let writeepic = require("./writeepic.json")
let writemystery = require("./writemystery.json")
let writegold = require("./writegold.json")
let writesupreme = require("./writesupreme.json")
let etdrop1 = require("./etdrop1.json")
let etdrop2 = require("./etdrop2.json")
let etdrop3 = require("./etdrop3.json")
let etdrop4 = require("./etdrop4.json")
let etdrop5 = require("./etdrop5.json")
let donjonunlock2 = require("./donjonunlock2.json")
let donjonunlock3 = require("./donjonunlock3.json")
let donjonunlock4 = require("./donjonunlock4.json")
let donjonunlock5 = require("./donjonunlock5.json")
let dailypoints = require("./dailypoints.json")
let trucbizarre = '``'
let emoteparchemincommun = "<:parchemincommun:777504719169781760>"
let emoteparcheminrare = "<:parcheminrare:777504959582961684>"
let emoteparcheminepic = "<:parcheminepic:777504922232684565>"
let emoteparcheminlegendaire = "<:parcheminlegendaire:777504942243315734>"
let emoteparcheminvierge = "<:parchemin:777504651896815626>"
let parchemincommun = require("./parchemincommun.json")
let parcheminrare = require("./parcheminrare.json")
let parcheminepic = require("./parcheminepic.json")
let parcheminlegendaire = require("./parcheminlegendaire.json")
let parcheminvierge = require("./parcheminvierge.json")
let timeparch = require("./timeparch.json")
let atelier = require("./atelier.json")
let forge = require("./forge.json")
let total_parchemin = require("./total_parchemin.json")
let total_potion = require("./total_potion.json")
let total_daily = require("./total_daily.json")
let total_hourly = require("./total_hourly.json")
let kiwritepourparchmin = require("./kiwritepourparchmin.json")
let potvide = require("./potvide.json")
let writeressminiere = require("./writeressminiere.json")
let writeressbois = require("./writeressbois.json")

let cristal = require("./cristal.json")
let cristalemote = "<:crystal:754359557668733114>"
let xp1emote = "<:xp1:775403274831396904>"
let xp2emote = "<:xp2:775403246164377670>"







let locationID = require("./locationID.json")











function includesRealy(msg,str) {
   return(
     msg.content.includes(str) ||
     msg.content.includes(str.toUpperCase()) ||
     msg.content.includes(str.toLowerCase())

   )
}
client.on("ready", async () => {
  console.log(`${client.user.username} is online on ${client.guilds.size} servers!`);
  client.user.setActivity(`!help sur ${client.guilds.size} serveurs`, {type: "PLAYING"});
});


client.on("message", async message  => {

  if(message.author.bot) return;
  if(message.channel.type === "dm") return;
 
  let prefix = "!"
  if (!message.content.startsWith(prefix) || message.author.bot) return;
  
  const args = message.content.slice(prefix.length).trim().split(/ +/);
  const command = args.shift().toLowerCase();

  if(message.content === "!lien"){
    message.reply("Voici l'invitation du bot pour l'ajouter sur votre serveur:\nhttps://discordapp.com/oauth2/authorize?client_id=483963202040758293&scope=bot&permissions=1074129984")
  }

  if(message.content === "!serveur"){
    message.reply("Voici l'invitation du serveur officiel du bot:\nhttps://discord.gg/aKEwdnz")
  }
 

  if(message.content === "!premium"){
    message.reply("Le bot est gratuit, y'a pas de premium.")
  }
  
    
  if(!xp[message.author.id]){
    xp[message.author.id] = {
      xp: 0
    };
  }
  let xpactuel = xp[message.author.id].xp;
  let nivactuel = Math.trunc(Math.pow(xpactuel, 1/3.8))
  if(!classe[message.author.id]){
    classe[message.author.id] = {
      classe: 0
    };
  }
  fs.writeFile("./classe.json", JSON.stringify(classe), (err) => {
    if(err) console.log(err)
  });
  let uclassen = classe[message.author.id].classe;
let CollecteTime = 0
  let Cprete = require("./cprete.json")
  if(!locationID[message.author.id]){
    locationID[message.author.id] = {
      locationID: 0
    };
  
  fs.writeFile("./locationID.json", JSON.stringify(locationID), (err) => {
    if (err) console.log(err)
  });
  }
  let ulocationID = locationID[message.author.id].locationID
  let movea = ""
  let moveb= ""
  let movec = ""
  let moved = ""
  let movee = ""
  let gmovea = ""
  let gmoveb = ""
  let gmovec = ""
  let gmoved = ""

  let locationzone = ""
  let locationname = ""
  let frontierea = ""
  let frontiereb = ""
  let frontierec = ""
  let frontiered = ""
  let frontieree = ""
  
  let inmoving = require("./inmoving.json")
  
  if(!inmoving[message.author.id]){
    inmoving[message.author.id] = {
      inmove: 0,
      tempsmove: 0,
      locationmove: "",
      zonemove: "",
      addzone: 0
    };
  
  fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
    if (err) console.log(err)
  });
  }
  let locationhelpembed = new Discord.RichEmbed()
  .setTitle("Page d'aide sur les déplacements")
  .addField(`**Les Bases:**`, `Vous vous retrouvez sur une map, pour l'afficher, faites ${trucbizarre}!map${trucbizarre}, le rond rouge indique votre endroit, pour bouger dans votre zone faites simplement ${trucbizarre}!move${trucbizarre} et réagissez avec la réaction du lieu que vous souhaitez\nChaque déplacement dure un certain temps.`)
  .addField(`Les Zones`, `La map comporte 11 zones accessibles ou non selon le niveau du joueur, chaque zone comporte un certain nombre de sous-zones qui peuvent contenir par exemple des zones de farm ou de minage.`);

  if(message.content === "!help location"){
   message.author.send(locationhelpembed)
  }
  let endroitsaccessibles = ""
  if(ulocationID === 0) {
   locationzone = "Zone de départ"
   locationname = "Village de Dalelry :homes: "
   movea = "Taverne"
   moveb = "Forge"
   movec = "Atelier"
   moved = "Echope"
   gmovea = "\nMine abandonnée :pick: "
   gmoveb = "\nPlaines :seedling: "
   endroitsaccessibles = "\nVous pouvez vous balader dans les endroits suivants:\nForge (!forge)\nAtelier (!atelier)\nTaverne (!taverne)\nShop (!shop)"
   frontierea = "\n**Zone:** Zone Intermédiaire \n**Lieu:** Terres arides :cactus: "
   frontiereb = "\n\n**Zone:** Désert Chaotique\n**Lieu:** Oasis :island: "
  }
  if(ulocationID === 1) {
    locationzone = "Zone de départ"
    locationname = "Mine abandonnée :pick: "
    gmovea = "\nVillage de Daledry :homes: "
    gmoveb = "\nTour :skull: "
    endroitsaccessibles = "\nVous pouvez aller surveiller la récolte de ressources (!collecte)"
    frontierea = "\n**Zone:** Forêt\n**Lieu:** Forêt :evergreen_tree: "
    frontiereb = "\n\n**Zone:** Désert Chaotique\n**Lieu:** Oasis :island: "
   }
   if(ulocationID === 2) {
    locationzone = "Zone de départ"
    locationname = "Tour :skull: "
    gmovea = "\nPlaines :seedling: "
    gmoveb = "\nMine abandonnée :pick: "
    endroitsaccessibles = "\nVous pouvez consulter le donjon (!donjon)"
    frontierea = "\n**Zone:** Forêt \n**Lieu:** Forêt :evergreen_tree: "
   }
   if(ulocationID === 3) {
    locationzone = "Zone de départ"
    locationname = "Plaines`:seedling: "
    gmovea = "\nTour :skull: "
    gmoveb = "\nVillage de Daledry :homes: "
    endroitsaccessibles = "\nVous pouvez combattre des mobs et des joueurs! (!farm & !battle)"
    frontierea = "\n**Zone:** Zone Intermédiaire \n**Lieu:** Terres arides :cactus: "
   }
   if(ulocationID === 0.1) {
    locationzone = "Forêt"
    locationname = "Forêt :evergreen_tree: "
    gmovea = "\n[Aucun endroit]"
    endroitsaccessibles = "\nVoici la liste des actions possible dans la forêt:\nVous pouvez collecter vos ressources (!collecte)\nVous pouvez combattre des mobs et des joueurs (!farm & !battle)"
    frontierea = "\n**Zone:** Zone de départ \n**Lieu:** Mine abandonnée :pick: "
    frontiereb = "\n**Zone:** Zone de départ \n**Lieu:** Tour :skull: "
    frontierec = "\n**Zone:** Volcan \n**Lieu:** Mine ardente :hotsprings: "
    frontiered = "\n**Zone:** Zone Rouge \n**Lieu:** Plaines embrasées :boom: "
    frontieree = "\n**Zone:** Tundra \n**Lieu:** Village de Kissaki :homes: "
   }
   if(ulocationID === 3.2) {
    locationzone = "Zone Intermédiaire"
    locationname = "Lac :fish: "
    gmovea = "Terres arides :cactus: "
    endroitsaccessibles = "\nVoici la liste des actions possible dans le lac:\nVous pouvez combattre des joueurs et pêcher des poissons. (!fish & !battle)"
    frontierea = "\n**Zone:** Zone Expert \n**Lieu:** Capitale :cityscape: "

   }  
    if(ulocationID === 3.3) {
    locationzone = "Zone Intermédiaire"
    locationname = "Cave :mountain: "
    gmovea = "\nTerres arides :cactus: "
    gmoveb = "\nVillage de Nerac :homes:"
    endroitsaccessibles = "\nVoici la liste des actions possible dans la Cave:\nVous pouvez consulter le donjon (!donjon)\nVous pouvez aussi collecter vos ressources (!collecte)"
    frontierea = "\n**Zone:** Terres Désolées \n**Lieu:** Tour Mirage :skull: "
    frontiereb = "\n**Zone:** Zone Expert \n**Lieu:** Capitale :cityscape: "

   }
   if(ulocationID === 3.4) {
    locationzone = "Zone Intermédiaire"
    locationname = "\nVillage de Nerac :homes: "
    gmovea = "\nCave :mountain: "
    endroitsaccessibles = "\nVous pouvez vous balader dans les endroits suivants:\nForge (!forge)\nAtelier (!atelier)\nTaverne (!taverne)\nShop (!shop)"
    frontierea = "\n**Zone:** Zone Expert \n**Lieu:** Capitale :cityscape: "

   }
   if(ulocationID === 3.1) {
    locationzone = "Zone Intermédiaire"
    locationname = "Terres arides :cactus: "
    gmovea = "\nLac :fish: "
    gmoveb = "\nCave :mountain:"
    endroitsaccessibles = "\nVoici la liste des actions possible dans les Terres arides:\nVous pouvez combattre des mobs et des joueurs (!farm & !battle)"
    frontierea = "\n**Zone:** Zone de départ \n**Lieu:** Village de Daledry :homes: "
    frontiereb = "\n**Zone:** Zone de départ \n**Lieu:** Plaines :seedling: "
    frontierec = "\n**Zone:** Zone Expert \n**Lieu:** Capitale :cityscape: "

   }

   if(ulocationID === 3.5) {
    locationzone = "Zone Expert"
    locationname = "Capitale :cityscape:"
    gmovea = "\n[Aucun Endroit] "
    endroitsaccessibles ="\nVous pouvez vous balader dans les endroits suivants:\nForge (!forge)\nAtelier (!atelier)\nTaverne (!taverne)\nShop (!shop)\nComité d'administration des aventuriers (!comite)"
    frontierea = "\n**Zone:** Zone de Intermédiaire \n**Lieu:** Lac :fish: "
    frontiereb = "\n**Zone:** Zone de Intermédiaire \n**Lieu:** Terres arides :cactus: "
    frontierec = "\n**Zone:** Zone de Intermédiaire \n**Lieu:** Cave :mountain: "
    frontiered = "\n**Zone:** Zone de Intermédiaire \n**Lieu:** Village de Nerac :homes: "

   }

   if(ulocationID === 3.7) {
    locationzone = "Terres Désolées"
    locationname = "Tour Mirage :skull: "
    gmovea = "\nCanyon :construction: "
    gmoveb = "\nVillage abandonné :house_abandoned: "
    endroitsaccessibles ="\nVoici la liste des actions possible dans la Tour Mirage:\nVous pouvez consulter le donjon (!donjon)"
    frontierea = "\n**Zone:** Zone de Intermédiaire \n**Lieu:** Cave :mountain: "

   }
   if(ulocationID === 3.6) {
    locationzone = "Terres Désolées"
    locationname = "Canyon :construction: "
    gmovea = "\nTour Mirage :skull: "
    endroitsaccessibles ="\nVoici la liste des actions possible dans le Canyon:Vous pouvez combattre des mobs et des joueurs (!farm & !battle)"
    frontierea = "\n[Aucune Zone]"

   }
   if(ulocationID === 3.8) {
    locationzone = "Terres Désolées"
    locationname = "Village abandonné :house_abandoned: "
    gmovea = "\nTour Mirage :skull: "
    endroitsaccessibles ="\nVous pouvez vous balader dans les endroits suivants:\nForge (!forge)"
    frontierea = "\n**Zone:** Désert Chaotique \n**Lieu:** Oasis :island: "
   }
   if(message.content === "!position"){
    message.channel.send(`${message.author.username} vous vous trouvez actuellement dans le lieu **${locationname}** de la zone **${locationzone}**${endroitsaccessibles}\nSi vous voulez de l'aide pour vous déplacer, faites ${trucbizarre}!help location${trucbizarre}`)
  }
if(message.content === "!map"){
  message.channel.send("" , {files: [`./map${ulocationID}.png`]})
}

let tempsmouvebase = 3600000+Date.now()
let tempsmouvefrontiere = 5400000+Date.now()
let MouveTimeObj = ms(inmoving[message.author.id].tempsmove - Date.now())
let msglocationchange = `Tu es déjà en direction de l'endroit **${inmoving[message.author.id].locationmove}** dans la zone **${inmoving[message.author.id].zonemove}**\nTu arrives dans ${MouveTimeObj.hours} heures ${MouveTimeObj.minutes} minutes et ${MouveTimeObj.seconds} secondes`
if(Date.now() >= inmoving[message.author.id].tempsmove){
  msglocationchange = `Tu es bien arrivé à destination!`
}

if(command === "move"){
  if(uclassen === 0) message.channel.send("Avant de te déplacer, choisis une classe.")
  if(inmoving[message.author.id].inmove != 0) message.channel.send(`${msglocationchange}`)
 



  if(inmoving[message.author.id].inmove === 0 && ulocationID === 3.6 && uclassen != 0) {
    message.channel.send(`[Terres Désolées - Canyon]\n${message.author.username} voici la liste des endroits qui vous sont accessible dans cette zone:${gmovea}${gmoveb}${gmovec}${gmoved}\n-------\nVoici la liste des zones accessibles depuis votre localisation:${frontierea}${frontiereb}${frontierec}${frontiered}${frontieree}`).then((unemavCK) => {
      unemavCK.react('💀');
  
         const filter = (reaction, user) => {
      return ['💀'].includes(reaction.emoji.name) && user.id === message.author.id;
     };

  unemavCK.awaitReactions(filter, { max: 1, time: 60000, errors: ['time'] })
  .then(collected => {
    const reaction = collected.first();

    if (reaction.emoji.name === '💀' && inmoving[message.author.id].inmove === 0) {
      
        inmoving[message.author.id] = {
          inmove: 1,
          tempsmove: tempsmouvebase,
          locationmove: "Tour Mirage",
          zonemove: "Terres Désolées",
          addzone: 3.7
        };
      
      fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
        if (err) console.log(err)
      });
  
      message.channel.send(`${message.author.username} tu es parti en direction de l'endroit Tour Mirage, tu arriveras dans 1 heure!`);
    }

  })
  .catch(collected => {
    unemavCK.delete();
  });
  })

  }

  if(inmoving[message.author.id].inmove === 0 && ulocationID === 3.8 && uclassen != 0) {
    message.channel.send(`[Terres Désolées - Village abandonné]\n${message.author.username} voici la liste des endroits qui vous sont accessible dans cette zone:${gmovea}${gmoveb}${gmovec}${gmoved}\n-------\nVoici la liste des zones accessibles depuis votre localisation:${frontierea}${frontiereb}${frontierec}${frontiered}${frontieree}`).then((unemavCC) => {
      unemavCC.react('💀').then(() => unemavCC.react('🏝️'));
  
         const filter = (reaction, user) => {
      return ['💀', '🏝️'].includes(reaction.emoji.name) && user.id === message.author.id;
     };

  unemavCC.awaitReactions(filter, { max: 1, time: 60000, errors: ['time'] })
  .then(collected => {
    const reaction = collected.first();

    if (reaction.emoji.name === '💀' && inmoving[message.author.id].inmove === 0) {
      
        inmoving[message.author.id] = {
          inmove: 1,
          tempsmove: tempsmouvebase,
          locationmove: "Tour Mirage",
          zonemove: "Terres Désolées",
          addzone: 3.7
        };
      
      fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
        if (err) console.log(err)
      });
  
      message.channel.send(`${message.author.username} tu es parti en direction de l'endroit Tour Mirage, tu arriveras dans 1 heure!`);
    } 
    if(reaction.emoji.name === '🏝️' && inmoving[message.author.id].inmove === 0){
      if(nivactuel < 75) message.channel.send("Le niveau 75 est requis pour aller dans cette zone.");
      if(nivactuel >= 75) {
      message.channel.send(`${message.author.username} tu es parti en direction de l'endroit **Oasis** dans la zone **Désert Chaotique**, tu arriveras dans 1 heure et 30 minutes`);
      inmoving[message.author.id] = {
        inmove: 1,
        tempsmove: tempsmouvefrontiere,
        locationmove: "Oasis",
        zonemove: "Désert Chaotique",
        addzone: 5
      };
    
    fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
      if (err) console.log(err)
    });
    }
  }

  })
  .catch(collected => {
    unemavCC.delete();
  });
  })

  }





  if(inmoving[message.author.id].inmove === 0 && ulocationID === 3.7 && uclassen != 0) {
    message.channel.send(`[Terres Désolées - Tour Mirage]\n${message.author.username} voici la liste des endroits qui vous sont accessible dans cette zone:${gmovea}${gmoveb}${gmovec}${gmoved}\n-------\nVoici la liste des zones accessibles depuis votre localisation:${frontierea}${frontiereb}${frontierec}${frontiered}${frontieree}`).then((unemavY) => {
      unemavY.react('🚧').then(() => unemavY.react('🏚️')).then(() => unemavY.react('⛰️'));
  
         const filter = (reaction, user) => {
      return ['🚧', '🏚️', '⛰️'].includes(reaction.emoji.name) && user.id === message.author.id;
     };

  unemavY.awaitReactions(filter, { max: 1, time: 60000, errors: ['time'] })
  .then(collected => {
    const reaction = collected.first();

    if (reaction.emoji.name === '🚧' && inmoving[message.author.id].inmove === 0) {
      
        inmoving[message.author.id] = {
          inmove: 1,
          tempsmove: tempsmouvebase,
          locationmove: "Canyon",
          zonemove: "Terres Désolées",
          addzone: 3.6
        };
      
      fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
        if (err) console.log(err)
      });
  
      message.channel.send(`${message.author.username} tu es parti en direction de l'endroit Canyon  tu arriveras dans 1 heure!`);
    } if(reaction.emoji.name === '🏚️' && inmoving[message.author.id].inmove === 0){
      message.channel.send(`${message.author.username} tu es parti en direction de l'endroit Village Abandonné, tu arriveras dans 1 heure!`);
      inmoving[message.author.id] = {
        inmove: 1,
        tempsmove: tempsmouvebase,
        locationmove: "Village abandonné",
        zonemove: "Terres Désolées",
        addzone: 3.8
      };
    
    fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
      if (err) console.log(err)
    });
    }
    if(reaction.emoji.name === '⛰️' && inmoving[message.author.id].inmove === 0){
      if(nivactuel < 45) message.channel.send("Le niveau 45 est requis pour aller dans cette zone.");
      if(nivactuel >= 45) {
      message.channel.send(`${message.author.username} tu es parti en direction de l'endroit **Cave** dans la zone **Zone Intermédiaire**, tu arriveras dans 1 heure et 30 minutes`);
      inmoving[message.author.id] = {
        inmove: 1,
        tempsmove: tempsmouvefrontiere,
        locationmove: "Cave",
        zonemove: "Zone Intermédiaire",
        addzone: 3.3
      };
    
    fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
      if (err) console.log(err)
    });
    }
  }

  })
  .catch(collected => {
    unemavY.delete();
  });
  })

  }
  if(inmoving[message.author.id].inmove === 0 && ulocationID === 3.5 && uclassen != 0) {
    message.channel.send(`[Zone Expert - Capitale]\n${message.author.username} voici la liste des endroits qui vous sont accessible dans cette zone:${gmovea}${gmoveb}${gmovec}${gmoved}\n-------\nVoici la liste des zones accessibles depuis votre localisation:${frontierea}${frontiereb}${frontierec}${frontiered}${frontieree}`).then((unemavX) => {
      unemavX.react('🐟').then(() => unemavX.react('🌵')).then(() => unemavX.react('⛰️')).then(() => unemavX.react('🏘️'));
  
         const filter = (reaction, user) => {
      return ['🐟', '🌵', '⛰️', '🏘️'].includes(reaction.emoji.name) && user.id === message.author.id;
     };

  unemavX.awaitReactions(filter, { max: 1, time: 60000, errors: ['time'] })
  .then(collected => {
    const reaction = collected.first();

    if (reaction.emoji.name === '🐟' && inmoving[message.author.id].inmove === 0) {
      
        inmoving[message.author.id] = {
          inmove: 1,
          tempsmove: tempsmouvefrontiere,
          locationmove: "Lac",
          zonemove: "Zone Intermédiaire",
          addzone: 3.2
        };
      
      fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
        if (err) console.log(err)
      });
  
      message.channel.send(`${message.author.username} tu es parti en direction de l'endroit **Lac** dans la zone **Zone Intermédiaire**, tu arriveras dans 1 heure et 30 minutes`);
    } if(reaction.emoji.name === '🌵' && inmoving[message.author.id].inmove === 0){
      message.channel.send(`${message.author.username} tu es parti en direction de l'endroit **Terres arides** dans la zone **Zone Intermédiaire**, tu arriveras dans 1 heure et 30 minutes`);
      inmoving[message.author.id] = {
        inmove: 1,
        tempsmove: tempsmouvefrontiere,
        locationmove: "Terres arides",
        zonemove: "Zone Intermediaire",
        addzone: 3.1
      };
    
    fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
      if (err) console.log(err)
    });
    }
    if(reaction.emoji.name === '⛰️' && inmoving[message.author.id].inmove === 0){
      if(nivactuel < 45) message.channel.send("Le niveau 45 est requis pour aller dans cette zone.");
      if(nivactuel >= 45) {
      message.channel.send(`${message.author.username} tu es parti en direction de l'endroit **Cave** dans la zone **Zone Intermédiaire**, tu arriveras dans 1 heure et 30 minutes`);
      inmoving[message.author.id] = {
        inmove: 1,
        tempsmove: tempsmouvefrontiere,
        locationmove: "Cave",
        zonemove: "Zone Intermédiaire",
        addzone: 3.3
      };
    
    fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
      if (err) console.log(err)
    });
    }
  }
    if(reaction.emoji.name === '🏘️' && inmoving[message.author.id].inmove === 0){
      if(nivactuel < 45) message.channel.send("Le niveau 45 est requis pour aller dans cette zone.");
      if(nivactuel >= 45) {
      message.channel.send(`${message.author.username} tu es parti en direction de l'endroit **Village de Nerac** dans la zone **Zone Intermédiaire**, tu arriveras dans 1 heure et 30 minutes`);
      inmoving[message.author.id] = {
        inmove: 1,
        tempsmove: tempsmouvefrontiere,
        locationmove: "Village de Nerac",
        zonemove: "Zone Intermédiaire",
        addzone: 3.4
      };
    
    fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
      if (err) console.log(err)
    });
    }
  }
  })
  .catch(collected => {
    unemavX.delete();
  });
  })

  }
  if(inmoving[message.author.id].inmove === 0 && ulocationID === 3.3 && uclassen != 0) {
    message.channel.send(`[Zone Intermédiaire - Cave]\n${message.author.username} voici la liste des endroits qui vous sont accessible dans cette zone:${gmovea}${gmoveb}${gmovec}${gmoved}\n-------\nVoici la liste des zones accessibles depuis votre localisation:${frontierea}${frontiereb}${frontierec}${frontiered}${frontieree}`).then((unemavK) => {
      unemavK.react('🌵').then(() => unemavK.react('🏘️')).then(() => unemavK.react('💀')).then(() => unemavK.react('🏙️'));
  
         const filter = (reaction, user) => {
      return ['🌵', '🏘️', '💀', '🏙️'].includes(reaction.emoji.name) && user.id === message.author.id;
     };

  unemavK.awaitReactions(filter, { max: 1, time: 60000, errors: ['time'] })
  .then(collected => {
    const reaction = collected.first();

    if (reaction.emoji.name === '🌵' && inmoving[message.author.id].inmove === 0) {
      
        inmoving[message.author.id] = {
          inmove: 1,
          tempsmove: tempsmouvebase,
          locationmove: "Terres arides",
          zonemove: "Zone Intermédiaire",
          addzone: 3.1
        };
      
      fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
        if (err) console.log(err)
      });
  
      message.channel.send(`${message.author.username}, tu es parti en direction de l'endroit Terres arides, tu arriveras dans 1 heure!`);
    } if(reaction.emoji.name === '🏘️' && inmoving[message.author.id].inmove === 0){
      message.channel.send(`${message.author.username} tu es parti en direction de l'endroit Village de Nerac, tu arrriveras dans 1 heure!`);
      inmoving[message.author.id] = {
        inmove: 1,
        tempsmove: tempsmouvebase,
        locationmove: "Village de Nerac",
        zonemove: "Zone Intermediaire",
        addzone: 3.4
      };
    
    fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
      if (err) console.log(err)
    });
    }
    if(reaction.emoji.name === '💀' && inmoving[message.author.id].inmove === 0){
      if(nivactuel < 85) message.channel.send("Le niveau 85 est requis pour aller dans cette zone.");
      if(nivactuel >= 85) {
      message.channel.send(`${message.author.username} tu es parti en direction de l'endroit **Tour Mirage** dans la zone **Terres Désolées**, tu arriveras dans 1 heure et 30 minutes`);
      inmoving[message.author.id] = {
        inmove: 1,
        tempsmove: tempsmouvefrontiere,
        locationmove: "Tour Mirage",
        zonemove: "Terres Désolées",
        addzone: 3.7
      };
    
    fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
      if (err) console.log(err)
    });
    }
  }
    if(reaction.emoji.name === '🏙️' && inmoving[message.author.id].inmove === 0){
      if(nivactuel < 100) message.channel.send("Le niveau 100 est requis pour aller dans cette zone.");
      if(nivactuel >= 100) {
      message.channel.send(`${message.author.username} tu es parti en direction de l'endroit **Capitale** dans la zone **Zone Expert**, tu arriveras dans 1 heure et 30 minutes`);
      inmoving[message.author.id] = {
        inmove: 1,
        tempsmove: tempsmouvefrontiere,
        locationmove: "Capitale",
        zonemove: "Zone Expert",
        addzone: 3.5
      };
    
    fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
      if (err) console.log(err)
    });
    }
  }
  })
  .catch(collected => {
    unemavK.delete()
  });
  })

  }







  if(inmoving[message.author.id].inmove === 0 && ulocationID === 3.4 && uclassen != 0) {
    message.channel.send(`[Zone Intermédiaire - Village de Nerac]\n${message.author.username} voici la liste des endroits qui vous sont accessible dans cette zone:${gmovea}${gmoveb}${gmovec}${gmoved}\n-------\nVoici la liste des zones accessibles depuis votre localisation:${frontierea}${frontiereb}${frontierec}${frontiered}${frontieree}`).then((unemavaG) => {
      unemavaG.react('⛰️').then(() => unemavaG.react('🏙️'))
  
         const filter = (reaction, user) => {
      return ['⛰️', '🏙️'].includes(reaction.emoji.name) && user.id === message.author.id;
     };

  unemavaG.awaitReactions(filter, { max: 1, time: 60000, errors: ['time'] })
  .then(collected => {
    const reaction = collected.first();

    if (reaction.emoji.name === '⛰️' && inmoving[message.author.id].inmove === 0) {
      
        inmoving[message.author.id] = {
          inmove: 1,
          tempsmove: tempsmouvebase,
          locationmove: "Cave",
          zonemove: "Zone Intermédiaire",
          addzone: 3.3
        };
      
      fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
        if (err) console.log(err)
      });
  
      message.channel.send(`${message.author.username}, tu es parti en direction de l'endroit Cave, tu arriveras dans 1 heure!`);
    } 
  if(reaction.emoji.name === '🏙️' && inmoving[message.author.id].inmove === 0){
    if(nivactuel < 100) message.channel.send("Le niveau 100 est requis pour aller dans cette zone.");
    if(nivactuel >= 100) {
    message.channel.send(`${message.author.username} tu es parti en direction de l'endroit **Capitale** dans la zone **Zone Expert**, tu arriveras dans 1 heure et 30 minutes`);
    inmoving[message.author.id] = {
      inmove: 1,
      tempsmove: tempsmouvefrontiere,
      locationmove: "Capitale",
      zonemove: "Zone Expert",
      addzone: 3.5
    };
  
  fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
    if (err) console.log(err)
  });
}
}
})
.catch(collected => {
  unemavaG.delete()
});
})

}


  if(inmoving[message.author.id].inmove === 0 && ulocationID === 3.2 && uclassen != 0) {
    message.channel.send(`[Zone Intermédiaire - Lac]\n${message.author.username} voici la liste des endroits qui vous sont accessible dans cette zone:${gmovea}${gmoveb}${gmovec}${gmoved}\n-------\nVoici la liste des zones accessibles depuis votre localisation:${frontierea}${frontiereb}${frontierec}${frontiered}${frontieree}`).then((unemavaE) => {
      unemavaE.react('🌵').then(() => unemavaE.react('🏙️'))
  
         const filter = (reaction, user) => {
      return ['🌵', '🏙️'].includes(reaction.emoji.name) && user.id === message.author.id;
     };

  unemavaE.awaitReactions(filter, { max: 1, time: 60000, errors: ['time'] })
  .then(collected => {
    const reaction = collected.first();

    if (reaction.emoji.name === '🌵' && inmoving[message.author.id].inmove === 0) {
      
        inmoving[message.author.id] = {
          inmove: 1,
          tempsmove: tempsmouvebase,
          locationmove: "Terres arides",
          zonemove: "Zone Intermédiaire",
          addzone: 3.1
        };
      
      fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
        if (err) console.log(err)
      });
  
      message.channel.send(`${message.author.username}, tu es parti en direction de l'endroit Terres arides, tu arriveras dans 1 heure!`);
    } 
  if(reaction.emoji.name === '🏙️' && inmoving[message.author.id].inmove === 0){
    if(nivactuel < 100) message.channel.send("Le niveau 100 est requis pour aller dans cette zone.");
    if(nivactuel >= 100) {
    message.channel.send(`${message.author.username} tu es parti en direction de l'endroit **Capitale** dans la zone **Zone Expert**, tu arriveras dans 1 heure et 30 minutes`);
    inmoving[message.author.id] = {
      inmove: 1,
      tempsmove: tempsmouvefrontiere,
      locationmove: "Capitale",
      zonemove: "Zone Expert",
      addzone: 3.5
    };
  
  fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
    if (err) console.log(err)
  });
}
}
})
.catch(collected => {
  unemavaE.delete();
});
})

}






  if(inmoving[message.author.id].inmove === 0 && ulocationID === 3.1 && uclassen != 0) {
    message.channel.send(`[Zone Intermédiaire - Terres arides]\n${message.author.username} voici la liste des endroits qui vous sont accessible dans cette zone:${gmovea}${gmoveb}${gmovec}${gmoved}\n-------\nVoici la liste des zones accessibles depuis votre localisation:${frontierea}${frontiereb}${frontierec}${frontiered}${frontieree}`).then((unemavaar) => {
      unemavaar.react('🐟').then(() => unemavaar.react('⛰️')).then(() => unemavaar.react('🏘️')).then(() => unemavaar.react('🌱').then(() => unemavaar.react('🏙️')))
  
         const filter = (reaction, user) => {
      return ['🐟', '⛰️', '🏘️', '🌱', '🏙️'].includes(reaction.emoji.name) && user.id === message.author.id;
     };

  unemavaar.awaitReactions(filter, { max: 1, time: 60000, errors: ['time'] })
  .then(collected => {
    const reaction = collected.first();

    if (reaction.emoji.name === '🐟' && inmoving[message.author.id].inmove === 0) {
      
        inmoving[message.author.id] = {
          inmove: 1,
          tempsmove: tempsmouvebase,
          locationmove: "Lac",
          zonemove: "Zone Intermédiaire",
          addzone: 3.2
        };
      
      fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
        if (err) console.log(err)
      });
  
      message.channel.send(`${message.author.username}, tu es parti en direction de l'endroit Lac, tu arriveras dans 1 heure!`);
    } if(reaction.emoji.name === '⛰️' && inmoving[message.author.id].inmove === 0){
      message.channel.send(`${message.author.username} tu es parti en direction de l'endroit Cave, tu arrriveras dans 1 heure!`);
      inmoving[message.author.id] = {
        inmove: 1,
        tempsmove: tempsmouvebase,
        locationmove: "Cave",
        zonemove: "Zone Intermédiaire",
        addzone: 3.3
      };
    
    fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
      if (err) console.log(err)
    });
    }
    if(reaction.emoji.name === '🏘️' && inmoving[message.author.id].inmove === 0){
      message.channel.send(`${message.author.username} tu es parti en direction de l'endroit **Village de Dalelry** dans la zone **Zone de départ**, tu arriveras dans 1 heure et 30 minutes`);
      inmoving[message.author.id] = {
        inmove: 1,
        tempsmove: tempsmouvefrontiere,
        locationmove: "Village de Dalelry",
        zonemove: "Zone de départ",
        addzone: 0
      };
    
    fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
      if (err) console.log(err)
    });

  }
    if(reaction.emoji.name === '🌱' && inmoving[message.author.id].inmove === 0){

      message.channel.send(`${message.author.username} tu es parti en direction de l'endroit **Plaines** dans la zone **Zone de départ**, tu arriveras dans 1 heure et 30 minutes`);
      inmoving[message.author.id] = {
        inmove: 1,
        tempsmove: tempsmouvefrontiere,
        locationmove: "Plaines",
        zonemove: "Zone de départ",
        addzone: 3
      };
    
    fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
      if (err) console.log(err)
    });
    }

  if(reaction.emoji.name === '🏙️' && inmoving[message.author.id].inmove === 0){
    if(nivactuel < 100) message.channel.send("Le niveau 100 est requis pour aller dans cette zone.");
    if(nivactuel >= 100) {
    message.channel.send(`${message.author.username} tu es parti en direction de l'endroit **Capitale** dans la zone **Zone Expert**, tu arriveras dans 1 heure et 30 minutes`);
    inmoving[message.author.id] = {
      inmove: 1,
      tempsmove: tempsmouvefrontiere,
      locationmove: "Capitale",
      zonemove: "Zone Expert",
      addzone: 3.5
    };
  
  fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
    if (err) console.log(err)
  });
  }
}
  })
  .catch(collected => {
    unemavaar.delete();
  });
  })

  }


 
  if(inmoving[message.author.id].inmove === 0 && ulocationID === 0.1 && uclassen != 0) {
    message.channel.send(`[Forêt - Forêt]\n${message.author.username} voici la liste des endroits qui vous sont accessible dans cette zone:${gmovea}${gmoveb}${gmovec}${gmoved}\n-------\nVoici la liste des zones accessibles depuis votre localisation:${frontierea}${frontiereb}${frontierec}${frontiered}${frontieree}`).then((unemavaf) => {
      unemavaf.react('⛏️').then(() => unemavaf.react('💀')).then(() => unemavaf.react('♨️')).then(() => unemavaf.react('💥').then(() => unemavaf.react('🏘️')))
  
         const filter = (reaction, user) => {
      return ['⛏️', '💀', '♨️', '💥', '🏘️'].includes(reaction.emoji.name) && user.id === message.author.id;
     };

  unemavaf.awaitReactions(filter, { max: 1, time: 60000, errors: ['time'] })
  .then(collected => {
    const reaction = collected.first();

    if (reaction.emoji.name === '⛏️' && inmoving[message.author.id].inmove === 0) {
      
        inmoving[message.author.id] = {
          inmove: 1,
          tempsmove: tempsmouvefrontiere,
          locationmove: "Mine abandonnée",
          zonemove: "Zone de départ",
          addzone: 1
        };
      
      fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
        if (err) console.log(err)
      });
  
      message.channel.send(`${message.author.username}, tu es parti en direction de l'endroit **Mine abandonnée** dans la zone **Zone de départ**, tu arriveras dans 1 heure et 30 minutes!`);
    } if(reaction.emoji.name === '💀' && inmoving[message.author.id].inmove === 0){
      message.channel.send(`${message.author.username} tu es parti en direction de l'endroit **Tour** dans la zone **Zone de départ**, tu arrriveras dans 1 heure et 30 minutes!`);
      inmoving[message.author.id] = {
        inmove: 1,
        tempsmove: tempsmouvefrontiere,
        locationmove: "Tour",
        zonemove: "Zone de départ",
        addzone: 2
      };
    
    fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
      if (err) console.log(err)
    });
    }
    if(reaction.emoji.name === '♨️' && inmoving[message.author.id].inmove === 0){
      if(nivactuel < 115) message.channel.send("Le niveau 115 est requis pour aller dans cette zone.");
      if(nivactuel >= 115) {
      message.channel.send(`${message.author.username} tu es parti en direction de l'endroit **Mine ardente** dans la zone **Volcan**, tu arriveras dans 1 heure et 30 minutes`);
      inmoving[message.author.id] = {
        inmove: 1,
        tempsmove: tempsmouvefrontiere,
        locationmove: "Mine ardente",
        zonemove: "Volcan",
        addzone: 6.8
      };
    
    fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
      if (err) console.log(err)
    });
    }
  }
    if(reaction.emoji.name === '💥' && inmoving[message.author.id].inmove === 0){
      if(nivactuel < 25) message.channel.send("Le niveau 25 est requis pour aller dans cette zone.");
      if(nivactuel >= 25) {
      message.channel.send(`${message.author.username} tu es parti en direction de l'endroit **Plaines embrasées** dans la zone **Zone Rouge**, tu arriveras dans 1 heure et 30 minutes\nATTENTION: Le PvP est actif, si quelqu'un vous défie dans cette zone il est impossible de décliner, de plus les Pvs perdus en combat sont déduits.`);
      inmoving[message.author.id] = {
        inmove: 1,
        tempsmove: tempsmouvefrontiere,
        locationmove: "Plaines embrasées",
        zonemove: "Zone Rouge",
        addzone: 7.5
      };
    
    fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
      if (err) console.log(err)
    });
    }
  }
  if(reaction.emoji.name === '🏘️' && inmoving[message.author.id].inmove === 0){
    if(nivactuel < 115) message.channel.send("Le niveau 115 est requis pour aller dans cette zone.");
    if(nivactuel >= 115) {
    message.channel.send(`${message.author.username} tu es parti en direction de l'endroit **Village de Kissaki** dans la zone **Tundra**, tu arriveras dans 1 heure et 30 minutes`);
    inmoving[message.author.id] = {
      inmove: 1,
      tempsmove: tempsmouvefrontiere,
      locationmove: "Village de Kissaki",
      zonemove: "Tundra",
      addzone: 6.3
    };
  
  fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
    if (err) console.log(err)
  });
  }
}
  })
  .catch(collected => {
    unemavaf.delete();
  });
  })

  }
 
  //LOCATION ID 0 
 
  if(inmoving[message.author.id].inmove === 0 && ulocationID === 0 && uclassen != 0) {
    message.channel.send(`[Zone de départ - Village de Dalelry]\n${message.author.username} voici la liste des endroits qui vous sont accessible dans cette zone:${gmovea}${gmoveb}${gmovec}${gmoved}\n-------\nVoici la liste des zones accessibles depuis votre localisation:${frontierea}${frontiereb}${frontierec}${frontiered}${frontieree}`).then((unemava) => {
      unemava.react('⛏️').then(() => unemava.react('🌱')).then(() => unemava.react('🌵')).then(() => unemava.react('🏝️'));
  
         const filter = (reaction, user) => {
      return ['⛏️', '🌱', '🌵', '🏝️'].includes(reaction.emoji.name) && user.id === message.author.id;
     };

  unemava.awaitReactions(filter, { max: 1, time: 60000, errors: ['time'] })
  .then(collected => {
    const reaction = collected.first();

    if (reaction.emoji.name === '⛏️' && inmoving[message.author.id].inmove === 0) {
      
        inmoving[message.author.id] = {
          inmove: 1,
          tempsmove: tempsmouvebase,
          locationmove: "Mine abandonnée",
          zonemove: "Zone de départ",
          addzone: 1
        };
      
      fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
        if (err) console.log(err)
      });
  
      message.channel.send(`${message.author.username}, tu es parti en direction de l'endroit ${gmovea}, tu arriveras dans 1 heure!`);
    } if(reaction.emoji.name === '🌱' && inmoving[message.author.id].inmove === 0){
      message.channel.send(`${message.author.username} tu es parti en direction de l'endroit ${gmoveb}, tu arrriveras dans 1 heure!`);
      inmoving[message.author.id] = {
        inmove: 1,
        tempsmove: tempsmouvebase,
        locationmove: "Plaines",
        zonemove: "Zone de départ",
        addzone: 3
      };
    
    fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
      if (err) console.log(err)
    });
    }
    if(reaction.emoji.name === '🌵' && inmoving[message.author.id].inmove === 0){
      if(nivactuel < 45) message.channel.send("Le niveau 45 est requis pour aller dans cette zone.");
      if(nivactuel >= 45) {
      message.channel.send(`${message.author.username} tu es parti en direction de l'endroit **Terres arides** dans la zone **Zone Intermédiaire**, tu arriveras dans 1 heure et 30 minutes`);
      inmoving[message.author.id] = {
        inmove: 1,
        tempsmove: tempsmouvefrontiere,
        locationmove: "Terres arides",
        zonemove: "Zone Intermédiaire",
        addzone: 3.1
      };
    
    fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
      if (err) console.log(err)
    });
    }
  }
    if(reaction.emoji.name === '🏝️' && inmoving[message.author.id].inmove === 0){
      if(nivactuel < 75) message.channel.send("Le niveau 75 est requis pour aller dans cette zone.");
      if(nivactuel >= 75) {
      message.channel.send(`${message.author.username} tu es parti en direction de l'endroit **Oasis** dans la zone **Désert Chaotique**, tu arriveras dans 1 heure et 30 minutes`);
      inmoving[message.author.id] = {
        inmove: 1,
        tempsmove: tempsmouvefrontiere,
        locationmove: "Oasis",
        zonemove: "Désert Chaotique",
        addzone: 5
      };
    
    fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
      if (err) console.log(err)
    });
    }
  }
  })
  .catch(collected => {
    unemava.delete();
  });
  })

  }
// LOCATION ID = 1
if(inmoving[message.author.id].inmove === 0 && ulocationID === 1 && uclassen != 0) {
message.channel.send(`[Zone de départ - Mine abandonnée] ${message.author.username} voici la liste des endroits qui vous sont accessible dans cette zone:${gmovea}${gmoveb}${gmovec}${gmoved}\n-------\nVoici la liste des zones accessibles depuis votre localisation:${frontierea}${frontiereb}${frontierec}${frontiered}${frontieree}`).then((unemava1) => {
  unemava1.react('🏘️').then(() => unemava1.react('💀')).then(() => unemava1.react('🌲')).then(() => unemava1.react('🏝️'));

     const filter = (reaction, user) => {
  return ['🏘️', '💀','🌲', '🏝️'].includes(reaction.emoji.name) && user.id === message.author.id;
 };

unemava1.awaitReactions(filter, { max: 1, time: 60000, errors: ['time'] })
.then(collected => {
const reaction = collected.first();

if (reaction.emoji.name === '🏘️' && inmoving[message.author.id].inmove === 0) {
  
    inmoving[message.author.id] = {
      inmove: 1,
      tempsmove: tempsmouvebase,
      locationmove: "Village de Dalelry",
      zonemove: "Zone de départ",
      addzone: 0
    };
  
  fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
    if (err) console.log(err)
  });

  message.channel.send(`${message.author.username}, tu es parti en direction de l'endroit ${gmovea}, tu arriveras dans 1 heure!`);
} if(reaction.emoji.name === '💀' && inmoving[message.author.id].inmove === 0){
  message.channel.send(`${message.author.username} tu es parti en direction de l'endroit ${gmoveb}, tu arriveras dans 1 heure!`);
  inmoving[message.author.id] = {
    inmove: 1,
    tempsmove: tempsmouvebase,
    locationmove: "Tour",
    zonemove: "Zone de départ",
    addzone: 2
  };

fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
  if (err) console.log(err)
});
}
if(reaction.emoji.name === '🌲' && inmoving[message.author.id].inmove === 0){
  message.channel.send(`${message.author.username} tu es parti en direction de l'endroit **Forêt** dans la zone **Forêt**, tu arriveras dans 1 heure et 30 minutes`);
  inmoving[message.author.id] = {
    inmove: 1,
    tempsmove: tempsmouvefrontiere,
    locationmove: "Forêt",
    zonemove: "Forêt",
    addzone: 0.1
  };

fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
  if (err) console.log(err)
});
}
if(reaction.emoji.name === '🏝️' && inmoving[message.author.id].inmove === 0){
  if(nivactuel < 75) message.channel.send("Le niveau 75 est requis pour aller dans cette zone.");
  if(nivactuel >= 75) {
  message.channel.send(`${message.author.username} tu es parti en direction de l'endroit **Oasis** dans la zone **Désert Chaotique**, tu arriveras dans 1 heure et 30 minutes`);
  inmoving[message.author.id] = {
    inmove: 1,
    tempsmove: tempsmouvefrontiere,
    locationmove: "Oasis",
    zonemove: "Désert Chaotique",
    addzone: 5
  };

fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
  if (err) console.log(err)
});
}
}
})
.catch(collected => {
  unemava1.delete();
});
})
// LOCATION ID: 2
}
if(inmoving[message.author.id].inmove === 0 && ulocationID === 2 && uclassen != 0) {
message.channel.send(`[Zone de départ - Tour] ${message.author.username} voici la liste des endroits qui vous sont accessible dans cette zone:${gmovea}${gmoveb}${gmovec}${gmoved}\n-------\nVoici la liste des zones accessibles depuis votre localisation:${frontierea}${frontiereb}${frontierec}${frontiered}${frontieree}`).then((unemava2) => {
  unemava2.react('🌱').then(() => unemava2.react('⛏️')).then(() => unemava2.react('🌲'));

     const filter = (reaction, user) => {
  return ['🌱', '⛏️', '🌲'].includes(reaction.emoji.name) && user.id === message.author.id;
 };

unemava2.awaitReactions(filter, { max: 1, time: 60000, errors: ['time'] })
.then(collected => {
const reaction = collected.first();

if (reaction.emoji.name === '🌱' && inmoving[message.author.id].inmove === 0) {
  
    inmoving[message.author.id] = {
      inmove: 1,
      tempsmove: tempsmouvebase,
      locationmove: "Plaines",
      zonemove: "Zone de départ",
      addzone: 3
    };
  
  fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
    if (err) console.log(err)
  });

  message.channel.send(`${message.author.username}, tu es parti en direction de l'endroit ${gmovea}, tu arriveras dans 1 heure!`);
} if(reaction.emoji.name === '⛏️' && inmoving[message.author.id].inmove === 0){
  message.channel.send(`${message.author.username} tu es parti en direction de l'endroit ${gmoveb}, tu arriveras dans 1 heure!`);
  inmoving[message.author.id] = {
    inmove: 1,
    tempsmove: tempsmouvebase,
    locationmove: "Mine abandonnée",
    zonemove: "Zone de départ",
    addzone: 0
  };

fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
  if (err) console.log(err)
});
}
if(reaction.emoji.name === '🌲' && inmoving[message.author.id].inmove === 0){
  message.channel.send(`${message.author.username} tu es parti en direction de l'endroit **Forêt** dans la zone **Forêt**, tu arriveras dans 1 heure et 30 minutes!`);
  inmoving[message.author.id] = {
    inmove: 1,
    tempsmove: tempsmouvefrontiere,
    locationmove: "Forêt",
    zonemove: "Forêt",
    addzone: 0.1
  };

fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
  if (err) console.log(err)
});
}
})
.catch(collected => {
  unemava2.delete();
});
})
}
//LOCID = 3

if(inmoving[message.author.id].inmove === 0 && ulocationID === 3 && uclassen != 0) {
message.channel.send(`[Zone de départ - Plaines] ${message.author.username} voici la liste des endroits qui vous sont accessible dans cette zone:${gmovea}${gmoveb}${gmovec}${gmoved}\n-------\nVoici la liste des zones accessibles depuis votre localisation:${frontierea}${frontiereb}${frontierec}${frontiered}${frontieree}`).then((unemava3) => {
  unemava3.react('💀').then(() => unemava3.react('🏘️')).then(() => unemava3.react('🏘️🌵'))

     const filter = (reaction, user) => {
  return ['💀', '🏘️', '🌵'].includes(reaction.emoji.name) && user.id === message.author.id;
 };

unemava3.awaitReactions(filter, { max: 1, time: 60000, errors: ['time'] })
.then(collected => {
const reaction = collected.first();

if (reaction.emoji.name === '💀' && inmoving[message.author.id].inmove === 0) {
  
    inmoving[message.author.id] = {
      inmove: 1,
      tempsmove: tempsmouvebase,
      locationmove: "Tour",
      zonemove: "Zone de départ",
      addzone: 2
    };
  
  fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
    if (err) console.log(err)
  });

  message.channel.send(`${message.author.username}, tu es parti en direction de l'endroit ${gmovea}, tu arriveras dans 1 heure!`);
} if(reaction.emoji.name === '🏘️' && inmoving[message.author.id].inmove === 0){
  message.channel.send(`${message.author.username} tu es parti en direction de l'endroit ${gmoveb}, tu arriveras dans 1 heure!`);
  inmoving[message.author.id] = {
    inmove: 1,
    tempsmove: tempsmouvebase,
    locationmove: "Village de Dalelry",
    zonemove: "Zone de départ",
    addzone: 0
  };

fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
  if (err) console.log(err)
});
}
if(reaction.emoji.name === '🌵' && inmoving[message.author.id].inmove === 0){
  message.channel.send(`${message.author.username} tu es parti en direction de l'endroit **Terres arides** dans la zone **Zone Intermédiaire**, tu arriveras dans 1 heure et 30 minutes!`);
  inmoving[message.author.id] = {
    inmove: 1,
    tempsmove: tempsmouvefrontiere,
    locationmove: "Terres arides",
    zonemove: "Zone Intermédiaire",
    addzone: 3.1
  };

fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
  if (err) console.log(err)
});
}
})
.catch(collected => {
  unemava3.delete();
});
})
}
 

  }
  if(Date.now() >= inmoving[message.author.id].tempsmove && inmoving[message.author.id].inmove != 0){
    message.author.send(`Tu es bien arrivé à l'endroit ${inmoving[message.author.id].locationmove} dans la zone ${inmoving[message.author.id].zonemove}`)
    locationID[message.author.id] = {
      locationID: inmoving[message.author.id].addzone
    }
    fs.writeFile("./locationID.json", JSON.stringify(locationID), (err) => {
      if (err) console.log(err)
    });
    inmoving[message.author.id] = {
      inmove: 0,
      tempsmove: 0,
      locationmove: "",
      zonemove: "",
      addzone: 0
    };
    fs.writeFile("./inmoving.json", JSON.stringify(inmoving), (err) => {
      if (err) console.log(err)
    });
  
  }
  if(!parchemincommun[message.author.id]){
    parchemincommun[message.author.id] = {
      parchemincommun: 0
    };
  
  fs.writeFile("./parchemincommun.json", JSON.stringify(parchemincommun), (err) => {
    if (err) console.log(err)
  });
  }
  if(!cristal[message.author.id]){
    cristal[message.author.id] = {
      cristal: 0
    };

  fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
    if (err) console.log(err)
  });
  }
  if(!phenixspecial1[message.author.id]){
    phenixspecial1[message.author.id] = {
      unlock: 0,
      equip: 0
    };

  fs.writeFile("./phenixspecial1.json", JSON.stringify(phenixspecial1), (err) => {
    if (err) console.log(err)
  });
  }
  if(!writeressminiere[message.author.id]){
    writeressminiere[message.author.id] = {
      allstone: 0,
      allacier: 0,
      allfer: 0,
      allgold: 0,
      allplatine: 0,
      alldiamond: 0,
      allpluto: 0,
      allpn: 0
    };
  
  fs.writeFile("./writeressminiere.json", JSON.stringify(writeressminiere), (err) => {
    if (err) console.log(err)
  });
  }
  if(!classeunlock[message.author.id]){
    classeunlock[message.author.id] = {
      classe1: 0,
      classe2: 0,
      classe3: 0,
      classe4: 0,
      classe5: 0
    };
  
  fs.writeFile("./classeunlock.json", JSON.stringify(classeunlock), (err) => {
    if (err) console.log(err)
  });
  }
  if(!fishglobal[message.author.id]){
    fishglobal[message.author.id] = {
      fish1: 0,
      fish2: 0,
      fish3: 0,
      fish4: 0,
      dechet1: 0
    };
  
  fs.writeFile("./fishglobal.json", JSON.stringify(fishglobal), (err) => {
    if (err) console.log(err)
  });
  }
  if(!totalcollecte[message.author.id]){
    totalcollecte[message.author.id] = {
      totalcollecte: 0
    };
  
  fs.writeFile("./totalcollecte.json", JSON.stringify(totalcollecte), (err) => {
    if (err) console.log(err)
  });
  }
  if(!writeressbois[message.author.id]){
    writeressbois[message.author.id] = {
      allbs: 0,
      allbbl: 0,
      allbc: 0,
      allgw: 0,
      allrx: 0
    };
  
  fs.writeFile("./writeressbois.json", JSON.stringify(writeressbois), (err) => {
    if (err) console.log(err)
  });
  }

  if(!parcheminrare[message.author.id]){
    parcheminrare[message.author.id] = {
      parcheminrare: 0
    };
  
  fs.writeFile("./parcheminrare.json", JSON.stringify(parcheminrare), (err) => {
    if (err) console.log(err)
  });
  }
  if(!total_potion[message.author.id]){
    total_potion[message.author.id] = {
      total_potion: 0
    };
  
  fs.writeFile("./total_potion.json", JSON.stringify(total_potion), (err) => {
    if (err) console.log(err)
  });
  }
  if(!potvide[message.author.id]){
    potvide[message.author.id] = {
      potvide: 0
    };
  
  fs.writeFile("./potvide.json", JSON.stringify(potvide), (err) => {
    if (err) console.log(err)
  });
  }
  if(!kiwritepourparchmin[message.author.id]){
    kiwritepourparchmin[message.author.id] = {
      kiwritepourparchmin: 0
    };
  
  fs.writeFile("./kiwritepourparchmin.json", JSON.stringify(kiwritepourparchmin), (err) => {
    if (err) console.log(err)
  });
  }
  let ukiwritepourparchmin = kiwritepourparchmin[message.author.id].kiwritepourparchmin
  let ucristal = cristal[message.author.id].cristal
  let utotalcollecte = totalcollecte[message.author.id].totalcollecte


  if(!parcheminepic[message.author.id]){
    parcheminepic[message.author.id] = {
      parcheminepic: 0
    };
  
  fs.writeFile("./parcheminepic.json", JSON.stringify(parcheminepic), (err) => {
    if (err) console.log(err)
  });
  }
  if(!parcheminvierge[message.author.id]){
    parcheminvierge[message.author.id] = {
      parcheminvierge: 0
    };
  
  fs.writeFile("./parcheminvierge.json", JSON.stringify(parcheminvierge), (err) => {
    if (err) console.log(err)
  });
  }
  if(!total_daily[message.author.id]){
    total_daily[message.author.id] = {
      total_daily: 0
    };
  
  fs.writeFile("./total_daily.json", JSON.stringify(total_daily), (err) => {
    if (err) console.log(err)
  });
  }
  if(!Fpret[message.author.id]){
    Fpret[message.author.id] = {
      Fpret: 0
    };
  
  fs.writeFile("./Fpret.json", JSON.stringify(Fpret), (err) => {
    if (err) console.log(err)
  });
  }
  if(!total_hourly[message.author.id]){
    total_hourly[message.author.id] = {
      total_hourly: 0
    };
  
  fs.writeFile("./total_hourly.json", JSON.stringify(total_hourly), (err) => {
    if (err) console.log(err)
  });
  }
  if(!total_parchemin[message.author.id]){
    total_parchemin[message.author.id] = {
      total_parchemin: 0
    };
  
  fs.writeFile("./total_parchemin.json", JSON.stringify(total_parchemin), (err) => {
    if (err) console.log(err)
  });
  }
  if(!parcheminlegendaire[message.author.id]){
    parcheminlegendaire[message.author.id] = {
      parcheminlegendaire: 0
    };
  
  fs.writeFile("./parcheminlegendaire.json", JSON.stringify(parcheminlegendaire), (err) => {
    if (err) console.log(err)
  });
  }
  if(!etdrop1[message.author.id]){
    etdrop1[message.author.id] = {
      etdrop1: 0
    };

  fs.writeFile("./etdrop1.json", JSON.stringify(etdrop1), (err) => {
    if (err) console.log(err)
  });
}
if(!etdrop2[message.author.id]){
  etdrop2[message.author.id] = {
    etdrop2: 0
  };

fs.writeFile("./etdrop2.json", JSON.stringify(etdrop2), (err) => {
  if (err) console.log(err)
});
}
if(!atelier[message.author.id]){
  atelier[message.author.id] = {
    atelier: 0
  };

fs.writeFile("./atelier.json", JSON.stringify(atelier), (err) => {
  if (err) console.log(err)
});
}
if(!forge[message.author.id]){
  forge[message.author.id] = {
    forge: 0
  };

fs.writeFile("./forge.json", JSON.stringify(forge), (err) => {
  if (err) console.log(err)
});
}
if(!etdrop3[message.author.id]){
  etdrop3[message.author.id] = {
    etdrop3: 0
  };

fs.writeFile("./etdrop3.json", JSON.stringify(etdrop3), (err) => {
  if (err) console.log(err)
});
}
if(!etdrop4[message.author.id]){
  etdrop4[message.author.id] = {
    etdrop4: 0
  };

fs.writeFile("./etdrop4.json", JSON.stringify(etdrop4), (err) => {
  if (err) console.log(err)
});
}
if(!etdrop5[message.author.id]){
  etdrop5[message.author.id] = {
    etdrop5: 0
  };

fs.writeFile("./etdrop5.json", JSON.stringify(etdrop5), (err) => {
  if (err) console.log(err)
});
}
let uetdrop1 = etdrop1[message.author.id].etdrop1
let uetdrop2 = etdrop2[message.author.id].etdrop2
let uetdrop3 = etdrop3[message.author.id].etdrop3
let uetdrop4 = etdrop4[message.author.id].etdrop4
let uetdrop5 = etdrop5[message.author.id].etdrop5
let uparchemincommun = parchemincommun[message.author.id].parchemincommun
let uparcheminrare = parcheminrare[message.author.id].parcheminrare
let uparcheminepic = parcheminepic[message.author.id].parcheminepic
let uparcheminlegendaire = parcheminlegendaire[message.author.id].parcheminlegendaire
let uparcheminvierge = parcheminvierge[message.author.id].parcheminvierge
let utotal_parchemin = total_parchemin[message.author.id].total_parchemin
let upotvide = potvide[message.author.id].potvide
let utotal_potion = total_potion[message.author.id].total_potion
let uforge = forge[message.author.id].forge

let potvideemote = "<:potvide:754352017366843534>"
if(!donjonunlock2[message.author.id]){
  donjonunlock2[message.author.id] = {
    donjonunlock2: 0
  };

fs.writeFile("./donjonunlock2.json", JSON.stringify(donjonunlock2), (err) => {
  if (err) console.log(err)
});
}
if(!donjonunlock3[message.author.id]){
  donjonunlock3[message.author.id] = {
    donjonunlock3: 0
  };

fs.writeFile("./donjonunlock3.json", JSON.stringify(donjonunlock3), (err) => {
  if (err) console.log(err)
});
}
if(!donjonunlock4[message.author.id]){
  donjonunlock4[message.author.id] = {
    donjonunlock4: 0
  };

fs.writeFile("./donjonunlock4.json", JSON.stringify(donjonunlock4), (err) => {
  if (err) console.log(err)
});
}
if(!donjonunlock5[message.author.id]){
  donjonunlock5[message.author.id] = {
    donjonunlock5: 0
  };

fs.writeFile("./donjonunlock5.json", JSON.stringify(donjonunlock5), (err) => {
  if (err) console.log(err)
});
}
if(!dailypoints[message.author.id]){
  dailypoints[message.author.id] = {
    dailypoints: 0
  };

fs.writeFile("./dailypoints.json", JSON.stringify(dailypoints), (err) => {
  if (err) console.log(err)
});
}
   if(!Looting[message.author.id]){
    Looting[message.author.id] = {
      Looting: 0
    };

  fs.writeFile("./Looting.json", JSON.stringify(Looting), (err) => {
    if (err) console.log(err)
  });
}
if(!writesupreme[message.author.id]){
  writesupreme[message.author.id] = {
    writesupreme: Math.floor(Math.random() * 100) + 1
  };

fs.writeFile("./writesupreme.json", JSON.stringify(writesupreme), (err) => {
  if (err) console.log(err)
});
}
if(!writemystery[message.author.id]){
  writemystery[message.author.id] = {
    writemystery: Math.floor(Math.random() * 100) + 1
  };

fs.writeFile("./writemystery.json", JSON.stringify(writemystery), (err) => {
  if (err) console.log(err)
});
}
if(!writegold[message.author.id]){
  writegold[message.author.id] = {
    writegold: Math.floor(Math.random() * 100) + 1
  };

fs.writeFile("./writegold.json", JSON.stringify(writegold), (err) => {
  if (err) console.log(err)
});
}
if(!writeplegend[message.author.id]){
  writeplegend[message.author.id] = {
    writeplegend: Math.floor(Math.random() * 200) + 1
  };

fs.writeFile("./writeplegend.json", JSON.stringify(writeplegend), (err) => {
  if (err) console.log(err)
});
}
if(!writeepic[message.author.id]){
  writeepic[message.author.id] = {
    writeepic: Math.floor(Math.random() * 100) + 1
  };

fs.writeFile("./writeepic.json", JSON.stringify(writeepic), (err) => {
  if (err) console.log(err)
});
}
if(!writepepic[message.author.id]){
  writepepic[message.author.id] = {
    writepepic: Math.floor(Math.random() * 100) + 1
  };

fs.writeFile("./writepepic.json", JSON.stringify(writepepic), (err) => {
  if (err) console.log(err)
});
}
if(!writerare[message.author.id]){
  writerare[message.author.id] = {
    writerare: Math.floor(Math.random() * 100) + 1
  };

fs.writeFile("./writerare.json", JSON.stringify(writerare), (err) => {
  if (err) console.log(err)
});
}
if(!writeprare[message.author.id]){
  writeprare[message.author.id] = {
    writeprare: Math.floor(Math.random() * 100) + 1
  };

fs.writeFile("./writeprare.json", JSON.stringify(writeprare), (err) => {
  if (err) console.log(err)
});
}
if(!writecommon[message.author.id]){
  writecommon[message.author.id] = {
    writecommon: Math.floor(Math.random() * 100) + 1
  };

fs.writeFile("./writecommon.json", JSON.stringify(writecommon), (err) => {
  if (err) console.log(err)
});
}
if(!writepcommon[message.author.id]){
  writepcommon[message.author.id] = {
    writepcommon: Math.floor(Math.random() * 100) + 1
  };

fs.writeFile("./writepcommon.json", JSON.stringify(writepcommon), (err) => {
  if (err) console.log(err)
});
}
if(!boxcommune[message.author.id]){
  boxcommune[message.author.id] = {
    boxcommune: 0
  };

fs.writeFile("./boxcommune.json", JSON.stringify(boxcommune), (err) => {
  if (err) console.log(err)
});
}
if(!boxrare[message.author.id]){
  boxrare[message.author.id] = {
    boxrare: 0
  };

fs.writeFile("./boxrare.json", JSON.stringify(boxrare), (err) => {
  if (err) console.log(err)
});
}
if(!etage2[message.author.id]){
  etage2[message.author.id] = {
    etage2: 0
  };

fs.writeFile("./etage2.json", JSON.stringify(etage2), (err) => {
  if (err) console.log(err)
});
}
if(!etage3[message.author.id]){
  etage3[message.author.id] = {
    etage3: 0
  };

fs.writeFile("./etage3.json", JSON.stringify(etage3), (err) => {
  if (err) console.log(err)
});
}
if(!etage5[message.author.id]){
  etage5[message.author.id] = {
    etage5: 0
  };

fs.writeFile("./etage5.json", JSON.stringify(etage5), (err) => {
  if (err) console.log(err)
});
}
if(!etage4[message.author.id]){
  etage4[message.author.id] = {
    etage4: 0
  };

fs.writeFile("./etage4.json", JSON.stringify(etage4), (err) => {
  if (err) console.log(err)
});
}
if(!boxepique[message.author.id]){
  boxepique[message.author.id] = {
    boxepique: 0
  };

fs.writeFile("./boxepique.json", JSON.stringify(boxepique), (err) => {
  if (err) console.log(err)
});
}
if(!timeparch[message.author.id]){
  timeparch[message.author.id] = {
    timeparch: 0
  };

fs.writeFile("./timeparch.json", JSON.stringify(timeparch), (err) => {
  if (err) console.log(err)
});
}
if(!mysterybox[message.author.id]){
  mysterybox[message.author.id] = {
    mysterybox: 0
  };

fs.writeFile("./mysterybox.json", JSON.stringify(mysterybox), (err) => {
  if (err) console.log(err)
});
}
if(!goldbox[message.author.id]){
  goldbox[message.author.id] = {
    goldbox: 0
  };

fs.writeFile("./goldbox.json", JSON.stringify(goldbox), (err) => {
  if (err) console.log(err)
});
}
if(!supremebox[message.author.id]){
  supremebox[message.author.id] = {
    supremebox: 0
  };

fs.writeFile("./supremebox.json", JSON.stringify(supremebox), (err) => {
  if (err) console.log(err)
});
}

if(!etoilef[message.author.id]){
  etoilef[message.author.id] = {
    etoilef: 0
  };

  fs.writeFile("./etoilef.json", JSON.stringify(etoilef), (err) => {
    if (err) console.log(err)
  });
}
if(!etoileh[message.author.id]){
  etoileh[message.author.id] = {
    etoileh: 0
  };

  fs.writeFile("./etoileh.json", JSON.stringify(etoileh), (err) => {
    if (err) console.log(err)
  });
}
if(!Pvmax[message.author.id]){
  Pvmax[message.author.id] = {
    Pvmax: 10
  };
fs.writeFile("./Pvmax.json", JSON.stringify(Pvmax), (err) => {
  if (err) console.log(err)
});
}
let nbchest =  require("./nbchest.json");
let nbchest2 =  require("./nbchest2.json");
let nbchest3 =  require("./nbchest3.json");
let nbchest4 =  require("./nbchest4.json");
let nbchest5 =  require("./nbchest5.json");
let uboxcommune = boxcommune[message.author.id].boxcommune
let uboxrare = boxrare[message.author.id].boxrare
let uboxepique = boxepique[message.author.id].boxepique
let umysterybox = mysterybox[message.author.id].mysterybox
let ugoldbox = goldbox[message.author.id].goldbox
let usupremebox = supremebox[message.author.id].supremebox
let utimeparch = timeparch[message.author.id].timeparch
let uatelier = atelier[message.author.id].atelier
if(!nbchest[message.author.id]){
  nbchest[message.author.id] = {
    nbchest: Math.floor(Math.random() * 100) + 1
 };
fs.writeFile("./nbchest.json", JSON.stringify(nbchest), (err) => {
 if (err) console.log(err)
});
}
if(!nbchest2[message.author.id]){
  nbchest2[message.author.id] = {
    nbchest2: Math.floor(Math.random() * 100) + 1
 };
fs.writeFile("./nbchest2.json", JSON.stringify(nbchest2), (err) => {
 if (err) console.log(err)
});
}
if(!nbchest3[message.author.id]){
  nbchest3[message.author.id] = {
    nbchest3: Math.floor(Math.random() * 100) + 1
 };
fs.writeFile("./nbchest3.json", JSON.stringify(nbchest3), (err) => {
 if (err) console.log(err)
});
}
if(!nbchest4[message.author.id]){
  nbchest4[message.author.id] = {
    nbchest4: Math.floor(Math.random() * 100) + 1
 };
fs.writeFile("./nbchest4.json", JSON.stringify(nbchest4), (err) => {
 if (err) console.log(err)
});
}
if(!nbchest5[message.author.id]){
  nbchest5[message.author.id] = {
    nbchest5: Math.floor(Math.random() * 100) + 1
 };
fs.writeFile("./nbchest5.json", JSON.stringify(nbchest5), (err) => {
 if (err) console.log(err)
});
}
let unbchest = nbchest[message.author.id].nbchest
let unbchest2 = nbchest2[message.author.id].nbchest2
let unbchest3 = nbchest3[message.author.id].nbchest3
let unbchest4 = nbchest4[message.author.id].nbchest4
let unbchest5 = nbchest5[message.author.id].nbchest5
let udailypoints = dailypoints[message.author.id].dailypoints

if(!etage[message.author.id]){
   etage[message.author.id] = {
     etage: 0
  };
fs.writeFile("./etage.json", JSON.stringify(etage), (err) => {
  if (err) console.log(err)
});
}
if(!Pieceor[message.author.id]){
  Pieceor[message.author.id] = {
    Pieceor: 0
 };
fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
 if (err) console.log(err)
});
}
if(!Pv[message.author.id]){
  Pv[message.author.id] = {
    Pv: 10
  };

fs.writeFile("./Pv.json", JSON.stringify(Pv), (err) => {
  if (err) console.log(err)
});
}
if(!admin[message.author.id]){
  admin[message.author.id] = {
    admin: 0
  };

fs.writeFile("./admins.json", JSON.stringify(admin), (err) => {
  if (err) console.log(err)
});
}

if(!Héro[message.author.id]){
  Héro[message.author.id] = {
    Héro: heronumber
  };

fs.writeFile("./Héro.json", JSON.stringify(Héro), (err) => {
  if (err) console.log(err)
});
}
if(!Atk[message.author.id]){
  Atk[message.author.id] = {
    Atk: 2.5
  };

fs.writeFile("./Atk.json", JSON.stringify(Atk), (err) => {
  if (err) console.log(err)
});
}

 
if(!Def[message.author.id]){
  Def[message.author.id] = {
    Def: 2
  };

fs.writeFile("./Def.json", JSON.stringify(Def), (err) => {
  if (err) console.log(err)
});
}
if(!Epee[message.author.id]){
  Epee[message.author.id] = {
    Epee: 1
  };

fs.writeFile("./Epee.json", JSON.stringify(Epee), (err) => {
  if (err) console.log(err)
});
}
if(!Bouclier[message.author.id]){
  Bouclier[message.author.id] = {
    Bouclier: 1
  };

fs.writeFile("./Bouclier.json", JSON.stringify(Bouclier), (err) => {
  if (err) console.log(err)
});
}



if(!XPBoost[message.author.id]){
  XPBoost[message.author.id] = {
    XPBoost: 0
  };

fs.writeFile("./XPBoost.json", JSON.stringify(XPBoost), (err) => {
  if (err) console.log(err)
});
}

if(!TimerReduc[message.author.id]){
  TimerReduc[message.author.id] = {
    TimerReduc: 0
  };

fs.writeFile("./TimerReduc.json", JSON.stringify(TimerReduc), (err) => {
  if (err) console.log(err)
});
}

if(!Attaque[message.author.id]){
  Attaque[message.author.id] = {
    Attaque: 0
  };

fs.writeFile("./Attaque.json", JSON.stringify(Attaque), (err) => {
  if (err) console.log(err)
});
}

if(!Défense[message.author.id]){
  Défense[message.author.id] = {
    Défense: 0
  };

fs.writeFile("./Défense.json", JSON.stringify(Défense), (err) => {
  if (err) console.log(err)
});
}
  

  if(!RxCoins[message.author.id]){
    RxCoins[message.author.id] = {
      RxCoins: 0
    };

  fs.writeFile("./RxCoins.json", JSON.stringify(RxCoins), (err) => {
    if (err) console.log(err)
  });
}

 
let uetoilef = etoilef[message.author.id].etoilef
let uetoileh = etoileh[message.author.id].etoileh

 

  if(!xpclasse[message.author.id]){
    xpclasse[message.author.id] = {
      xpclasse: 0,
      levelclasse: 1
    };
  }
  let skin1 = require("./skin1.json");
  let skin2 = require("./skin2.json");
  let skin3 = require("./skin3.json");
  let skin4 = require("./skin4.json");
  let skin5 = require("./skin5.json");
  let skin6 = require("./skin6.json");
  let skin7 = require("./skin7.json");
  let skin8 = require("./skin8.json");
  let skin9 = require("./skin9.json");
  let skin10 = require("./skin10.json");
  let skin11 = require("./skin11.json");
  let skin12 = require("./skin12.json");
  let skin13 = require("./skin13.json");
  let skin14 = require("./skin14.json");
  let skin15 = require("./skin15.json");
  let skin16 = require("./skin16.json");
  let skin17 = require("./skin17.json");
  let skin18 = require("./skin18.json");
  let skin19 = require("./skin19.json");
  let skin20 = require("./skin20.json");
  let skin21 = require("./skin21.json");
  let skin22 = require("./skin22.json");
  let skin23 = require("./skin23.json");
  let skin24 = require("./skin24.json");
  let skin25 = require("./skin25.json");
  let skin26 = require("./skin26.json");
  let skin27 = require("./skin27.json");
  let skin28 = require("./skin28.json");
  let skin29 = require("./skin29.json");
  let skin30 = require("./skin30.json");
  let skin31 = require("./skin31.json");
  let skin32 = require("./skin32.json");
  let skin33 = require("./skin33.json");
  let skin34 = require("./skin34.json");
  let skin35 = require("./skin35.json");
  let skin36 = require("./skin36.json");
  let skin37 = require("./skin37.json");
  let skin38 = require("./skin38.json");
  let skin39 = require("./skin39.json");
  let skin40 = require("./skin40.json")
let skin41 = require("./skin41.json")
let skin42 = require("./skin42.json")


  let armeb1 = require("./armeb1.json");
  let armeb2 = require("./armeb2.json");
  let armeb3 = require("./armeb3.json");
  let armeb4 = require("./armeb4.json");
  let armeb5 = require("./armeb5.json");
  let armeb6 = require("./armeb6.json");
  let armeb7 = require("./armeb7.json");
  let armeb8 = require("./armeb8.json");
  let armeb9 = require("./armeb9.json");
  let armeb10 = require("./armeb10.json");
  let armeb11 = require("./armeb11.json");
  let armeb12 = require("./armeb12.json");
  let armeb13 = require("./armeb13.json");
  let armeb14 = require("./armeb14.json");
  let armeb15 = require("./armeb15.json");
  let armeb16 = require("./armeb16.json");
  let armeb17 = require("./armeb17.json");
  let armeb18 = require("./armeb18.json");
  let armeb19 = require("./armeb19.json");
  let armeb20 = require("./armeb20.json");
  let armeb21 = require("./armeb21.json");
  let armeb22 = require("./armeb22.json");
  let armeb23 = require("./armeb23.json");
  let armeb24 = require("./armeb24.json");
  let armeb25 = require("./armeb25.json");
  let armeb26 = require("./armeb26.json");
  let armeb27 = require("./armeb27.json");
  let armeb28 = require("./armeb28.json");
  let armeb29 = require("./armeb29.json");
  let armeb30 = require("./armeb30.json");
  let armeb31 = require("./armeb31.json");
  let armeb32 = require("./armeb32.json");
  let armeb33 = require("./armeb33.json");
  let armeb34 = require("./armeb34.json");
  let armeb35 = require("./armeb35.json");
  let armeb36 = require("./armeb36.json");
  let armeb37 = require("./armeb37.json");
  let armeb38 = require("./armeb38.json");
  let armeb39 = require("./armeb39.json");
  let armeb40 = require("./armeb40.json")
  let armeb41 = require("./armeb41.json")
  let armeb42 = require("./armeb42.json")
  let armeb43 = require("./armeb43.json")
  let armeb44 = require("./armeb44.json")
  let gemme1 = require("./gemme1.json");
  let gemme2 = require("./gemme2.json");
  let gemme3 = require("./gemme3.json");
  let gemme4 = require("./gemme4.json");
  let gemme5 = require("./gemme5.json");
  if(!gemme1[message.author.id]){
    gemme1[message.author.id] = {
      gemme1: 0
    };
  
  fs.writeFile("./gemme1.json", JSON.stringify(gemme1), (err) => {
    if (err) console.log(err)
  });
  }
  if(!gemme2[message.author.id]){
    gemme2[message.author.id] = {
      gemme2: 0
    };
  
  fs.writeFile("./gemme2.json", JSON.stringify(gemme2), (err) => {
    if (err) console.log(err)
  });
  }
  if(!gemme3[message.author.id]){
    gemme3[message.author.id] = {
      gemme3: 0
    };
  
  fs.writeFile("./gemme3.json", JSON.stringify(gemme3), (err) => {
    if (err) console.log(err)
  });
  }
  if(!gemme4[message.author.id]){
    gemme4[message.author.id] = {
      gemme4: 0
    };
  
  fs.writeFile("./gemme4.json", JSON.stringify(gemme4), (err) => {
    if (err) console.log(err)
  });
  }
  if(!gemme5[message.author.id]){
    gemme5[message.author.id] = {
      gemme5: 0
    };
  
  fs.writeFile("./gemme5.json", JSON.stringify(gemme5), (err) => {
    if (err) console.log(err)
  });
  }
  let ugemme1 = gemme1[message.author.id].gemme1
  let ugemme2 = gemme2[message.author.id].gemme2
  let ugemme3 = gemme3[message.author.id].gemme3
  let ugemme4 = gemme4[message.author.id].gemme4
  let ugemme5 = gemme5[message.author.id].gemme5

  if(!armeb1[message.author.id]){
    armeb1[message.author.id] = {
      armeb1: 0
    };
  
  fs.writeFile("./armeb1.json", JSON.stringify(armeb1), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb2[message.author.id]){
    armeb2[message.author.id] = {
      armeb2: 0
    };
  
  fs.writeFile("./armeb2.json", JSON.stringify(armeb2), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb3[message.author.id]){
    armeb3[message.author.id] = {
      armeb3: 0
    };
  
  fs.writeFile("./armeb3.json", JSON.stringify(armeb3), (err) => {
    if (err) console.log(err)
  });
  }

  if(!armeb4[message.author.id]){
    armeb4[message.author.id] = {
      armeb4: 0
    };
  
  fs.writeFile("./armeb4.json", JSON.stringify(armeb4), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb5[message.author.id]){
    armeb5[message.author.id] = {
      armeb5: 0
    };
  
  fs.writeFile("./armeb5.json", JSON.stringify(armeb5), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb6[message.author.id]){
    armeb6[message.author.id] = {
      armeb6: 0
    };
  
  fs.writeFile("./armeb6.json", JSON.stringify(armeb6), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb7[message.author.id]){
    armeb7[message.author.id] = {
      armeb7: 0
    };
  
  fs.writeFile("./armeb7.json", JSON.stringify(armeb7), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb8[message.author.id]){
    armeb8[message.author.id] = {
      armeb8: 0
    };
  
  fs.writeFile("./armeb8.json", JSON.stringify(armeb8), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb9[message.author.id]){
    armeb9[message.author.id] = {
      armeb9: 0
    };
  
  fs.writeFile("./armeb9.json", JSON.stringify(armeb9), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb10[message.author.id]){
    armeb10[message.author.id] = {
      armeb10: 0
    };
  
  fs.writeFile("./armeb10.json", JSON.stringify(armeb10), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb11[message.author.id]){
    armeb11[message.author.id] = {
      armeb11: 0
    };
  
  fs.writeFile("./armeb11.json", JSON.stringify(armeb11), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb12[message.author.id]){
    armeb12[message.author.id] = {
      armeb12: 0
    };
  
  fs.writeFile("./armeb12.json", JSON.stringify(armeb12), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb13[message.author.id]){
    armeb13[message.author.id] = {
      armeb13: 0
    };
  
  fs.writeFile("./armeb13.json", JSON.stringify(armeb13), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb14[message.author.id]){
    armeb14[message.author.id] = {
      armeb14: 0
    };
  
  fs.writeFile("./armeb14.json", JSON.stringify(armeb14), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb15[message.author.id]){
    armeb15[message.author.id] = {
      armeb15: 0
    };
  
  fs.writeFile("./armeb15.json", JSON.stringify(armeb15), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb16[message.author.id]){
    armeb16[message.author.id] = {
      armeb16: 0
    };
  
  fs.writeFile("./armeb16.json", JSON.stringify(armeb16), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb17[message.author.id]){
    armeb17[message.author.id] = {
      armeb17: 0
    };
  
  fs.writeFile("./armeb17.json", JSON.stringify(armeb17), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb18[message.author.id]){
    armeb18[message.author.id] = {
      armeb18: 0
    };
  
  fs.writeFile("./armeb18.json", JSON.stringify(armeb18), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb19[message.author.id]){
    armeb19[message.author.id] = {
      armeb19: 0
    };
  
  fs.writeFile("./armeb19.json", JSON.stringify(armeb19), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb20[message.author.id]){
    armeb20[message.author.id] = {
      armeb20: 0
    };
  
  fs.writeFile("./armeb20.json", JSON.stringify(armeb20), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb21[message.author.id]){
    armeb21[message.author.id] = {
      armeb21: 0
    };
  
  fs.writeFile("./armeb21.json", JSON.stringify(armeb21), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb22[message.author.id]){
    armeb22[message.author.id] = {
      armeb22: 0
    };
  
  fs.writeFile("./armeb22.json", JSON.stringify(armeb22), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb23[message.author.id]){
    armeb23[message.author.id] = {
      armeb23: 0
    };
  
  fs.writeFile("./armeb23.json", JSON.stringify(armeb23), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb24[message.author.id]){
    armeb24[message.author.id] = {
      armeb24: 0
    };
  
  fs.writeFile("./armeb24.json", JSON.stringify(armeb24), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb25[message.author.id]){
    armeb25[message.author.id] = {
      armeb25: 0
    };
  
  fs.writeFile("./armeb25.json", JSON.stringify(armeb25), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb26[message.author.id]){
    armeb26[message.author.id] = {
      armeb26: 0
    };
  
  fs.writeFile("./armeb26.json", JSON.stringify(armeb26), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb27[message.author.id]){
    armeb27[message.author.id] = {
      armeb27: 0
    };
  
  fs.writeFile("./armeb27.json", JSON.stringify(armeb27), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb28[message.author.id]){
    armeb28[message.author.id] = {
      armeb28: 0
    };
  
  fs.writeFile("./armeb28.json", JSON.stringify(armeb28), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb29[message.author.id]){
    armeb29[message.author.id] = {
      armeb29: 0
    };
  
  fs.writeFile("./armeb29.json", JSON.stringify(armeb29), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb30[message.author.id]){
    armeb30[message.author.id] = {
      armeb30: 0
    };
  
  fs.writeFile("./armeb30.json", JSON.stringify(armeb30), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb31[message.author.id]){
    armeb31[message.author.id] = {
      armeb31: 0
    };
  
  fs.writeFile("./armeb31.json", JSON.stringify(armeb31), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb32[message.author.id]){
    armeb32[message.author.id] = {
      armeb32: 0
    };
  
  fs.writeFile("./armeb32.json", JSON.stringify(armeb32), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb33[message.author.id]){
    armeb33[message.author.id] = {
      armeb33: 0
    };
  
  fs.writeFile("./armeb33.json", JSON.stringify(armeb33), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb34[message.author.id]){
    armeb34[message.author.id] = {
      armeb34: 0
    };
  
  fs.writeFile("./armeb34.json", JSON.stringify(armeb34), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb35[message.author.id]){
    armeb35[message.author.id] = {
      armeb35: 0
    };
  
  fs.writeFile("./armeb35.json", JSON.stringify(armeb35), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb36[message.author.id]){
    armeb36[message.author.id] = {
      armeb36: 0
    };
  
  fs.writeFile("./armeb36.json", JSON.stringify(armeb36), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb37[message.author.id]){
    armeb37[message.author.id] = {
      armeb37: 0
    };
  
  fs.writeFile("./armeb37.json", JSON.stringify(armeb37), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb38[message.author.id]){
    armeb38[message.author.id] = {
      armeb38: 0
    };
  
  fs.writeFile("./armeb38.json", JSON.stringify(armeb38), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb39[message.author.id]){
    armeb39[message.author.id] = {
      armeb39: 0
    };
  
  fs.writeFile("./armeb39.json", JSON.stringify(armeb39), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb40[message.author.id]){
    armeb40[message.author.id] = {
      armeb40: 0
    };
  
  fs.writeFile("./armeb40.json", JSON.stringify(armeb40), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb41[message.author.id]){
    armeb41[message.author.id] = {
      armeb41: 0
    };
  
  fs.writeFile("./armeb41.json", JSON.stringify(armeb41), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb42[message.author.id]){
    armeb42[message.author.id] = {
      armeb42: 0
    };
  
  fs.writeFile("./armeb42.json", JSON.stringify(armeb42), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb43[message.author.id]){
    armeb43[message.author.id] = {
      armeb43: 0
    };
  
  fs.writeFile("./armeb43.json", JSON.stringify(armeb43), (err) => {
    if (err) console.log(err)
  });
  }
  if(!armeb44[message.author.id]){
    armeb44[message.author.id] = {
      armeb44: 0
    };
  
  fs.writeFile("./armeb44.json", JSON.stringify(armeb44), (err) => {
    if (err) console.log(err)
  });
  }
  let item1 = require("./item1.json");
  let item2 = require("./item2.json");
  let item3 = require("./item3.json");
  let item4 = require("./item4.json");
  let item5 = require("./item5.json");
  let item6 = require("./item6.json");
  let item7 = require("./item7.json");
  let item8 = require("./item8.json");
  let item9 = require("./item9.json");
  let item10 = require("./item10.json");
  let item11 = require("./item11.json");
  let item12 = require("./item12.json");
  let item13 = require("./item13.json");
  let item14 = require("./item14.json");
  let item15 = require("./item15.json");
  let item16 = require("./item16.json");
  let item17 = require("./item17.json");
  let item18 = require("./item18.json");
  let item19 = require("./item19.json");
  let item20 = require("./item20.json");
  let item21 = require("./item21.json");
  let item22 = require("./item22.json");
  let item23 = require("./item23.json");
  let item24 = require("./item24.json");
  let item25 = require("./item25.json");
  let item26 = require("./item26.json");
  let item27 = require("./item27.json");
  let item28 = require("./item28.json");
  let item29 = require("./item29.json");
  let item30 = require("./item30.json");
  let item31 = require("./item31.json");
  let item32 = require("./item32.json");
  let item33 = require("./item33.json");
  let item34 = require("./item34.json");
  let item35 = require("./item35.json");
  let item36 = require("./item36.json");
  let item37 = require("./item37.json");
  let item38 = require("./item38.json");
  let item39 = require("./item39.json");
  let item40 = require("./item40.json");
  let item41 = require("./item41.json");
  let item42 = require("./item42.json");
  let item43 = require("./item43.json");
  let item44 = require("./item44.json");
  if(!item1[message.author.id]){
    item1[message.author.id] = {
      item1: 0
    };
  
  fs.writeFile("./item1.json", JSON.stringify(item1), (err) => {
    if (err) console.log(err)
  });
  }
  
  if(!item2[message.author.id]){
    item2[message.author.id] = {
      item2: 0
    };
  
  fs.writeFile("./item2.json", JSON.stringify(item2), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item3[message.author.id]){
    item3[message.author.id] = {
      item3: 0
    };
  
  fs.writeFile("./item3.json", JSON.stringify(item3), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item4[message.author.id]){
    item4[message.author.id] = {
      item4: 0
    };
  
  fs.writeFile("./item4.json", JSON.stringify(item4), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item5[message.author.id]){
    item5[message.author.id] = {
      item5: 0
    };
  
  fs.writeFile("./item5.json", JSON.stringify(item5), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item6[message.author.id]){
    item6[message.author.id] = {
      item6: 0
    };
  
  fs.writeFile("./item6.json", JSON.stringify(item6), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item7[message.author.id]){
    item7[message.author.id] = {
      item7: 0
    };
  
  fs.writeFile("./item7.json", JSON.stringify(item7), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item8[message.author.id]){
    item8[message.author.id] = {
      item8: 0
    };
  
  fs.writeFile("./item8.json", JSON.stringify(item8), (err) => {
    if (err) console.log(err)
  });
  }
  
  if(!item9[message.author.id]){
    item9[message.author.id] = {
      item9: 0
    };
  
  fs.writeFile("./item9.json", JSON.stringify(item9), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item10[message.author.id]){
    item10[message.author.id] = {
      item10: 0
    };
  
  fs.writeFile("./item10.json", JSON.stringify(item10), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item11[message.author.id]){
    item11[message.author.id] = {
      item11: 0
    };
  
  fs.writeFile("./item11.json", JSON.stringify(item11), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item12[message.author.id]){
    item12[message.author.id] = {
      item12: 0
    };
  
  fs.writeFile("./item12.json", JSON.stringify(item12), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item13[message.author.id]){
    item13[message.author.id] = {
      item13: 0
    };
  
  fs.writeFile("./item13.json", JSON.stringify(item13), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item14[message.author.id]){
    item14[message.author.id] = {
      item14: 0
    };
  
  fs.writeFile("./item14.json", JSON.stringify(item14), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item15[message.author.id]){
    item15[message.author.id] = {
      item15: 0
    };
  
  fs.writeFile("./item15.json", JSON.stringify(item15), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item16[message.author.id]){
    item16[message.author.id] = {
      item16: 0
    };
  
  fs.writeFile("./item16.json", JSON.stringify(item16), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item17[message.author.id]){
    item17[message.author.id] = {
      item17: 0
    };
  
  fs.writeFile("./item17.json", JSON.stringify(item17), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item18[message.author.id]){
    item18[message.author.id] = {
      item18: 0
    };
  
  fs.writeFile("./item18.json", JSON.stringify(item18), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item19[message.author.id]){
    item19[message.author.id] = {
      item19: 0
    };
  
  fs.writeFile("./item19.json", JSON.stringify(item19), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item20[message.author.id]){
    item20[message.author.id] = {
      item20: 0
    };
  
  fs.writeFile("./item20.json", JSON.stringify(item20), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item21[message.author.id]){
    item21[message.author.id] = {
      item21: 0
    };
  
  fs.writeFile("./item21.json", JSON.stringify(item21), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item22[message.author.id]){
    item22[message.author.id] = {
      item22: 0
    };
  
  fs.writeFile("./item22.json", JSON.stringify(item22), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item23[message.author.id]){
    item23[message.author.id] = {
      item23: 0
    };
  
  fs.writeFile("./item23.json", JSON.stringify(item23), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item24[message.author.id]){
    item24[message.author.id] = {
      item24: 0
    };
  
  fs.writeFile("./item24.json", JSON.stringify(item24), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item25[message.author.id]){
    item25[message.author.id] = {
      item25: 0
    };
  
  fs.writeFile("./item25.json", JSON.stringify(item25), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item26[message.author.id]){
    item26[message.author.id] = {
      item26: 0
    };
  
  fs.writeFile("./item26.json", JSON.stringify(item26), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item27[message.author.id]){
    item27[message.author.id] = {
      item27: 0
    };
  
  fs.writeFile("./item27.json", JSON.stringify(item27), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item28[message.author.id]){
    item28[message.author.id] = {
      item28: 0
    };
  
  fs.writeFile("./item28.json", JSON.stringify(item28), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item29[message.author.id]){
    item29[message.author.id] = {
      item29: 0
    };
  
  fs.writeFile("./item29.json", JSON.stringify(item29), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item30[message.author.id]){
    item30[message.author.id] = {
      item30: 0
    };
  
  fs.writeFile("./item30.json", JSON.stringify(item30), (err) => {
    if (err) console.log(err)
  });
  }
  let fragments = require("./fragments.json");

if(!fragments[message.author.id]){
    fragments[message.author.id] = {
      fragments: 0
    };

  fs.writeFile("./fragments.json", JSON.stringify(fragments), (err) => {
    if (err) console.log(err)
  });
}
let ufragments = fragments[message.author.id].fragments

  if(!item31[message.author.id]){
    item31[message.author.id] = {
      item31: 0
    };
  
  fs.writeFile("./item31.json", JSON.stringify(item31), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item32[message.author.id]){
    item32[message.author.id] = {
      item32: 0
    };
  
  fs.writeFile("./item32.json", JSON.stringify(item32), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item33[message.author.id]){
    item33[message.author.id] = {
      item33: 0
    };
  
  fs.writeFile("./item33.json", JSON.stringify(item33), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item34[message.author.id]){
    item34[message.author.id] = {
      item34: 0
    };
  
  fs.writeFile("./item34.json", JSON.stringify(item34), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item35[message.author.id]){
    item35[message.author.id] = {
      item35: 0
    };
  
  fs.writeFile("./item35.json", JSON.stringify(item35), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item36[message.author.id]){
    item36[message.author.id] = {
      item36: 0
    };
  
  fs.writeFile("./item36.json", JSON.stringify(item36), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item37[message.author.id]){
    item37[message.author.id] = {
      item37: 0
    };
  
  fs.writeFile("./item37.json", JSON.stringify(item37), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item38[message.author.id]){
    item38[message.author.id] = {
      item38: 0
    };
  
  fs.writeFile("./item38.json", JSON.stringify(item38), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item39[message.author.id]){
    item39[message.author.id] = {
      item39: 0
    };
  
  fs.writeFile("./item39.json", JSON.stringify(item39), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item40[message.author.id]){
    item40[message.author.id] = {
      item40: 0
    };
  
  fs.writeFile("./item40.json", JSON.stringify(item40), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item41[message.author.id]){
    item41[message.author.id] = {
      item41: 0
    };
  
  fs.writeFile("./item41.json", JSON.stringify(item41), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item42[message.author.id]){
    item42[message.author.id] = {
      item42: 0
    };
  
  fs.writeFile("./item42.json", JSON.stringify(item42), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item43[message.author.id]){
    item43[message.author.id] = {
      item43: 0
    };
  
  fs.writeFile("./item43.json", JSON.stringify(item43), (err) => {
    if (err) console.log(err)
  });
  }
  if(!item44[message.author.id]){
    item44[message.author.id] = {
      item44: 0
    };
  
  fs.writeFile("./item44.json", JSON.stringify(item44), (err) => {
    if (err) console.log(err)
  });
  }
  let uitem1 = item1[message.author.id].item1;
  let uitem2 = item2[message.author.id].item2;
  let uitem3 = item3[message.author.id].item3;
  let uitem4 = item4[message.author.id].item4;
  let uitem5 = item5[message.author.id].item5;
  let uitem6 = item6[message.author.id].item6;
  let uitem7 = item7[message.author.id].item7;
  let uitem8 = item8[message.author.id].item8;
  let uitem9 = item9[message.author.id].item9;
  let uitem10 = item10[message.author.id].item10;
  let uitem11 = item11[message.author.id].item11;
  let uitem12 = item12[message.author.id].item12;
  let uitem13 = item13[message.author.id].item13;
  let uitem14 = item14[message.author.id].item14;
  let uitem15 = item15[message.author.id].item15;
  let uitem16 = item16[message.author.id].item16;
  
  let uitem17 = item17[message.author.id].item17;
  let uitem18 = item18[message.author.id].item18;
  let uitem19 = item19[message.author.id].item19;
  let uitem20 = item20[message.author.id].item20;
  let uitem21 = item21[message.author.id].item21;
  let uitem22 = item22[message.author.id].item22;
  let uitem23 = item23[message.author.id].item23;
  let uitem24 = item24[message.author.id].item24;
  let uitem25 = item25[message.author.id].item25;
  let uitem26 = item26[message.author.id].item26;
  let uitem27 = item27[message.author.id].item27;
  let uitem28 = item28[message.author.id].item28;
  let uitem29 = item29[message.author.id].item29;
  let uitem30 = item30[message.author.id].item30;
  let uitem31 = item31[message.author.id].item31;
  let uitem32 = item32[message.author.id].item32;
  
  let uitem33 = item33[message.author.id].item33;
  let uitem34 = item34[message.author.id].item34;
  let uitem35 = item35[message.author.id].item35;
  let uitem36 = item36[message.author.id].item36;
  let uitem37 = item37[message.author.id].item37;
  let uitem38 = item38[message.author.id].item38;
  let uitem39 = item39[message.author.id].item39;
  let uitem40 = item40[message.author.id].item40;
  let uitem41 = item41[message.author.id].item41;
  let uitem42 = item42[message.author.id].item42;
  let uitem43 = item43[message.author.id].item43;
  let uitem44 = item44[message.author.id].item44;
  let uarmeb1 = armeb1[message.author.id].armeb1;
  let uarmeb2 = armeb2[message.author.id].armeb2;
  let uarmeb3 = armeb3[message.author.id].armeb3;
  let uarmeb4 = armeb4[message.author.id].armeb4;
  let uarmeb5 = armeb5[message.author.id].armeb5;
  let uarmeb6 = armeb6[message.author.id].armeb6;
  let uarmeb7 = armeb7[message.author.id].armeb7;
  let uarmeb8 = armeb8[message.author.id].armeb8;
  let uarmeb9 = armeb9[message.author.id].armeb9;
  let uarmeb10 = armeb10[message.author.id].armeb10;
  let uarmeb11 = armeb11[message.author.id].armeb11;
  let uarmeb12 = armeb12[message.author.id].armeb12;
  let uarmeb13 = armeb13[message.author.id].armeb13;
  let uarmeb14 = armeb14[message.author.id].armeb14;
  let uarmeb15 = armeb15[message.author.id].armeb15;
  let uarmeb16 = armeb16[message.author.id].armeb16;
  let uarmeb17 = armeb17[message.author.id].armeb17;
  let uarmeb18 = armeb18[message.author.id].armeb18;
  let uarmeb19 = armeb19[message.author.id].armeb19;
  let uarmeb20 = armeb20[message.author.id].armeb20;
  let uarmeb21 = armeb21[message.author.id].armeb21;
  let uarmeb22 = armeb22[message.author.id].armeb22;
  let uarmeb23 = armeb23[message.author.id].armeb23;
  let uarmeb24 = armeb24[message.author.id].armeb24;
  let uarmeb25 = armeb25[message.author.id].armeb25;
  let uarmeb26 = armeb26[message.author.id].armeb26;
  let uarmeb27 = armeb27[message.author.id].armeb27;
  let uarmeb28 = armeb28[message.author.id].armeb28;
  let uarmeb29 = armeb29[message.author.id].armeb29;
  let uarmeb30 = armeb30[message.author.id].armeb30;
  let uarmeb31 = armeb31[message.author.id].armeb31;
  let uarmeb32 = armeb32[message.author.id].armeb32;
  let uarmeb33 = armeb33[message.author.id].armeb33;
  let uarmeb34 = armeb34[message.author.id].armeb34;
  let uarmeb35 = armeb35[message.author.id].armeb35;
  let uarmeb36 = armeb36[message.author.id].armeb36;
  let uarmeb37 = armeb37[message.author.id].armeb37;
  let uarmeb38 = armeb38[message.author.id].armeb38;
  let uarmeb39 = armeb39[message.author.id].armeb39;
  let uarmeb40 = armeb40[message.author.id].armeb40;
  let uarmeb41 = armeb41[message.author.id].armeb41;
  let uarmeb42 = armeb42[message.author.id].armeb42;
  let uarmeb43 = armeb43[message.author.id].armeb43;
  let uarmeb44 = armeb44[message.author.id].armeb44;

  let item1name = "???";
  let item1emote = "<:Interrogation:596735733386051584>";
  let item1atk = "?";
  let item1def = "?";
  let item1pv = "?";
  let item2name = "???";
  let item2emote = "<:Interrogation:596735733386051584>";
  let item2atk = "?";
  let item2def = "?";
  let item2pv = "?";
  let item3name = "???";
  let item3emote = "<:Interrogation:596735733386051584>";
  let item3atk = "?";
  let item3def = "?";
  let item3pv = "?";
  let item4name = "???";
  let item4emote = "<:Interrogation:596735733386051584>";
  let item4atk = "?";
  let item4def = "?";
  let item4pv = "?";
  let item5name = "???";
  let item5emote = "<:Interrogation:596735733386051584>";
  let item5atk = "?";
  let item5def = "?";
  let item5pv = "?";
  let item6name = "???";
  let item6emote = "<:Interrogation:596735733386051584>";
  let item6atk = "?";
  let item6def = "?";
  let item6pv = "?";
  let item7name = "???";
  let item7emote = "<:Interrogation:596735733386051584>";
  let item7atk = "?";
  let item7def = "?";
  let item7pv = "?";
  let item8name = "???";
  let item8emote = "<:Interrogation:596735733386051584>";
  let item8atk = "?";
  let item8def = "?";
  let item8pv = "?";
  let item9name = "???";
  let item9emote = "<:Interrogation:596735733386051584>";
  let item9atk = "?";
  let item9def = "?";
  let item9pv = "?";
  let item10name = "???";
  let item10emote = "<:Interrogation:596735733386051584>";
  let item10atk = "?";
  let item10def = "?";
  let item10pv = "?";
  let item11name = "???";
  let item11emote = "<:Interrogation:596735733386051584>";
  let item11atk = "?";
  let item11def = "?";
  let item11pv = "?";
  let item12name = "???";
  let item12emote = "<:Interrogation:596735733386051584>";
  let item12atk = "?";
  let item12def = "?";
  let item12pv = "?";
  let item13name = "???";
  let item13emote = "<:Interrogation:596735733386051584>";
  let item13atk = "?";
  let item13def = "?";
  let item13pv = "?";
  let item14name = "???";
  let item14emote = "<:Interrogation:596735733386051584>";
  let item14atk = "?";
  let item14def = "?";
  let item14pv = "?";
  let item15name = "???";
  let item15emote = "<:Interrogation:596735733386051584>";
  let item15atk = "?";
  let item15def = "?";
  let item15pv = "?";
  let item16name = "???";
  let item16emote = "<:Interrogation:596735733386051584>";
  let item16atk = "?";
  let item16def = "?";
  let item16pv = "?";
  let item17name = "???";
  let item17emote = "<:Interrogation:596735733386051584>";
  let item17atk = "?";
  let item17def = "?";
  let item17pv = "?";
  let item18name = "???";
  let item18emote = "<:Interrogation:596735733386051584>";
  let item18atk = "?";
  let item18def = "?";
  let item18pv = "?";
  let item19name = "???";
  let item19emote = "<:Interrogation:596735733386051584>";
  let item19atk = "?";
  let item19def = "?";
  let item19pv = "?";
  let item20name = "???";
  let item20emote = "<:Interrogation:596735733386051584>";
  let item20atk = "?";
  let item20def = "?";
  let item20pv = "?";
  let item21name = "???";
  let item21emote = "<:Interrogation:596735733386051584>";
  let item21atk = "?";
  let item21def = "?";
  let item21pv = "?";
  let item22name = "???";
  let item22emote = "<:Interrogation:596735733386051584>";
  let item22atk = "?";
  let item22def = "?";
  let item22pv = "?";
  let item23name = "???";
  let item23emote = "<:Interrogation:596735733386051584>";
  let item23atk = "?";
  let item23def = "?";
  let item23pv = "?";
  let item24name = "???";
  let item24emote = "<:Interrogation:596735733386051584>";
  let item24atk = "?";
  let item24def = "?";
  let item24pv = "?";
  let item25name = "???";
  let item25emote = "<:Interrogation:596735733386051584>";
  let item25atk = "?";
  let item25def = "?";
  let item25pv = "?";
  let item26name = "???";
  let item26emote = "<:Interrogation:596735733386051584>";
  let item26atk = "?";
  let item26def = "?";
  let item26pv = "?";
  let item27name = "???";
  let item27emote = "<:Interrogation:596735733386051584>";
  let item27atk = "?";
  let item27def = "?";
  let item27pv = "?";
  let item28name = "???";
  let item28emote = "<:Interrogation:596735733386051584>";
  let item28atk = "?";
  let item28def = "?";
  let item28pv = "?";
  let item29name = "???";
  let item29emote = "<:Interrogation:596735733386051584>";
  let item29atk = "?";
  let item29def = "?";
  let item29pv = "?";
  let item30name = "???";
  let item30emote = "<:Interrogation:596735733386051584>";
  let item30atk = "?";
  let item30def = "?";
  let item30pv = "?";
  let item31name = "???";
  let item31emote = "<:Interrogation:596735733386051584>";
  let item31atk = "?";
  let item31def = "?";
  let item31pv = "?";
   
  let item32name = "???";
  let item32emote = "<:Interrogation:596735733386051584>";
  let item32atk = "?";
  let item32def = "?";
  let item32pv = "?";
  let item33name = "???";
  let item33emote = "<:Interrogation:596735733386051584>";
  let item33atk = "?";
  let item33def = "?";
  let item33pv = "?";
  let item34name = "???";
  let item34emote = "<:Interrogation:596735733386051584>";
  let item34atk = "?";
  let item34def = "?";
  let item34pv = "?";
  let item35name = "???";
  let item35emote = "<:Interrogation:596735733386051584>";
  let item35atk = "?";
  let item35def = "?";
  let item35pv = "?";
  let item36name = "???";
  let item36emote = "<:Interrogation:596735733386051584>";
  let item36atk = "?";
  let item36def = "?";
  let item36pv = "?";
  let item37name = "???";
  let item37emote = "<:Interrogation:596735733386051584>";
  let item37atk = "?";
  let item37def = "?";
  let item37pv = "?";
  let item38name = "???";
  let item38emote = "<:Interrogation:596735733386051584>";
  let item38atk = "?";
  let item38def = "?";
  let item38pv = "?";
  let item39name = "???";
  let item39emote = "<:Interrogation:596735733386051584>";
  let item39atk = "?";
  let item39def = "?";
  let item39pv = "?";
  let item40name = "???";
  let item40emote = "<:Interrogation:596735733386051584>";
  let item40atk = "?";
  let item40def = "?";
  let item40pv = "?";
  let item41name = "???";
  let item41emote = "<:Interrogation:596735733386051584>";
  let item41atk = "?";
  let item41def = "?";
  let item41pv = "?";
  let item42name = "???";
  let item42emote = "<:Interrogation:596735733386051584>";
  let item42atk = "?";
  let item42def = "?";
  let item42pv = "?";
  let item43name = "???";
  let item43emote = "<:Interrogation:596735733386051584>";
  let item43atk = "?";
  let item43def = "?";
  let item43pv = "?";
  let item44name = "???";
  let item44emote = "<:Interrogation:596735733386051584>";
  let item44atk = "?";
  let item44def = "?";
  let item44pv = "?";
  let pet1 = require("./pet1.json");
  let pet2 = require("./pet2.json");
  let pet3 = require("./pet3.json");
  let pet4 = require("./pet4.json");
  let pet5 = require("./pet5.json");
  let pet6 = require("./pet6.json");
  let pet7 = require("./pet7.json");
  let pet8 = require("./pet8.json");
  let pet9 = require("./pet9.json");
  let pet10 = require("./pet10.json");
  let pet11 = require("./pet11.json");
  let pet12 = require("./pet12.json");
  let pet13 = require("./pet13.json");
  let pet14 = require("./pet14.json");
  let pet15 = require("./pet15.json");
  let pet16 = require("./pet16.json");
  let pet17 = require("./pet17.json");
  let pet18 = require("./pet18.json");
  let pet19 = require("./pet19.json");
  let pet20 = require("./pet20.json");
  let pet21 = require("./pet21.json");
  let pet22 = require("./pet22.json");
  let pet23 = require("./pet23.json");
  let pet24 = require("./pet24.json");
  let pet25 = require("./pet25.json");
  let pet26 = require("./pet26.json");
  let pet27 = require("./pet27.json");
  let pet28 = require("./pet28.json");
  let pet29 = require("./pet29.json");
  let pet30 = require("./pet30.json");
  let pet31 = require("./pet31.json");
  let pet32 = require("./pet32.json");
  let pet33 = require("./pet33.json");
  let pet34 = require("./pet34.json");
  let pet35 = require("./pet35.json");
  let pet36 = require("./pet36.json");
  let pet37 = require("./pet37.json");
  let pet38 = require("./pet38.json");
  let pet39 = require("./pet39.json");
  let pet40 = require("./pet40.json");
  let pet41 = require("./pet41.json");
  let pet42 = require("./pet42.json");

  let armeselect = require("./armeselect.json");
  if(!armeselect[message.author.id]){
    armeselect[message.author.id] = {
      armeselect: 0
    };
  
  fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
    if (err) console.log(err)
  });
  };
  let uarmeselect = armeselect[message.author.id].armeselect;
  if(!skin1[message.author.id]){
    skin1[message.author.id] = {
      skin1: 0
    };
  
  fs.writeFile("./skin1.json", JSON.stringify(skin1), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin2[message.author.id]){
    skin2[message.author.id] = {
      skin2: 0
    };
  
  fs.writeFile("./skin2.json", JSON.stringify(skin2), (err) => {
    if (err) console.log(err)
  });
  }

  if(!skin3[message.author.id]){
    skin3[message.author.id] = {
      skin3: 0
    };
  
  fs.writeFile("./skin3.json", JSON.stringify(skin3), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin4[message.author.id]){
    skin4[message.author.id] = {
      skin4: 0
    };
  
  fs.writeFile("./skin4.json", JSON.stringify(skin4), (err) => {
    if (err) console.log(err)
  });
  }

  if(!skin5[message.author.id]){
    skin5[message.author.id] = {
      skin5: 0
    };
  
  fs.writeFile("./skin5.json", JSON.stringify(skin5), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin6[message.author.id]){
    skin6[message.author.id] = {
      skin6: 0
    };
  
  fs.writeFile("./skin6.json", JSON.stringify(skin6), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin7[message.author.id]){
    skin7[message.author.id] = {
      skin7: 0
    };
  
  fs.writeFile("./skin7.json", JSON.stringify(skin7), (err) => {
    if (err) console.log(err)
  });
  }


  if(!skin8[message.author.id]){
    skin8[message.author.id] = {
      skin8: 0
    };
  
  fs.writeFile("./skin8.json", JSON.stringify(skin8), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin9[message.author.id]){
    skin9[message.author.id] = {
      skin9: 0
    };
  
  fs.writeFile("./skin9.json", JSON.stringify(skin9), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin10[message.author.id]){
    skin10[message.author.id] = {
      skin10: 0
    };
  
  fs.writeFile("./skin10.json", JSON.stringify(skin10), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin11[message.author.id]){
    skin11[message.author.id] = {
      skin11: 0
    };
  
  fs.writeFile("./skin11.json", JSON.stringify(skin11), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin12[message.author.id]){
    skin12[message.author.id] = {
      skin12: 0
    };
  
  fs.writeFile("./skin12.json", JSON.stringify(skin12), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin13[message.author.id]){
    skin13[message.author.id] = {
      skin13: 0
    };
  
  fs.writeFile("./skin13.json", JSON.stringify(skin13), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin14[message.author.id]){
    skin14[message.author.id] = {
      skin14: 0
    };
  
  fs.writeFile("./skin14.json", JSON.stringify(skin14), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin15[message.author.id]){
    skin15[message.author.id] = {
      skin15: 0
    };
  
  fs.writeFile("./skin15.json", JSON.stringify(skin15), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin16[message.author.id]){
    skin16[message.author.id] = {
      skin16: 0
    };
  
  fs.writeFile("./skin16.json", JSON.stringify(skin16), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin17[message.author.id]){
    skin17[message.author.id] = {
      skin17: 0
    };
  
  fs.writeFile("./skin17.json", JSON.stringify(skin17), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin18[message.author.id]){
    skin18[message.author.id] = {
      skin18: 0
    };
  
  fs.writeFile("./skin18.json", JSON.stringify(skin18), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin19[message.author.id]){
    skin19[message.author.id] = {
      skin19: 0
    };
  
  fs.writeFile("./skin19.json", JSON.stringify(skin19), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin20[message.author.id]){
    skin20[message.author.id] = {
      skin20: 0
    };
  
  fs.writeFile("./skin20.json", JSON.stringify(skin20), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin21[message.author.id]){
    skin21[message.author.id] = {
      skin21: 0
    };
  
  fs.writeFile("./skin21.json", JSON.stringify(skin21), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin22[message.author.id]){
    skin22[message.author.id] = {
      skin22: 0
    };
  
  fs.writeFile("./skin22.json", JSON.stringify(skin22), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin23[message.author.id]){
    skin23[message.author.id] = {
      skin23: 0
    };
  
  fs.writeFile("./skin23.json", JSON.stringify(skin23), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin24[message.author.id]){
    skin24[message.author.id] = {
      skin24: 0
    };
  
  fs.writeFile("./skin24.json", JSON.stringify(skin24), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin25[message.author.id]){
    skin25[message.author.id] = {
      skin25: 0
    };
  
  fs.writeFile("./skin25.json", JSON.stringify(skin25), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin26[message.author.id]){
    skin26[message.author.id] = {
      skin26: 0
    };
  
  fs.writeFile("./skin26.json", JSON.stringify(skin26), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin27[message.author.id]){
    skin27[message.author.id] = {
      skin27: 0
    };
  
  fs.writeFile("./skin27.json", JSON.stringify(skin27), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin28[message.author.id]){
    skin28[message.author.id] = {
      skin28: 0
    };
  
  fs.writeFile("./skin28.json", JSON.stringify(skin28), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin29[message.author.id]){
    skin29[message.author.id] = {
      skin29: 0
    };
  
  fs.writeFile("./skin29.json", JSON.stringify(skin29), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin30[message.author.id]){
    skin30[message.author.id] = {
      skin30: 0
    };
  
  fs.writeFile("./skin30.json", JSON.stringify(skin30), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin31[message.author.id]){
    skin31[message.author.id] = {
      skin31: 0
    };
  
  fs.writeFile("./skin31.json", JSON.stringify(skin31), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin32[message.author.id]){
    skin32[message.author.id] = {
      skin32: 0
    };
  
  fs.writeFile("./skin32.json", JSON.stringify(skin32), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin33[message.author.id]){
    skin33[message.author.id] = {
      skin33: 0
    };
  
  fs.writeFile("./skin33.json", JSON.stringify(skin33), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin34[message.author.id]){
    skin34[message.author.id] = {
      skin34: 0
    };
  
  fs.writeFile("./skin34.json", JSON.stringify(skin34), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin35[message.author.id]){
    skin35[message.author.id] = {
      skin35: 0
    };
  
  fs.writeFile("./skin35.json", JSON.stringify(skin35), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin36[message.author.id]){
    skin36[message.author.id] = {
      skin36: 0
    };
  
  fs.writeFile("./skin36.json", JSON.stringify(skin36), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin37[message.author.id]){
    skin37[message.author.id] = {
      skin37: 0
    };
  
  fs.writeFile("./skin37.json", JSON.stringify(skin37), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin38[message.author.id]){
    skin38[message.author.id] = {
      skin38: 0
    };
  
  fs.writeFile("./skin38.json", JSON.stringify(skin38), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin39[message.author.id]){
    skin39[message.author.id] = {
      skin39: 0
    };
  
  fs.writeFile("./skin39.json", JSON.stringify(skin39), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin40[message.author.id]){
    skin40[message.author.id] = {
      skin40: 0
    };
  
  fs.writeFile("./skin40.json", JSON.stringify(skin40), (err) => {
    if (err) console.log(err)
  });
  }

  if(!skin41[message.author.id]){
    skin41[message.author.id] = {
      skin41: 0
    };
  
  fs.writeFile("./skin41.json", JSON.stringify(skin41), (err) => {
    if (err) console.log(err)
  });
  }
  if(!skin42[message.author.id]){
    skin42[message.author.id] = {
      skin42: 0
    };
  
  fs.writeFile("./skin42.json", JSON.stringify(skin42), (err) => {
    if (err) console.log(err)
  });
  }
let uskin1 = skin1[message.author.id].skin1
let uskin2 = skin2[message.author.id].skin2
let uskin3 = skin3[message.author.id].skin3
let uskin4 = skin4[message.author.id].skin4
let uskin5 = skin5[message.author.id].skin5
let uskin6 = skin6[message.author.id].skin6
let uskin7 = skin7[message.author.id].skin7
let uskin8 = skin8[message.author.id].skin8
let uskin9 = skin9[message.author.id].skin9
let uskin10 = skin10[message.author.id].skin10
let uskin11 = skin11[message.author.id].skin11
let uskin12 = skin12[message.author.id].skin12
let uskin13 = skin13[message.author.id].skin13
let uskin14 = skin14[message.author.id].skin14
let uskin15 = skin15[message.author.id].skin15
let uskin16 = skin16[message.author.id].skin16
let uskin17 = skin17[message.author.id].skin17
let uskin18 = skin18[message.author.id].skin18
let uskin19 = skin19[message.author.id].skin19
let uskin20 = skin20[message.author.id].skin20
let uskin21 = skin21[message.author.id].skin21
let uskin22 = skin22[message.author.id].skin22
let uskin23 = skin23[message.author.id].skin23
let uskin24 = skin24[message.author.id].skin24
let uskin25 = skin25[message.author.id].skin25
let uskin26 = skin26[message.author.id].skin26
let uskin27 = skin27[message.author.id].skin27
let uskin28 = skin28[message.author.id].skin28
let uskin29 = skin29[message.author.id].skin29
let uskin30 = skin30[message.author.id].skin30
let uskin31 = skin31[message.author.id].skin31
let uskin32 = skin32[message.author.id].skin32
let uskin33 = skin33[message.author.id].skin33
let uskin34 = skin34[message.author.id].skin34
let uskin35 = skin35[message.author.id].skin35
let uskin36 = skin36[message.author.id].skin36
let uskin37 = skin37[message.author.id].skin37
let uskin38 = skin38[message.author.id].skin38
let uskin39 = skin39[message.author.id].skin39
let uskin40 = skin40[message.author.id].skin40
let uskin41 = skin41[message.author.id].skin41
let uskin42 = skin42[message.author.id].skin42


if(!pet1[message.author.id]){
  pet1[message.author.id] = {
    pet1: 0
  };

fs.writeFile("./pet1.json", JSON.stringify(pet1), (err) => {
  if (err) console.log(err)
});
}

if(!pet2[message.author.id]){
  pet2[message.author.id] = {
    pet2: 0
  };

fs.writeFile("./pet2.json", JSON.stringify(pet2), (err) => {
  if (err) console.log(err)
});
}

if(!pet3[message.author.id]){
  pet3[message.author.id] = {
    pet3: 0
  };

fs.writeFile("./pet3.json", JSON.stringify(pet3), (err) => {
  if (err) console.log(err)
});
}
if(!pet4[message.author.id]){
  pet4[message.author.id] = {
    pet4: 0
  };

fs.writeFile("./pet4.json", JSON.stringify(pet4), (err) => {
  if (err) console.log(err)
});
}
if(!pet5[message.author.id]){
  pet5[message.author.id] = {
    pet5: 0
  };

fs.writeFile("./pet5.json", JSON.stringify(pet5), (err) => {
  if (err) console.log(err)
});
}
if(!pet6[message.author.id]){
  pet6[message.author.id] = {
    pet6: 0
  };

fs.writeFile("./pet6.json", JSON.stringify(pet6), (err) => {
  if (err) console.log(err)
});
}
if(!pet7[message.author.id]){
  pet7[message.author.id] = {
    pet7: 0
  };

fs.writeFile("./pet7.json", JSON.stringify(pet7), (err) => {
  if (err) console.log(err)
});
}
if(!pet8[message.author.id]){
  pet8[message.author.id] = {
    pet8: 0
  };

fs.writeFile("./pet8.json", JSON.stringify(pet8), (err) => {
  if (err) console.log(err)
});
}

if(!pet9[message.author.id]){
  pet9[message.author.id] = {
    pet9: 0
  };

fs.writeFile("./pet9.json", JSON.stringify(pet9), (err) => {
  if (err) console.log(err)
});
}
if(!pet10[message.author.id]){
  pet10[message.author.id] = {
    pet10: 0
  };

fs.writeFile("./pet10.json", JSON.stringify(pet10), (err) => {
  if (err) console.log(err)
});
}
if(!pet11[message.author.id]){
  pet11[message.author.id] = {
    pet11: 0
  };

fs.writeFile("./pet11.json", JSON.stringify(pet11), (err) => {
  if (err) console.log(err)
});
}
if(!pet12[message.author.id]){
  pet12[message.author.id] = {
    pet12: 0
  };

fs.writeFile("./pet12.json", JSON.stringify(pet12), (err) => {
  if (err) console.log(err)
});
}
if(!pet13[message.author.id]){
  pet13[message.author.id] = {
    pet13: 0
  };

fs.writeFile("./pet13.json", JSON.stringify(pet13), (err) => {
  if (err) console.log(err)
});
}
if(!pet14[message.author.id]){
  pet14[message.author.id] = {
    pet14: 0
  };

fs.writeFile("./pet14.json", JSON.stringify(pet14), (err) => {
  if (err) console.log(err)
});
}
if(!pet15[message.author.id]){
  pet15[message.author.id] = {
    pet15: 0
  };

fs.writeFile("./pet15.json", JSON.stringify(pet15), (err) => {
  if (err) console.log(err)
});
}
if(!pet16[message.author.id]){
  pet16[message.author.id] = {
    pet16: 0
  };

fs.writeFile("./pet16.json", JSON.stringify(pet16), (err) => {
  if (err) console.log(err)
});
}
if(!pet17[message.author.id]){
  pet17[message.author.id] = {
    pet17: 0
  };

fs.writeFile("./pet17.json", JSON.stringify(pet17), (err) => {
  if (err) console.log(err)
});
}
if(!pet18[message.author.id]){
  pet18[message.author.id] = {
    pet18: 0
  };

fs.writeFile("./pet18.json", JSON.stringify(pet18), (err) => {
  if (err) console.log(err)
});
}
let pot25 = require("./pot25.json");
let pot50 = require("./pot50.json");
let pot100 = require("./pot100.json");

let potxp1 = require("./potxp1.json")
let potxp2 = require("./potxp2.json")
let potxp3 = require("./potxp3.json")
let bag = require("./bag.json");


if(!pot25[message.author.id]){
    pot25[message.author.id] = {
      pot25: 0
    };

  fs.writeFile("./pot25.json", JSON.stringify(pot25), (err) => {
    if (err) console.log(err)
  });
}
if(!pot50[message.author.id]){
    pot50[message.author.id] = {
      pot50: 0
    };

  fs.writeFile("./pot50.json", JSON.stringify(pot50), (err) => {
    if (err) console.log(err)
  });
}
if(!pot100[message.author.id]){
    pot100[message.author.id] = {
      pot100: 0
    };

  fs.writeFile("./pot100.json", JSON.stringify(pot100), (err) => {
    if (err) console.log(err)
  });
}

if(!potxp1[message.author.id]){
  potxp1[message.author.id] = {
    potxp1: 0
  };

fs.writeFile("./potxp1.json", JSON.stringify(potxp1), (err) => {
  if (err) console.log(err)
});
}
if(!potxp2[message.author.id]){
  potxp2[message.author.id] = {
    potxp2: 0
  };

fs.writeFile("./potxp2.json", JSON.stringify(potxp2), (err) => {
  if (err) console.log(err)
});
}
if(!potxp3[message.author.id]){
  potxp3[message.author.id] = {
    potxp3: 0
  };

fs.writeFile("./potxp3.json", JSON.stringify(potxp3), (err) => {
  if (err) console.log(err)
});
}
let upot25 = pot25[message.author.id].pot25
let upotxp1 = potxp1[message.author.id].potxp1
let upotxp2 = potxp2[message.author.id].potxp2
let upotxp3 = potxp3[message.author.id].potxp3

let upot50 = pot50[message.author.id].pot50

let upot100 = pot100[message.author.id].pot100
if(!pet19[message.author.id]){
  pet19[message.author.id] = {
    pet19: 0
  };

fs.writeFile("./pet19.json", JSON.stringify(pet19), (err) => {
  if (err) console.log(err)
});
}
if(!pet20[message.author.id]){
  pet20[message.author.id] = {
    pet20: 0
  };

fs.writeFile("./pet20.json", JSON.stringify(pet20), (err) => {
  if (err) console.log(err)
});
}
if(!pet21[message.author.id]){
  pet21[message.author.id] = {
    pet21: 0
  };

fs.writeFile("./pet21.json", JSON.stringify(pet21), (err) => {
  if (err) console.log(err)
});
}
if(!pet22[message.author.id]){
  pet22[message.author.id] = {
    pet22: 0
  };

fs.writeFile("./pet22.json", JSON.stringify(pet22), (err) => {
  if (err) console.log(err)
});
}
if(!pet23[message.author.id]){
  pet23[message.author.id] = {
    pet23: 0
  };

fs.writeFile("./pet23.json", JSON.stringify(pet23), (err) => {
  if (err) console.log(err)
});
}
if(!pet24[message.author.id]){
  pet24[message.author.id] = {
    pet24: 0
  };

fs.writeFile("./pet24.json", JSON.stringify(pet24), (err) => {
  if (err) console.log(err)
});
}
if(!pet25[message.author.id]){
  pet25[message.author.id] = {
    pet25: 0
  };

fs.writeFile("./pet25.json", JSON.stringify(pet25), (err) => {
  if (err) console.log(err)
});
}
if(!pet26[message.author.id]){
  pet26[message.author.id] = {
    pet26: 0
  };

fs.writeFile("./pet26.json", JSON.stringify(pet26), (err) => {
  if (err) console.log(err)
});
}
if(!pet27[message.author.id]){
  pet27[message.author.id] = {
    pet27: 0
  };

fs.writeFile("./pet27.json", JSON.stringify(pet27), (err) => {
  if (err) console.log(err)
});
}
if(!pet28[message.author.id]){
  pet28[message.author.id] = {
    pet28: 0
  };

fs.writeFile("./pet28.json", JSON.stringify(pet28), (err) => {
  if (err) console.log(err)
});
}
if(!pet29[message.author.id]){
  pet29[message.author.id] = {
    pet29: 0
  };

fs.writeFile("./pet29.json", JSON.stringify(pet29), (err) => {
  if (err) console.log(err)
});
}
if(!pet30[message.author.id]){
  pet30[message.author.id] = {
    pet30: 0
  };

fs.writeFile("./pet30.json", JSON.stringify(pet30), (err) => {
  if (err) console.log(err)
});
}
if(!pet31[message.author.id]){
  pet31[message.author.id] = {
    pet31: 0
  };

fs.writeFile("./pet31.json", JSON.stringify(pet31), (err) => {
  if (err) console.log(err)
});
}
if(!pet32[message.author.id]){
  pet32[message.author.id] = {
    pet32: 0
  };

fs.writeFile("./pet32.json", JSON.stringify(pet32), (err) => {
  if (err) console.log(err)
});
}
if(!pet33[message.author.id]){
  pet33[message.author.id] = {
    pet33: 0
  };

fs.writeFile("./pet33.json", JSON.stringify(pet33), (err) => {
  if (err) console.log(err)
});
}
if(!pet34[message.author.id]){
  pet34[message.author.id] = {
    pet34: 0
  };

fs.writeFile("./pet34.json", JSON.stringify(pet34), (err) => {
  if (err) console.log(err)
});
}
if(!pet35[message.author.id]){
  pet35[message.author.id] = {
    pet35: 0
  };

fs.writeFile("./pet35.json", JSON.stringify(pet35), (err) => {
  if (err) console.log(err)
});
}
if(!pet36[message.author.id]){
  pet36[message.author.id] = {
    pet36: 0
  };

fs.writeFile("./pet36.json", JSON.stringify(pet36), (err) => {
  if (err) console.log(err)
});
}
if(!pet37[message.author.id]){
  pet37[message.author.id] = {
    pet37: 0
  };

fs.writeFile("./pet37.json", JSON.stringify(pet37), (err) => {
  if (err) console.log(err)
});
}
if(!pet38[message.author.id]){
  pet38[message.author.id] = {
    pet38: 0
  };

fs.writeFile("./pet38.json", JSON.stringify(pet38), (err) => {
  if (err) console.log(err)
});
}
if(!pet39[message.author.id]){
  pet39[message.author.id] = {
    pet39: 0
  };

fs.writeFile("./pet39.json", JSON.stringify(pet39), (err) => {
  if (err) console.log(err)
});
}
if(!pet40[message.author.id]){
  pet40[message.author.id] = {
    pet40: 0
  };

fs.writeFile("./pet40.json", JSON.stringify(pet40), (err) => {
  if (err) console.log(err)
});
}
if(!pet41[message.author.id]){
  pet41[message.author.id] = {
    pet41: 0
  };

fs.writeFile("./pet41.json", JSON.stringify(pet41), (err) => {
  if (err) console.log(err)
});
}
if(!pet42[message.author.id]){
  pet42[message.author.id] = {
    pet42: 0
  };

fs.writeFile("./pet42.json", JSON.stringify(pet42), (err) => {
  if (err) console.log(err)
});
}


let upet1 = pet1[message.author.id].pet1;
let upet2 = pet2[message.author.id].pet2;
let upet3 = pet3[message.author.id].pet3;
let upet4 = pet4[message.author.id].pet4;
let upet5 = pet5[message.author.id].pet5;
let upet6 = pet6[message.author.id].pet6;
let upet7 = pet7[message.author.id].pet7;
let upet8 = pet8[message.author.id].pet8;
let upet9 = pet9[message.author.id].pet9;
let upet10 = pet10[message.author.id].pet10;
let upet11 = pet11[message.author.id].pet11;
let upet12 = pet12[message.author.id].pet12;
let upet13 = pet13[message.author.id].pet13;
let upet14 = pet14[message.author.id].pet14;
let upet15 = pet15[message.author.id].pet15;
let upet16 = pet16[message.author.id].pet16;
let upet17 = pet17[message.author.id].pet17;
let upet18 = pet18[message.author.id].pet18;
let upet19 = pet19[message.author.id].pet19;
let upet20 = pet20[message.author.id].pet20;
let upet21 = pet21[message.author.id].pet21;
let upet22 = pet22[message.author.id].pet22;
let upet23 = pet23[message.author.id].pet23;
let upet24 = pet24[message.author.id].pet24;
let upet25 = pet25[message.author.id].pet25;
let upet26 = pet26[message.author.id].pet26;
let upet27 = pet27[message.author.id].pet27;
let upet28 = pet28[message.author.id].pet28;
let upet29 = pet29[message.author.id].pet29;
let upet30 = pet30[message.author.id].pet30;
let upet31 = pet31[message.author.id].pet31;
let upet32 = pet32[message.author.id].pet32;
let upet33 = pet33[message.author.id].pet33;
let upet34 = pet34[message.author.id].pet34;
let upet35 = pet35[message.author.id].pet35;
let upet36 = pet36[message.author.id].pet36;
let upet37 = pet37[message.author.id].pet37;
let upet38 = pet38[message.author.id].pet38;
let upet39 = pet39[message.author.id].pet39;
let upet40 = pet40[message.author.id].pet40;
let upet41 = pet41[message.author.id].pet41;
let upet42 = pet42[message.author.id].pet42;
//EFFECT STATS
let peteffectatk = 1
let peteffectdef = 1
let peteffectpv = 1

//AFINITE
let affinitemage = 1
let affinitemv = 1
let affinitenain = 1
let affiniteelfe = 1
let affinitehumain = 1
let affinitehero = 1
//COMMON
let pet1name = "???"
let pet1emote = "<:Interrogation:596735733386051584>"
let pet1effect1 = 1
let pet1atk = "?"
let pet1def = "?"
let pet1pv = '?'
let pet2name = "???"
let pet2emote = "<:Interrogation:596735733386051584>"
let pet2effect1 = 1
let pet2atk = "?"
let pet2def = "?"
let pet2pv = '?'
let pet3name = ""
let pet3emote = "<:Interrogation:596735733386051584>"
let pet3effect1 = 1
let pet3atk = "?"
let pet3def = "?"
let pet3pv = '?'
let pet4name = ""
let pet4emote = "<:Interrogation:596735733386051584>"
let pet4effect1 = 1
let pet4atk = "?"
let pet4def = "?"
let pet4pv = '?'
let pet5name = ""
let pet5emote = "<:Interrogation:596735733386051584>"
let pet5effect1 = 1
let pet5atk = "?"
let pet5def = "?"
let pet5pv = '?'
let pet6name = ""
let pet6emote = "<:Interrogation:596735733386051584>"
let pet6effect1 = 1
let pet6atk = "?"
let pet6def = "?"
let pet6pv = '?'
let pet7name = ""
let pet7emote = "<:Interrogation:596735733386051584>"
let pet7effect1 = 1
let pet7atk = "?"
let pet7def = "?"
let pet7pv = '?'
let pet8name = ""
let pet8emote = "<:Interrogation:596735733386051584>"
let pet8effect1 = 1
let pet8atk = "?"
let pet8def = "?"
let pet8pv = '?'

//RARE
let pet9name = ""
let pet9emote = "<:Interrogation:596735733386051584>"
let pet9effect1 = 1
let pet10name = ""
let pet10emote = "<:Interrogation:596735733386051584>"
let pet10effect1 = 1
let pet11name = ""
let pet11emote = "<:Interrogation:596735733386051584>"
let pet11effect1 = 1
let pet12name = ""
let pet12emote = "<:Interrogation:596735733386051584>"
let pet12effect1 = 1
let pet13name = ""
let pet13emote = "<:Interrogation:596735733386051584>"
let pet13effect1 = 1
let pet14name = ""
let pet14emote = "<:Interrogation:596735733386051584>"
let pet14effect1 = 1
let pet14effect2 = 1
let pet15name = ""
let pet15emote = "<:Interrogation:596735733386051584>"
let pet15effect1 = 1

//EPIC
let pet16name = ""
let pet16emote = "<:Interrogation:596735733386051584>"
let pet16effect1 = 1
let pet17name = ""
let pet17emote = "<:Interrogation:596735733386051584>"
let pet17effect1 = 1
let pet18name = ""
let pet18emote = "<:Interrogation:596735733386051584>"
let pet18effect1 = 1
let pet18effect2 = 1
let pet18effect3 = 1
let pet19name = ""
let pet19emote = "<:Interrogation:596735733386051584>"
let pet19effect1 = 0
let pet20name = ""
let pet20emote = "<:Interrogation:596735733386051584>"
let pet20effect1 = 1
let pet21name = ""
let pet21emote = "<:Interrogation:596735733386051584>"
let pet21effect1 = 1
let pet21effect2 = 1
let pet22name = ""
let pet22emote = "<:Interrogation:596735733386051584>"
let pet22effect1 = 1
let pet22effect2 = 1
let pet23name = ""
let pet23emote = "<:Interrogation:596735733386051584>"
let pet23effect1 = 1
let pet24name = ""
let pet24emote = "<:Interrogation:596735733386051584>"
let pet24effect1 = 1
//LEGENDAIRE
let pet25name = ""
let pet25emote = "<:Interrogation:596735733386051584>"
let pet25effect1 = 0
let pet26name = ""
let pet26emote = "<:Interrogation:596735733386051584>"
let pet26effect1 = 1
let pet27name = ""
let pet27emote = "<:Interrogation:596735733386051584>"
let pet27effect1 = 1
let pet28name = ""
let pet28emote = "<:Interrogation:596735733386051584>"
let pet28effect1 = 1
let pet28effect2 = 1
let pet29name = ""
let pet29emote = "<:Interrogation:596735733386051584>"
let pet29effect1 = 1
let pet29effect2 = 1
let pet30name = ""
let pet30emote = "<:Interrogation:596735733386051584>"
let pet30effect1 = 1
let pet30effect2 = 1
let pet31name = ""
let pet31emote = "<:Interrogation:596735733386051584>"
let pet31effect1 = 1
let pet32name = ""
let pet32emote = "<:Interrogation:596735733386051584>"
let pet32effect1 = 1
let pet32effect2 = 1
let pet33name = ""
let pet33emote = "<:Interrogation:596735733386051584>"
let pet33effect1 = 1
let pet33effect2 = 1
let pet34name = ""
let pet34emote = "<:Interrogation:596735733386051584>"
let pet34effect1 = 1
//GOD
let pet35name = ""
let pet35emote = "<:Interrogation:596735733386051584>"
let pet35effect1 = 1
let pet36name = ""
let pet36emote = "<:Interrogation:596735733386051584>"
let pet36effect1 = 1
let pet36effect2 = 1
let pet37name = ""
let pet37emote = "<:Interrogation:596735733386051584>"
let pet37effect1 = 1
let pet37effect2 = 1
let pet38name = ""
let pet38emote = "<:Interrogation:596735733386051584>"
let pet38effect1 = 1
let pet38effect2 = 1
let pet39name = ""
let pet39emote = "<:Interrogation:596735733386051584>"
let pet39effect1 = 1
let pet39effect2 = 1
let pet40name = ""
let pet40emote = "<:Interrogation:596735733386051584>"
let pet40effect1 = 0
let pet40effect2 = 1
let pet41name = ""
let pet41emote = "<:Interrogation:596735733386051584>"
let pet41effect1 = 1
let pet42name = ""
let pet42emote = "<:Interrogation:596735733386051584>"
let pet42effect1 = 01


//ATK DEF FLEMME
let pet9atk = "?"
let pet9def = "?"
let pet9pv = '?'
let pet10atk = "?"
let pet10def = "?"
let pet10pv = '?'
let pet11atk = "?"
let pet11def = "?"
let pet11pv = '?'
let pet12atk = "?"
let pet12def = "?"
let pet12pv = '?'
let pet13atk = "?"
let pet13def = "?"
let pet13pv = '?'
let pet14atk = "?"
let pet14def = "?"
let pet14pv = '?'
let pet15atk = "?"
let pet15def = "?"
let pet15pv = '?'
let pet16atk = "?"
let pet16def = "?"
let pet16pv = '?'
let pet17atk = "?"
let pet17def = "?"
let pet17pv = '?'
let pet18atk = "?"
let pet18def = "?"
let pet18pv = '?'
let pet19atk = "?"
let pet19def = "?"
let pet19pv = '?'
let pet20atk = "?"
let pet20def = "?"
let pet20pv = '?'
let pet21atk = "?"
let pet21def = "?"
let pet21pv = '?'
let pet22atk = "?"
let pet22def = "?"
let pet22pv = '?'
let pet23atk = "?"
let pet23def = "?"
let pet23pv = '?'
let pet24atk = "?"
let pet24def = "?"
let pet24pv = '?'
let pet25atk = "?"
let pet25def = "?"
let pet25pv = '?'
let pet26atk = "?"
let pet26def = "?"
let pet26pv = '?'
let pet27atk = "?"
let pet27def = "?"
let pet27pv = '?'
let pet28atk = "?"
let pet28def = "?"
let pet28pv = '?'
let pet29atk = "?"
let pet29def = "?"
let pet29pv = '?'
let pet30atk = "?"
let pet30def = "?"
let pet30pv = '?'
let pet31atk = "?"
let pet31def = "?"
let pet31pv = '?'
let pet32atk = "?"
let pet32def = "?"
let pet32pv = '?'
let pet33atk = "?"
let pet33def = "?"
let pet33pv = '?'
let pet34atk = "?"
let pet34def = "?"
let pet34pv = '?'
let pet35atk = "?"
let pet35def = "?"
let pet35pv = '?'
let pet36atk = "?"
let pet36def = "?"
let pet36pv = '?'
let pet37atk = "?"
let pet37def = "?"
let pet37pv = '?'
let pet38atk = "?"
let pet38def = "?"
let pet38pv = '?'
let pet39atk = "?"
let pet39def = "?"
let pet39pv = '?'
let pet40atk = "?"
let pet40def = "?"
let pet40pv = '?'
let pet41atk = "?"
let pet41def = "?"
let pet41pv = '?'
let pet42atk = "?"
let pet42def = "?"
let pet42pv = '?'
let petatkboosted = 1
let petdefboosted = 1
let petpvboosted = 1
let desceffet1 = ""
let desceffet2 = ""
let desceffet3 = ""


let petselect = require("./petselect.json")
if(!petselect[message.author.id]){
  petselect[message.author.id] = {
    petselect: 0
  };

fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
  if (err) console.log(err)
});
}
let upetselect = petselect[message.author.id].petselect
let petnameinv = ""
let petemote = ""





  let xpclasseactuel = xpclasse[message.author.id].xpclasse;
  let nivactuelclasse = xpclasse[message.author.id].levelclasse;

  let xpnecessaire = 0
  if(nivactuelclasse === 0) {
    xpnecessaire = 100
  }
  if(nivactuelclasse === 1) {
    xpnecessaire = 500
  }
  if(nivactuelclasse === 2) {
    xpnecessaire = 1000
  }
  if(nivactuelclasse === 3) {
    xpnecessaire = 3500
  }
  if(nivactuelclasse === 4) {
    xpnecessaire = 10000
  }
  if(nivactuelclasse === 5) {
    xpnecessaire = 50000
  }
  if(nivactuelclasse === 6) {
    xpnecessaire = 150000
  }
  if(nivactuelclasse === 7) {
    xpnecessaire = 500000
  }
  if(nivactuelclasse === 8) {
    xpnecessaire = 1000000
  }
  if(nivactuelclasse === 9) {
    xpnecessaire = 5000000
  }


  if(xpclasseactuel >= xpnecessaire && nivactuelclasse <= 9){
    xpclasse[message.author.id] = {
      xpclasse: xpclasseactuel - xpnecessaire,
      levelclasse: nivactuelclasse + 1
    };
     
  }

  let boostwoodniveau = 1+(0.02 * nivactuel)
  let boostoreniveau = 1+(0.02 * nivactuel)
  let boostxpniveau = 1+(0.01 * nivactuel)





  let totalpoints_non_use = require("./totalpoints_non_use.json")

  if(!totalpoints_non_use[message.author.id]){
    totalpoints_non_use[message.author.id] = {
      totalpoints_non_use: 0
    };
  }
  fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if(err) console.log(err)
  });
  let utotalpoints_non_use = totalpoints_non_use[message.author.id].totalpoints_non_use

let allpoints1 = require("./allpoints1.json")
let allpoints2 = require("./allpoints2.json")
let allpoints3 = require("./allpoints3.json")
if(!allpoints3[message.author.id]){
  allpoints3[message.author.id] = {
    point5: 0,
    point10: 0,
    point20: 0,
    point25: 0,
    point35: 0,
    point40: 0,
    point50: 0,
    point60: 0,
    point80: 0,

  };
fs.writeFile("./allpoints3.json", JSON.stringify(allpoints3), (err) => {
  if (err) console.log(err)
});
}

if(nivactuel>= 5 && allpoints3[message.author.id].point5=== 0){
  totalpoints_non_use[message.author.id] = {
    totalpoints_non_use: totalpoints_non_use[message.author.id].totalpoints_non_use + 1
  }

  allpoints3[message.author.id] = {
    point5: allpoints3[message.author.id].point5 + 1,
    point10: allpoints3[message.author.id].point10,
    point20: allpoints3[message.author.id].point20,
    point25: allpoints3[message.author.id].point25,
    point35: allpoints3[message.author.id].point35,
    point40: allpoints3[message.author.id].point40,
    point50: allpoints3[message.author.id].point50,
    point60: allpoints3[message.author.id].point60,
    point80: allpoints3[message.author.id].point80
  };
  fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if (err) console.log(err)
    });
    fs.writeFile("./allpoints3.json", JSON.stringify(allpoints3), (err) => {
      if (err) console.log(err)
      });
      boxcommune[message.author.id] = {
        boxcommune: uboxcommune + 5
      }
      fs.writeFile("./boxcommune.json", JSON.stringify(boxcommune), (err) => {
        if (err) console.log(err)
        });
      message.channel.send(`**Félicitations** ${message.author.username}, vous êtes passé niveau 5!\n${trucbizarre}Points de Statistiques: +1${trucbizarre}\n${boxcommonemote}${trucbizarre}Box Commune: +5${trucbizarre}`)
};
if(nivactuel>= 10 && allpoints3[message.author.id].point10=== 0){
  totalpoints_non_use[message.author.id] = {
    totalpoints_non_use: totalpoints_non_use[message.author.id].totalpoints_non_use + 1
  }

  allpoints3[message.author.id] = {
    point5: allpoints3[message.author.id].point5,
    point10: allpoints3[message.author.id].point10 + 1,
    point20: allpoints3[message.author.id].point20,
    point25: allpoints3[message.author.id].point25,
    point35: allpoints3[message.author.id].point35,
    point40: allpoints3[message.author.id].point40,
    point50: allpoints3[message.author.id].point50,
    point60: allpoints3[message.author.id].point60,
    point80: allpoints3[message.author.id].point80
  };
  fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if (err) console.log(err)
    });
    fs.writeFile("./allpoints3.json", JSON.stringify(allpoints3), (err) => {
      if (err) console.log(err)
      });
      boxrare[message.author.id] = {
        boxrare: uboxrare + 2
      }
      fs.writeFile("./boxrare.json", JSON.stringify(boxrare), (err) => {
        if (err) console.log(err)
        });
      message.channel.send(`**Félicitations** ${message.author.username}, vous êtes passé niveau 10!\n${trucbizarre}Points de Statistiques: +1${trucbizarre}\n${boxrareemote}${trucbizarre}Box Rare: +2${trucbizarre}`)
};
if(nivactuel>= 20 && allpoints3[message.author.id].point20=== 0){
  totalpoints_non_use[message.author.id] = {
    totalpoints_non_use: totalpoints_non_use[message.author.id].totalpoints_non_use + 1
  }

  allpoints3[message.author.id] = {
    point5: allpoints3[message.author.id].point5,
    point10: allpoints3[message.author.id].point10,
    point20: allpoints3[message.author.id].point20 + 1,
    point25: allpoints3[message.author.id].point25,
    point35: allpoints3[message.author.id].point35,
    point40: allpoints3[message.author.id].point40,
    point50: allpoints3[message.author.id].point50,
    point60: allpoints3[message.author.id].point60,
    point80: allpoints3[message.author.id].point80
  };
  fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if (err) console.log(err)
    });
    fs.writeFile("./allpoints3.json", JSON.stringify(allpoints3), (err) => {
      if (err) console.log(err)
      });
      boxrare[message.author.id] = {
        boxrare: uboxrare + 6
      }
      fs.writeFile("./boxrare.json", JSON.stringify(boxrare), (err) => {
        if (err) console.log(err)
        });
      message.channel.send(`**Félicitations** ${message.author.username}, vous êtes passé niveau 20!\n${trucbizarre}Points de Statistiques: +1${trucbizarre}\n${boxrareemote}${trucbizarre}Box Rare: +6${trucbizarre}`)
};
if(nivactuel>= 25 && allpoints3[message.author.id].point25=== 0){
  totalpoints_non_use[message.author.id] = {
    totalpoints_non_use: totalpoints_non_use[message.author.id].totalpoints_non_use + 1
  }

  allpoints3[message.author.id] = {
    point5: allpoints3[message.author.id].point5,
    point10: allpoints3[message.author.id].point10,
    point20: allpoints3[message.author.id].point20,
    point25: allpoints3[message.author.id].point25 +1,
    point35: allpoints3[message.author.id].point35,
    point40: allpoints3[message.author.id].point40,
    point50: allpoints3[message.author.id].point50,
    point60: allpoints3[message.author.id].point60,
    point80: allpoints3[message.author.id].point80
  };
  fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if (err) console.log(err)
    });
    fs.writeFile("./allpoints3.json", JSON.stringify(allpoints3), (err) => {
      if (err) console.log(err)
      });
      boxepique[message.author.id] = {
        boxepique: uboxepique + 2
      }
      fs.writeFile("./boxepique.json", JSON.stringify(boxepique), (err) => {
        if (err) console.log(err)
        });
      message.channel.send(`**Félicitations** ${message.author.username}, vous êtes passé niveau 25!\n${trucbizarre}Points de Statistiques: +1${trucbizarre}\n${boxepicemote}${trucbizarre}Box Epique: +2${trucbizarre}`)
};
if(nivactuel>= 35 && allpoints3[message.author.id].point35=== 0){
  totalpoints_non_use[message.author.id] = {
    totalpoints_non_use: totalpoints_non_use[message.author.id].totalpoints_non_use + 1
  }

  allpoints3[message.author.id] = {
    point5: allpoints3[message.author.id].point5,
    point10: allpoints3[message.author.id].point10,
    point20: allpoints3[message.author.id].point20,
    point25: allpoints3[message.author.id].point25,
    point35: allpoints3[message.author.id].point35 +1,
    point40: allpoints3[message.author.id].point40,
    point50: allpoints3[message.author.id].point50,
    point60: allpoints3[message.author.id].point60,
    point80: allpoints3[message.author.id].point80
  };
  fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if (err) console.log(err)
    });
    fs.writeFile("./allpoints3.json", JSON.stringify(allpoints3), (err) => {
      if (err) console.log(err)
      });
      boxepique[message.author.id] = {
        boxepique: uboxepique + 5
      }
      fs.writeFile("./boxepique.json", JSON.stringify(boxepique), (err) => {
        if (err) console.log(err)
        });
      message.channel.send(`**Félicitations** ${message.author.username}, vous êtes passé niveau 35!\n${trucbizarre}Points de Statistiques: +1${trucbizarre}\n${boxepicemote}${trucbizarre}Box Epique: +5${trucbizarre}`)
};
if(nivactuel>= 40 && allpoints3[message.author.id].point40 === 0){
  totalpoints_non_use[message.author.id] = {
    totalpoints_non_use: totalpoints_non_use[message.author.id].totalpoints_non_use + 1
  }

  allpoints3[message.author.id] = {
    point5: allpoints3[message.author.id].point5,
    point10: allpoints3[message.author.id].point10,
    point20: allpoints3[message.author.id].point20,
    point25: allpoints3[message.author.id].point25,
    point35: allpoints3[message.author.id].point35,
    point40: allpoints3[message.author.id].point40 +1,
    point50: allpoints3[message.author.id].point50,
    point60: allpoints3[message.author.id].point60,
    point80: allpoints3[message.author.id].point80
  };
  fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if (err) console.log(err)
    });
    fs.writeFile("./allpoints3.json", JSON.stringify(allpoints3), (err) => {
      if (err) console.log(err)
      });
      mysterybox[message.author.id] = {
        mysterybox: umysterybox + 1
      }
      fs.writeFile("./mysterybox.json", JSON.stringify(mysterybox), (err) => {
        if (err) console.log(err)
        });
      message.channel.send(`**Félicitations** ${message.author.username}, vous êtes passé niveau 40!\n${trucbizarre}Points de Statistiques: +1${trucbizarre}\n${boxmysteryemote}${trucbizarre}Box Mystérieuse: +1${trucbizarre}`)
};
if(nivactuel>= 50 && allpoints3[message.author.id].point50 === 0){
  totalpoints_non_use[message.author.id] = {
    totalpoints_non_use: totalpoints_non_use[message.author.id].totalpoints_non_use + 1
  }

  allpoints3[message.author.id] = {
    point5: allpoints3[message.author.id].point5,
    point10: allpoints3[message.author.id].point10,
    point20: allpoints3[message.author.id].point20,
    point25: allpoints3[message.author.id].point25,
    point35: allpoints3[message.author.id].point35,
    point40: allpoints3[message.author.id].point40,
    point50: allpoints3[message.author.id].point50 +1,
    point60: allpoints3[message.author.id].point60,
    point80: allpoints3[message.author.id].point80
  };
  fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if (err) console.log(err)
    });
    fs.writeFile("./allpoints3.json", JSON.stringify(allpoints3), (err) => {
      if (err) console.log(err)
      });
      xpclasse[message.author.id] = {
        xpclasse: xpclasseactuel + 1500,
        levelclasse: nivactuelclasse
      }
      fs.writeFile("./experienceclasse.json", JSON.stringify(xpclasse), (err) => {
        if (err) console.log(err)
        });
      message.channel.send(`**Félicitations** ${message.author.username}, vous êtes passé niveau 50!\n${trucbizarre}Points de Statistiques: +1${trucbizarre}\n${xp2emote}${trucbizarre}Expérience de classe: +1500${trucbizarre}`)
};
if(nivactuel>= 60 && allpoints3[message.author.id].point60 === 0){
  totalpoints_non_use[message.author.id] = {
    totalpoints_non_use: totalpoints_non_use[message.author.id].totalpoints_non_use + 2
  }

  allpoints3[message.author.id] = {
    point5: allpoints3[message.author.id].point5,
    point10: allpoints3[message.author.id].point10,
    point20: allpoints3[message.author.id].point20,
    point25: allpoints3[message.author.id].point25,
    point35: allpoints3[message.author.id].point35,
    point40: allpoints3[message.author.id].point40,
    point50: allpoints3[message.author.id].point50,
    point60: allpoints3[message.author.id].point60 +1,
    point80: allpoints3[message.author.id].point80
  };
  fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if (err) console.log(err)
    });
    fs.writeFile("./allpoints3.json", JSON.stringify(allpoints3), (err) => {
      if (err) console.log(err)
      });
      fragments[message.author.id] = {
        fragments: ufragments + 10
      }
      fs.writeFile("./fragments.json", JSON.stringify(fragments), (err) => {
        if (err) console.log(err)
        });
      message.channel.send(`**Félicitations** ${message.author.username}, vous êtes passé niveau 60!\n${trucbizarre}Points de Statistiques: +2${trucbizarre}\n${fragemote}${trucbizarre}Fragments: +10${trucbizarre}`)
};
if(nivactuel>= 80 && allpoints3[message.author.id].point80 === 0){
  totalpoints_non_use[message.author.id] = {
    totalpoints_non_use: totalpoints_non_use[message.author.id].totalpoints_non_use + 3
  }

  allpoints3[message.author.id] = {
    point5: allpoints3[message.author.id].point5,
    point10: allpoints3[message.author.id].point10,
    point20: allpoints3[message.author.id].point20,
    point25: allpoints3[message.author.id].point25,
    point35: allpoints3[message.author.id].point35,
    point40: allpoints3[message.author.id].point40,
    point50: allpoints3[message.author.id].point50,
    point60: allpoints3[message.author.id].point60,
    point80: allpoints3[message.author.id].point80 +1
  };
  fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if (err) console.log(err)
    });
    fs.writeFile("./allpoints3.json", JSON.stringify(allpoints3), (err) => {
      if (err) console.log(err)
      });
      mysterybox[message.author.id] = {
        mysterybox: umysterybox + 5
      }
      fs.writeFile("./mysterybox.json", JSON.stringify(mysterybox), (err) => {
        if (err) console.log(err)
        });
      message.channel.send(`**Félicitations** ${message.author.username}, vous êtes passé niveau 80!\n${trucbizarre}Points de Statistiques: +3${trucbizarre}\n${boxmysteryemote}${trucbizarre}Box Mystérieuse: +5${trucbizarre}`)
};
if(!allpoints1[message.author.id]){
  allpoints1[message.author.id] = {
    point1: 0,
    point15: 0,
    point30: 0,
    point45: 0,
    point70: 0,
    point90: 0,
    point100: 0,
    point125: 0,
    point150: 0,
    point180: 0,
    point200: 0,
    point230: 0,
    point250: 0,
    point265: 0,
    point275: 0,
    point290: 0

  };
fs.writeFile("./allpoints1.json", JSON.stringify(allpoints1), (err) => {
  if (err) console.log(err)
});
}
if(!allpoints2[message.author.id]){
  allpoints2[message.author.id] = {
    point300: 0,
    point320: 0,
    point350: 0,
    point400: 0,
    point450: 0,
    point500: 0,
    point750: 0
  };
fs.writeFile("./allpoints2.json", JSON.stringify(allpoints2), (err) => {
  if (err) console.log(err)
});
}

if(nivactuel>= 1 && allpoints1[message.author.id].point1=== 0){
  totalpoints_non_use[message.author.id] = {
    totalpoints_non_use: totalpoints_non_use[message.author.id].totalpoints_non_use + 1
  }

  allpoints1[message.author.id] = {
    point1: allpoints1[message.author.id].point1 + 1,
    point15: allpoints1[message.author.id].point15,
    point30: allpoints1[message.author.id].point30,
    point45: allpoints1[message.author.id].point45,
    point70: allpoints1[message.author.id].point70,
    point90: allpoints1[message.author.id].point90,
    point100: allpoints1[message.author.id].point100,
    point125: allpoints1[message.author.id].point125,
    point150: allpoints1[message.author.id].point150,
    point180: allpoints1[message.author.id].point180,
    point200: allpoints1[message.author.id].point200,
    point230: allpoints1[message.author.id].point230,
    point250: allpoints1[message.author.id].point250,
    point265: allpoints1[message.author.id].point265,
    point275: allpoints1[message.author.id].point275,
    point290: allpoints1[message.author.id].point290
  };
  fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if (err) console.log(err)
    });
    fs.writeFile("./allpoints1.json", JSON.stringify(allpoints1), (err) => {
      if (err) console.log(err)
      });
      boxcommune[message.author.id] = {
        boxcommune: uboxcommune + 1
      }
      fs.writeFile("./boxcommune.json", JSON.stringify(boxcommune), (err) => {
        if (err) console.log(err)
        });
      message.channel.send(`**Félicitations** ${message.author.username}, vous êtes passé niveau 1!\nNouveau Rang: ${trucbizarre}Débutant I${trucbizarre}\n${trucbizarre}Points de Statistiques: +1${trucbizarre}\n${boxcommonemote}${trucbizarre}Box Commune: +1${trucbizarre}`)
};


if(nivactuel >= 15 && allpoints1[message.author.id].point15 === 0){
  totalpoints_non_use[message.author.id] = {
    totalpoints_non_use: totalpoints_non_use[message.author.id].totalpoints_non_use + 1
  }
  allpoints1[message.author.id] = {
    point1: allpoints1[message.author.id].point1,
    point15: allpoints1[message.author.id].point15 + 1,
    point30: allpoints1[message.author.id].point30,
    point45: allpoints1[message.author.id].point45,
    point70: allpoints1[message.author.id].point70,
    point90: allpoints1[message.author.id].point90,
    point100: allpoints1[message.author.id].point100,
    point125: allpoints1[message.author.id].point125,
    point150: allpoints1[message.author.id].point150,
    point180: allpoints1[message.author.id].point180,
    point200: allpoints1[message.author.id].point200,
    point230: allpoints1[message.author.id].point230,
    point250: allpoints1[message.author.id].point250,
    point265: allpoints1[message.author.id].point265,
    point275: allpoints1[message.author.id].point275,
    point290: allpoints1[message.author.id].point290
  };
  fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if (err) console.log(err)
    });
    fs.writeFile("./allpoints1.json", JSON.stringify(allpoints1), (err) => {
      if (err) console.log(err)
      });
      parchemincommun[message.author.id] = {
        parchemincommun: uparchemincommun + 1
      }
      fs.writeFile("./parchemincommun.json", JSON.stringify(parchemincommun), (err) => {
        if (err) console.log(err)
        });
      message.channel.send(`**Félicitations** ${message.author.username}, vous êtes passé niveau 15!\nNouveau Rang: ${trucbizarre}Débutant II${trucbizarre}\n${trucbizarre}Points de Statistiques: +1${trucbizarre}\n${emoteparchemincommun}${trucbizarre}Parchemin Commun: +1${trucbizarre}`)
};
if(nivactuel >= 30 && allpoints1[message.author.id].point30 === 0){
  totalpoints_non_use[message.author.id] = {
    totalpoints_non_use: totalpoints_non_use[message.author.id].totalpoints_non_use + 1
  }
  allpoints1[message.author.id] = {
    point1: allpoints1[message.author.id].point1,
    point15: allpoints1[message.author.id].point15 ,
    point30: allpoints1[message.author.id].point30 +1,
    point45: allpoints1[message.author.id].point45,
    point70: allpoints1[message.author.id].point70,
    point90: allpoints1[message.author.id].point90,
    point100: allpoints1[message.author.id].point100,
    point125: allpoints1[message.author.id].point125,
    point150: allpoints1[message.author.id].point150,
    point180: allpoints1[message.author.id].point180,
    point200: allpoints1[message.author.id].point200,
    point230: allpoints1[message.author.id].point230,
    point250: allpoints1[message.author.id].point250,
    point265: allpoints1[message.author.id].point265,
    point275: allpoints1[message.author.id].point275,
    point290: allpoints1[message.author.id].point290
  };
  fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if (err) console.log(err)
    });
    fs.writeFile("./allpoints1.json", JSON.stringify(allpoints1), (err) => {
      if (err) console.log(err)
      });
      parcheminrare[message.author.id] = {
        parcheminrare: uparcheminrare + 1
      }
      fs.writeFile("./parcheminrare.json", JSON.stringify(parcheminrare), (err) => {
        if (err) console.log(err)
        });
      message.channel.send(`**Félicitations** ${message.author.username}, vous êtes passé niveau 30!\nNouveau Rang: ${trucbizarre}Débutant III${trucbizarre}\n${trucbizarre}Points de Statistiques: +1${trucbizarre}\n${emoteparcheminrare}${trucbizarre}Parchemin Rare: +1 ${trucbizarre}`)
};
if(nivactuel >= 45 && allpoints1[message.author.id].point45 === 0){
  totalpoints_non_use[message.author.id] = {
    totalpoints_non_use: totalpoints_non_use[message.author.id].totalpoints_non_use + 2
  }
  allpoints1[message.author.id] = {
    point1: allpoints1[message.author.id].point1,
    point15: allpoints1[message.author.id].point15 ,
    point30: allpoints1[message.author.id].point30,
    point45: allpoints1[message.author.id].point45 +1,
    point70: allpoints1[message.author.id].point70,
    point90: allpoints1[message.author.id].point90,
    point100: allpoints1[message.author.id].point100,
    point125: allpoints1[message.author.id].point125,
    point150: allpoints1[message.author.id].point150,
    point180: allpoints1[message.author.id].point180,
    point200: allpoints1[message.author.id].point200,
    point230: allpoints1[message.author.id].point230,
    point250: allpoints1[message.author.id].point250,
    point265: allpoints1[message.author.id].point265,
    point275: allpoints1[message.author.id].point275,
    point290: allpoints1[message.author.id].point290
  };
  fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if (err) console.log(err)
    });
    fs.writeFile("./allpoints1.json", JSON.stringify(allpoints1), (err) => {
      if (err) console.log(err)
      });
      parchemincommun[message.author.id] = {
        parchemincommun: uparchemincommun + 3
      }
      fs.writeFile("./parchemincommun.json", JSON.stringify(parchemincommun), (err) => {
        if (err) console.log(err)
        });
      message.channel.send(`**Félicitations** ${message.author.username}, vous êtes passé niveau 45!\nNouveau Rang: ${trucbizarre}Avancé I${trucbizarre}\n${trucbizarre}Points de Statistiques: +2${trucbizarre}\n${emoteparchemincommun}${trucbizarre}Parchemin Commun: +3${trucbizarre}`)
};
if(nivactuel >= 70 && allpoints1[message.author.id].point70 === 0){
  totalpoints_non_use[message.author.id] = {
    totalpoints_non_use: totalpoints_non_use[message.author.id].totalpoints_non_use + 2
  }
  allpoints1[message.author.id] = {
    point1: allpoints1[message.author.id].point1,
    point15: allpoints1[message.author.id].point15,
    point30: allpoints1[message.author.id].point30,
    point45: allpoints1[message.author.id].point45,
    point70: allpoints1[message.author.id].point70 +1,
    point90: allpoints1[message.author.id].point90,
    point100: allpoints1[message.author.id].point100,
    point125: allpoints1[message.author.id].point125,
    point150: allpoints1[message.author.id].point150,
    point180: allpoints1[message.author.id].point180,
    point200: allpoints1[message.author.id].point200,
    point230: allpoints1[message.author.id].point230,
    point250: allpoints1[message.author.id].point250,
    point265: allpoints1[message.author.id].point265,
    point275: allpoints1[message.author.id].point275,
    point290: allpoints1[message.author.id].point290
  };
  fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if (err) console.log(err)
    });
    fs.writeFile("./allpoints1.json", JSON.stringify(allpoints1), (err) => {
      if (err) console.log(err)
      });
      parcheminrare[message.author.id] = {
        parcheminrare: uparcheminrare + 3
      }
      fs.writeFile("./parcheminrare.json", JSON.stringify(parcheminrare), (err) => {
        if (err) console.log(err)
        });
      message.channel.send(`**Félicitations** ${message.author.username}, vous êtes passé niveau 70!\nNouveau Rang: ${trucbizarre}Avancé II${trucbizarre}\n${trucbizarre}Points de Statistiques: +2${trucbizarre}\n${emoteparcheminrare}${trucbizarre}Parchemin Rare: +2${trucbizarre}`)
};
if(nivactuel >= 90 && allpoints1[message.author.id].point90 === 0){
  totalpoints_non_use[message.author.id] = {
    totalpoints_non_use: totalpoints_non_use[message.author.id].totalpoints_non_use + 2
  }
  allpoints1[message.author.id] = {
    point1: allpoints1[message.author.id].point1,
    point15: allpoints1[message.author.id].point15 ,
    point30: allpoints1[message.author.id].point30,
    point45: allpoints1[message.author.id].point45,
    point70: allpoints1[message.author.id].point75,
    point90: allpoints1[message.author.id].point90 + 1,
    point100: allpoints1[message.author.id].point100,
    point125: allpoints1[message.author.id].point125,
    point150: allpoints1[message.author.id].point150,
    point180: allpoints1[message.author.id].point180,
    point200: allpoints1[message.author.id].point200,
    point230: allpoints1[message.author.id].point230,
    point250: allpoints1[message.author.id].point250,
    point265: allpoints1[message.author.id].point265,
    point275: allpoints1[message.author.id].point275,
    point290: allpoints1[message.author.id].point290
  };
  fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if (err) console.log(err)
    });
    fs.writeFile("./allpoints1.json", JSON.stringify(allpoints1), (err) => {
      if (err) console.log(err)
      });
      parcheminrare[message.author.id] = {
        parcheminrare: uparcheminrare + 1
      }
      fs.writeFile("./parcheminrare.json", JSON.stringify(parcheminrare), (err) => {
        if (err) console.log(err)
        });
      message.channel.send(`**Félicitations** ${message.author.username}, vous êtes passé niveau 90!\nNouveau Rang: ${trucbizarre}Avancé III${trucbizarre}\n${trucbizarre}Points de Statistiques: +2${trucbizarre}`)
};

if(nivactuel >= 100 && allpoints1[message.author.id].point100 === 0){
  totalpoints_non_use[message.author.id] = {
    totalpoints_non_use: totalpoints_non_use[message.author.id].totalpoints_non_use + 3
  }
  allpoints1[message.author.id] = {
    point1: allpoints1[message.author.id].point1,
    point15: allpoints1[message.author.id].point15 ,
    point30: allpoints1[message.author.id].point30,
    point45: allpoints1[message.author.id].point45,
    point70: allpoints1[message.author.id].point75,
    point90: allpoints1[message.author.id].point90,
    point100: allpoints1[message.author.id].point100 +1,
    point125: allpoints1[message.author.id].point125,
    point150: allpoints1[message.author.id].point150,
    point180: allpoints1[message.author.id].point180,
    point200: allpoints1[message.author.id].point200,
    point230: allpoints1[message.author.id].point230,
    point250: allpoints1[message.author.id].point250,
    point265: allpoints1[message.author.id].point265,
    point275: allpoints1[message.author.id].point275,
    point290: allpoints1[message.author.id].point290
  };
  fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if (err) console.log(err)
    });
    fs.writeFile("./allpoints1.json", JSON.stringify(allpoints1), (err) => {
      if (err) console.log(err)
      });
      parcheminepic[message.author.id] = {
        parcheminepic: uparcheminepic + 1
      }
      fs.writeFile("./parcheminepic.json", JSON.stringify(parcheminepic), (err) => {
        if (err) console.log(err)
        });
      message.channel.send(`**Félicitations** ${message.author.username}, vous êtes passé niveau 100!\nNouveau Rang: ${trucbizarre}Expert I${trucbizarre}\n${trucbizarre}Points de Statistiques: +3${trucbizarre}\n${emoteparcheminepic}${trucbizarre}Parchemin Epique: +1 ${trucbizarre}`)
};
if(nivactuel >= 125 && allpoints1[message.author.id].point125 === 0){
  totalpoints_non_use[message.author.id] = {
    totalpoints_non_use: totalpoints_non_use[message.author.id].totalpoints_non_use + 3
  }
  allpoints1[message.author.id] = {
    point1: allpoints1[message.author.id].point1,
    point15: allpoints1[message.author.id].point15 ,
    point30: allpoints1[message.author.id].point30,
    point45: allpoints1[message.author.id].point45,
    point70: allpoints1[message.author.id].point75,
    point90: allpoints1[message.author.id].point90,
    point100: allpoints1[message.author.id].point100,
    point125: allpoints1[message.author.id].point125 +1,
    point150: allpoints1[message.author.id].point150,
    point180: allpoints1[message.author.id].point180,
    point200: allpoints1[message.author.id].point200,
    point230: allpoints1[message.author.id].point230,
    point250: allpoints1[message.author.id].point250,
    point265: allpoints1[message.author.id].point265,
    point275: allpoints1[message.author.id].point275,
    point290: allpoints1[message.author.id].point290
  };
  fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if (err) console.log(err)
    });
    fs.writeFile("./allpoints1.json", JSON.stringify(allpoints1), (err) => {
      if (err) console.log(err)
      });
      cristal[message.author.id] = {
        cristal: ucristal + 5
      }
      fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
        if (err) console.log(err)
        });
      message.channel.send(`**Félicitations** ${message.author.username}, vous êtes passé niveau 125!\nNouveau Rang: ${trucbizarre}Expert II${trucbizarre}\n${trucbizarre}Points de Statistiques: +3${trucbizarre}\n${cristalemote}${trucbizarre}Cristal: +5${trucbizarre}`)
};
if(nivactuel >= 150 && allpoints1[message.author.id].point150 === 0){
  totalpoints_non_use[message.author.id] = {
    totalpoints_non_use: totalpoints_non_use[message.author.id].totalpoints_non_use + 3
  }
  allpoints1[message.author.id] = {
    point1: allpoints1[message.author.id].point1,
    point15: allpoints1[message.author.id].point15 ,
    point30: allpoints1[message.author.id].point30,
    point45: allpoints1[message.author.id].point45,
    point70: allpoints1[message.author.id].point75,
    point90: allpoints1[message.author.id].point90,
    point100: allpoints1[message.author.id].point100,
    point125: allpoints1[message.author.id].point125,
    point150: allpoints1[message.author.id].point150 +1,
    point180: allpoints1[message.author.id].point180,
    point200: allpoints1[message.author.id].point200,
    point230: allpoints1[message.author.id].point230,
    point250: allpoints1[message.author.id].point250,
    point265: allpoints1[message.author.id].point265,
    point275: allpoints1[message.author.id].point275,
    point290: allpoints1[message.author.id].point290
  };
  fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if (err) console.log(err)
    });
    fs.writeFile("./allpoints1.json", JSON.stringify(allpoints1), (err) => {
      if (err) console.log(err)
      });
      potxp3[message.author.id] = {
        potxp3: upotxp3 + 2
      }
      fs.writeFile("./potxp3.json", JSON.stringify(potxp3), (err) => {
        if (err) console.log(err)
        });
      message.channel.send(`**Félicitations** ${message.author.username}, vous êtes passé niveau 150!\nNouveau Rang: ${trucbizarre}Expert III${trucbizarre}\n${trucbizarre}Points de Statistiques: +3${trucbizarre}\n${potxp3emote}${trucbizarre}Potion d'Expérience III: +2${trucbizarre}`)
};
if(nivactuel >= 180 && allpoints1[message.author.id].point180 === 0){
  totalpoints_non_use[message.author.id] = {
    totalpoints_non_use: totalpoints_non_use[message.author.id].totalpoints_non_use + 4
  }
  allpoints1[message.author.id] = {
    point1: allpoints1[message.author.id].point1,
    point15: allpoints1[message.author.id].point15 ,
    point30: allpoints1[message.author.id].point30,
    point45: allpoints1[message.author.id].point45,
    point70: allpoints1[message.author.id].point75,
    point90: allpoints1[message.author.id].point90,
    point100: allpoints1[message.author.id].point100,
    point125: allpoints1[message.author.id].point125,
    point150: allpoints1[message.author.id].point150,
    point180: allpoints1[message.author.id].point180 +1,
    point200: allpoints1[message.author.id].point200,
    point230: allpoints1[message.author.id].point230,
    point250: allpoints1[message.author.id].point250,
    point265: allpoints1[message.author.id].point265,
    point275: allpoints1[message.author.id].point275,
    point290: allpoints1[message.author.id].point290
  };
  fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if (err) console.log(err)
    });
    fs.writeFile("./allpoints1.json", JSON.stringify(allpoints1), (err) => {
      if (err) console.log(err)
      });
      mysterybox[message.author.id] = {
        mysterybox: umysterybox + 5
      }
      fs.writeFile("./mysterybox.json", JSON.stringify(mysterybox), (err) => {
        if (err) console.log(err)
        });
      message.channel.send(`**Félicitations** ${message.author.username}, vous êtes passé niveau 180!\nNouveau Rang: ${trucbizarre}Pro I${trucbizarre}\n${trucbizarre}Points de Statistiques: +4${trucbizarre}\n${boxmysteryemote}${trucbizarre}Box Mystérieuse: +5${trucbizarre}`)
};
if(nivactuel >= 200 && allpoints1[message.author.id].point200 === 0){
  totalpoints_non_use[message.author.id] = {
    totalpoints_non_use: totalpoints_non_use[message.author.id].totalpoints_non_use + 4
  }
  allpoints1[message.author.id] = {
    point1: allpoints1[message.author.id].point1,
    point15: allpoints1[message.author.id].point15 ,
    point30: allpoints1[message.author.id].point30,
    point45: allpoints1[message.author.id].point45,
    point70: allpoints1[message.author.id].point75,
    point90: allpoints1[message.author.id].point90,
    point100: allpoints1[message.author.id].point100,
    point125: allpoints1[message.author.id].point125,
    point150: allpoints1[message.author.id].point150,
    point180: allpoints1[message.author.id].point180,
    point200: allpoints1[message.author.id].point200 +1,
    point230: allpoints1[message.author.id].point230,
    point250: allpoints1[message.author.id].point250,
    point265: allpoints1[message.author.id].point265,
    point275: allpoints1[message.author.id].point275,
    point290: allpoints1[message.author.id].point290
  };
  fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if (err) console.log(err)
    });
    fs.writeFile("./allpoints1.json", JSON.stringify(allpoints1), (err) => {
      if (err) console.log(err)
      });
      gemme2[message.author.id] = {
        gemme2: ugemme2 + 5
      }
      fs.writeFile("./gemme2.json", JSON.stringify(gemme2), (err) => {
        if (err) console.log(err)
        });
        gemme3[message.author.id] = {
          gemme3: ugemme3 + 5
        }
        fs.writeFile("./gemme3.json", JSON.stringify(gemme3), (err) => {
          if (err) console.log(err)
          });
          gemme4[message.author.id] = {
            gemme4: ugemme4 + 5
          }
          fs.writeFile("./gemme4.json", JSON.stringify(gemme4), (err) => {
            if (err) console.log(err)
            });
            gemme5[message.author.id] = {
              gemme5: ugemme5 + 5
            }
            fs.writeFile("./gemme5.json", JSON.stringify(gemme5), (err) => {
              if (err) console.log(err)
              });
      message.channel.send(`**Félicitations** ${message.author.username}, vous êtes passé niveau 200!\nNouveau Rang: ${trucbizarre}Pro II${trucbizarre}\n${trucbizarre}Points de Statistiques: +4${trucbizarre}\nToutes vos gemmes ont gagnées 5 niveaux.`)
};
if(nivactuel >= 230 && allpoints1[message.author.id].point230 === 0){
  totalpoints_non_use[message.author.id] = {
    totalpoints_non_use: totalpoints_non_use[message.author.id].totalpoints_non_use + 4
  }
  allpoints1[message.author.id] = {
    point1: allpoints1[message.author.id].point1,
    point15: allpoints1[message.author.id].point15 ,
    point30: allpoints1[message.author.id].point30,
    point45: allpoints1[message.author.id].point45,
    point70: allpoints1[message.author.id].point75,
    point90: allpoints1[message.author.id].point90,
    point100: allpoints1[message.author.id].point100,
    point125: allpoints1[message.author.id].point125,
    point150: allpoints1[message.author.id].point150,
    point180: allpoints1[message.author.id].point180,
    point200: allpoints1[message.author.id].point200,
    point230: allpoints1[message.author.id].point230 +1,
    point250: allpoints1[message.author.id].point250,
    point265: allpoints1[message.author.id].point265,
    point275: allpoints1[message.author.id].point275,
    point290: allpoints1[message.author.id].point290
  };
  fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if (err) console.log(err)
    });
    fs.writeFile("./allpoints1.json", JSON.stringify(allpoints1), (err) => {
      if (err) console.log(err)
      });
      gemme2[message.author.id] = {
        gemme2: ugemme2 + 10
      }
      fs.writeFile("./gemme2.json", JSON.stringify(gemme2), (err) => {
        if (err) console.log(err)
        });
        gemme3[message.author.id] = {
          gemme3: ugemme3 + 10
        }
        fs.writeFile("./gemme3.json", JSON.stringify(gemme3), (err) => {
          if (err) console.log(err)
          });
          gemme4[message.author.id] = {
            gemme4: ugemme4 + 10
          }
          fs.writeFile("./gemme4.json", JSON.stringify(gemme4), (err) => {
            if (err) console.log(err)
            });
            gemme5[message.author.id] = {
              gemme5: ugemme5 + 10
            }
            fs.writeFile("./gemme5.json", JSON.stringify(gemme5), (err) => {
              if (err) console.log(err)
              });
      message.channel.send(`**Félicitations** ${message.author.username}, vous êtes passé niveau 230!\nNouveau Rang: ${trucbizarre}Pro III${trucbizarre}\n${trucbizarre}Points de Statistiques: +4${trucbizarre}\nToutes vos gemmes ont gagnées 10 niveaux.`)
};

if(nivactuel >= 250 && allpoints1[message.author.id].point250 === 0){
  totalpoints_non_use[message.author.id] = {
    totalpoints_non_use: totalpoints_non_use[message.author.id].totalpoints_non_use + 5
  }
  allpoints1[message.author.id] = {
    point1: allpoints1[message.author.id].point1,
    point15: allpoints1[message.author.id].point15 ,
    point30: allpoints1[message.author.id].point30,
    point45: allpoints1[message.author.id].point45,
    point70: allpoints1[message.author.id].point75,
    point90: allpoints1[message.author.id].point90,
    point100: allpoints1[message.author.id].point100,
    point125: allpoints1[message.author.id].point125,
    point150: allpoints1[message.author.id].point150,
    point180: allpoints1[message.author.id].point180,
    point200: allpoints1[message.author.id].point200,
    point230: allpoints1[message.author.id].point230,
    point250: allpoints1[message.author.id].point250 +1,
    point265: allpoints1[message.author.id].point265,
    point275: allpoints1[message.author.id].point275,
    point290: allpoints1[message.author.id].point290
  };
  fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if (err) console.log(err)
    });
    fs.writeFile("./allpoints1.json", JSON.stringify(allpoints1), (err) => {
      if (err) console.log(err)
      });
      potxp3[message.author.id] = {
        potxp3: upotxp3 + 5
      }
      fs.writeFile("./potxp3.json", JSON.stringify(potxp3), (err) => {
        if (err) console.log(err)
        });
      message.channel.send(`**Félicitations** ${message.author.username}, vous êtes passé niveau 250!\nNouveau Rang: ${trucbizarre}Épique I${trucbizarre}\n${trucbizarre}Points de Statistiques: +5${trucbizarre}\n${potxp3emote}${trucbizarre}Potion d'Expérience: +5${trucbizarre}`)
};

if(nivactuel >= 265 && allpoints1[message.author.id].point265 === 0){
  totalpoints_non_use[message.author.id] = {
    totalpoints_non_use: totalpoints_non_use[message.author.id].totalpoints_non_use + 5
  }
  allpoints1[message.author.id] = {
    point1: allpoints1[message.author.id].point1,
    point15: allpoints1[message.author.id].point15 ,
    point30: allpoints1[message.author.id].point30,
    point45: allpoints1[message.author.id].point45,
    point70: allpoints1[message.author.id].point75,
    point90: allpoints1[message.author.id].point90,
    point100: allpoints1[message.author.id].point100,
    point125: allpoints1[message.author.id].point125,
    point150: allpoints1[message.author.id].point150,
    point180: allpoints1[message.author.id].point180,
    point200: allpoints1[message.author.id].point200,
    point230: allpoints1[message.author.id].point230,
    point250: allpoints1[message.author.id].point250,
    point265: allpoints1[message.author.id].point265 + 1,
    point275: allpoints1[message.author.id].point275,
    point290: allpoints1[message.author.id].point290
  };
  fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if (err) console.log(err)
    });
    fs.writeFile("./allpoints1.json", JSON.stringify(allpoints1), (err) => {
      if (err) console.log(err)
      });
      goldbox[message.author.id] = {
        goldbox: ugoldbox + 1
      }
      fs.writeFile("./goldbox.json", JSON.stringify(goldbox), (err) => {
        if (err) console.log(err)
        });
      message.channel.send(`**Félicitations** ${message.author.username}, vous êtes passé niveau 265!\nNouveau Rang: ${trucbizarre}Épique II${trucbizarre}\n${trucbizarre}Points de Statistiques: +5${trucbizarre}\n${boxgoldemote}${trucbizarre}Box Dorée: +1${trucbizarre}`)
};
if(nivactuel >= 275 && allpoints1[message.author.id].point275 === 0){
  totalpoints_non_use[message.author.id] = {
    totalpoints_non_use: totalpoints_non_use[message.author.id].totalpoints_non_use + 5
  }
  allpoints1[message.author.id] = {
    point1: allpoints1[message.author.id].point1,
    point15: allpoints1[message.author.id].point15 ,
    point30: allpoints1[message.author.id].point30,
    point45: allpoints1[message.author.id].point45,
    point70: allpoints1[message.author.id].point75,
    point90: allpoints1[message.author.id].point90,
    point100: allpoints1[message.author.id].point100,
    point125: allpoints1[message.author.id].point125,
    point150: allpoints1[message.author.id].point150,
    point180: allpoints1[message.author.id].point180,
    point200: allpoints1[message.author.id].point200,
    point230: allpoints1[message.author.id].point230,
    point250: allpoints1[message.author.id].point250,
    point265: allpoints1[message.author.id].point265,
    point275: allpoints1[message.author.id].point275 + 1,
    point290: allpoints1[message.author.id].point290
  };
  fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if (err) console.log(err)
    });
    fs.writeFile("./allpoints1.json", JSON.stringify(allpoints1), (err) => {
      if (err) console.log(err)
      });
      fragments[message.author.id] = {
        fragments: ufragments + 35
      }
      fs.writeFile("./fragments.json", JSON.stringify(fragments), (err) => {
        if (err) console.log(err)
        });
      message.channel.send(`**Félicitations** ${message.author.username}, vous êtes passé niveau 275!\nNouveau Rang: ${trucbizarre}Épique III${trucbizarre}\n${trucbizarre}Points de Statistiques: +5${trucbizarre}\n${fragemote}${trucbizarre}Fragments: +35${trucbizarre}`)
};
if(nivactuel >= 290 && allpoints1[message.author.id].point290 === 0){
  totalpoints_non_use[message.author.id] = {
    totalpoints_non_use: totalpoints_non_use[message.author.id].totalpoints_non_use + 6
  }
  allpoints1[message.author.id] = {
    point1: allpoints1[message.author.id].point1,
    point15: allpoints1[message.author.id].point15 ,
    point30: allpoints1[message.author.id].point30,
    point45: allpoints1[message.author.id].point45,
    point70: allpoints1[message.author.id].point75,
    point90: allpoints1[message.author.id].point90,
    point100: allpoints1[message.author.id].point100,
    point125: allpoints1[message.author.id].point125,
    point150: allpoints1[message.author.id].point150,
    point180: allpoints1[message.author.id].point180,
    point200: allpoints1[message.author.id].point200,
    point230: allpoints1[message.author.id].point230,
    point250: allpoints1[message.author.id].point250,
    point265: allpoints1[message.author.id].point265,
    point275: allpoints1[message.author.id].point275,
    point290: allpoints1[message.author.id].point290 + 1
  };
  fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if (err) console.log(err)
    });
    fs.writeFile("./allpoints1.json", JSON.stringify(allpoints1), (err) => {
      if (err) console.log(err)
      });
      parcheminlegendaire[message.author.id] = {
        parcheminlegendaire: uparcheminlegendaire + 1
      }
      fs.writeFile("./parcheminlegendaire.json", JSON.stringify(parcheminlegendaire), (err) => {
        if (err) console.log(err)
        });
      message.channel.send(`**Félicitations** ${message.author.username}, vous êtes passé niveau 290!\nNouveau Rang: ${trucbizarre}Légende I${trucbizarre}\n${trucbizarre}Points de Statistiques: +6${trucbizarre}\n${emoteparcheminlegendaire}${trucbizarre}Parchemin Légendaire: +1${trucbizarre}`)
}
if(nivactuel >= 300 && allpoints2[message.author.id].point300 === 0){
  totalpoints_non_use[message.author.id] = {
    totalpoints_non_use: totalpoints_non_use[message.author.id].totalpoints_non_use + 6
  };
  allpoints2[message.author.id] = {
    point300: allpoints2[message.author.id].point300 +1,
    point320: allpoints2[message.author.id].point320 ,
    point350: allpoints2[message.author.id].point350,
    point400: allpoints2[message.author.id].point400,
    point450: allpoints2[message.author.id].point450,
    point500: allpoints2[message.author.id].point500,
    point750: allpoints2[message.author.id].point750

  };
  fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if (err) console.log(err)
    });
    fs.writeFile("./allpoints2.json", JSON.stringify(allpoints2), (err) => {
      if (err) console.log(err)
      });
      supremebox[message.author.id] = {
        supremebox: usupremebox + 1
      }
      fs.writeFile("./supremebox.json", JSON.stringify(supremebox), (err) => {
        if (err) console.log(err)
        });
      message.channel.send(`**Félicitations** ${message.author.username}, vous êtes passé niveau 300!\nNouveau Rang: ${trucbizarre}Légende II${trucbizarre}\n${trucbizarre}Points de Statistiques: +6${trucbizarre}\n${boxsupremeemote}${trucbizarre}Box Suprême: +1${trucbizarre}`)
}
if(nivactuel >= 320 && allpoints2[message.author.id].point320 === 0){
  totalpoints_non_use[message.author.id] = {
    totalpoints_non_use: totalpoints_non_use[message.author.id].totalpoints_non_use + 6
  };
  allpoints2[message.author.id] = {
    point300: allpoints2[message.author.id].point300,
    point320: allpoints2[message.author.id].point320 +1,
    point350: allpoints2[message.author.id].point350,
    point400: allpoints2[message.author.id].point400,
    point450: allpoints2[message.author.id].point450,
    point500: allpoints2[message.author.id].point500,
    point750: allpoints2[message.author.id].point750

  };
  fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if (err) console.log(err)
    });
    fs.writeFile("./allpoints2.json", JSON.stringify(allpoints2), (err) => {
      if (err) console.log(err)
      });
      dailypoints[message.author.id] = {
        dailypoints: udailypoints + 250
      }
      fs.writeFile("./dailypoints.json", JSON.stringify(dailypoints), (err) => {
        if (err) console.log(err)
        });
      message.channel.send(`**Félicitations** ${message.author.username}, vous êtes passé niveau 320!\nNouveau Rang: ${trucbizarre}Légende III${trucbizarre}\n${trucbizarre}Points de Statistiques: +6${trucbizarre}\n${dailyemote}${trucbizarre}DailyPoints: +250${trucbizarre}`)
}
if(nivactuel >= 350 && allpoints2[message.author.id].point350 === 0){
  totalpoints_non_use[message.author.id] = {
    totalpoints_non_use: totalpoints_non_use[message.author.id].totalpoints_non_use + 7
  };
  allpoints2[message.author.id] = {
    point300: allpoints2[message.author.id].point300,
    point320: allpoints2[message.author.id].point320,
    point350: allpoints2[message.author.id].point350 +1,
    point400: allpoints2[message.author.id].point400,
    point450: allpoints2[message.author.id].point450,
    point500: allpoints2[message.author.id].point500,
    point750: allpoints2[message.author.id].point750

  };
  fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if (err) console.log(err)
    });
    fs.writeFile("./allpoints2.json", JSON.stringify(allpoints2), (err) => {
      if (err) console.log(err)
      });
      parcheminlegendaire[message.author.id] = {
        parcheminlegendaire: uparcheminlegendaire + 2
      }
      fs.writeFile("./parcheminlegendaire.json", JSON.stringify(parcheminlegendaire), (err) => {
        if (err) console.log(err)
        });
      message.channel.send(`**Félicitations** ${message.author.username}, vous êtes passé niveau 350!\nNouveau Rang: ${trucbizarre}Suprême I${trucbizarre}\n${trucbizarre}Points de Statistiques: +7${trucbizarre}\n${emoteparcheminlegendaire}${trucbizarre}Parchemin Légendaire: +2${trucbizarre}`)
}
if(nivactuel >= 400 && allpoints2[message.author.id].point400 === 0){
  totalpoints_non_use[message.author.id] = {
    totalpoints_non_use: totalpoints_non_use[message.author.id].totalpoints_non_use + 7
  };
  allpoints2[message.author.id] = {
    point300: allpoints2[message.author.id].point300,
    point320: allpoints2[message.author.id].point320,
    point350: allpoints2[message.author.id].point350,
    point400: allpoints2[message.author.id].point400 +1,
    point450: allpoints2[message.author.id].point450,
    point500: allpoints2[message.author.id].point500,
    point750: allpoints2[message.author.id].point750

  };
  fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if (err) console.log(err)
    });
    fs.writeFile("./allpoints2.json", JSON.stringify(allpoints2), (err) => {
      if (err) console.log(err)
      });
      supremebox[message.author.id] = {
        supremebox: usupremebox + 3
      }
      fs.writeFile("./supremebox.json", JSON.stringify(supremebox), (err) => {
        if (err) console.log(err)
        });
      message.channel.send(`**Félicitations** ${message.author.username}, vous êtes passé niveau 400!\nNouveau Rang: ${trucbizarre}Suprême II${trucbizarre}\n${trucbizarre}Points de Statistiques: +7${trucbizarre}\n${boxsupremeemote}${trucbizarre}Box Suprême: +3${trucbizarre}`)
}
if(nivactuel >= 450 && allpoints2[message.author.id].point450 === 0){
  totalpoints_non_use[message.author.id] = {
    totalpoints_non_use: totalpoints_non_use[message.author.id].totalpoints_non_use + 7
  };
  allpoints2[message.author.id] = {
    point300: allpoints2[message.author.id].point300,
    point320: allpoints2[message.author.id].point320,
    point350: allpoints2[message.author.id].point350,
    point400: allpoints2[message.author.id].point400,
    point450: allpoints2[message.author.id].point450 +1,
    point500: allpoints2[message.author.id].point500,
    point750: allpoints2[message.author.id].point750

  };
  fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if (err) console.log(err)
    });
    fs.writeFile("./allpoints2.json", JSON.stringify(allpoints2), (err) => {
      if (err) console.log(err)
      });
      gemme2[message.author.id] = {
        gemme2: ugemme2 + 25
      }
      fs.writeFile("./gemme2.json", JSON.stringify(gemme2), (err) => {
        if (err) console.log(err)
        });
        gemme3[message.author.id] = {
          gemme3: ugemme3 + 25
        }
        fs.writeFile("./gemme3.json", JSON.stringify(gemme3), (err) => {
          if (err) console.log(err)
          });
          gemme4[message.author.id] = {
            gemme4: ugemme4 + 25
          }
          fs.writeFile("./gemme4.json", JSON.stringify(gemme4), (err) => {
            if (err) console.log(err)
            });
            gemme5[message.author.id] = {
              gemme5: ugemme5 + 25
            }
            fs.writeFile("./gemme5.json", JSON.stringify(gemme5), (err) => {
              if (err) console.log(err)
              });
      message.channel.send(`**Félicitations** ${message.author.username}, vous êtes passé niveau 450!\nNouveau Rang: ${trucbizarre}Suprême III${trucbizarre}\n${trucbizarre}Points de Statistiques: +7${trucbizarre}\nToutes vos gemmes ont gagnées 25 niveaux.`)
}
if(nivactuel >= 500 && allpoints2[message.author.id].point500 === 0){
  totalpoints_non_use[message.author.id] = {
    totalpoints_non_use: totalpoints_non_use[message.author.id].totalpoints_non_use + 8
  };
  allpoints2[message.author.id] = {
    point300: allpoints2[message.author.id].point300,
    point320: allpoints2[message.author.id].point320,
    point350: allpoints2[message.author.id].point350,
    point400: allpoints2[message.author.id].point400,
    point450: allpoints2[message.author.id].point450,
    point500: allpoints2[message.author.id].point500 +1,
    point750: allpoints2[message.author.id].point750

  };
  fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if (err) console.log(err)
    });
    fs.writeFile("./allpoints2.json", JSON.stringify(allpoints2), (err) => {
      if (err) console.log(err)
      });
      potxp3[message.author.id] = {
        potxp3: upotxp3 + 15
      }
      fs.writeFile("./potxp3.json", JSON.stringify(potxp3), (err) => {
        if (err) console.log(err)
        });
      message.channel.send(`**Félicitations** ${message.author.username}, vous êtes passé niveau 500!\nNouveau Rang: ${trucbizarre}Dieu${trucbizarre}\n${trucbizarre}Points de Statistiques: +8${trucbizarre}\n${potxp3emote}${trucbizarre}Potion d'Expérience III: +15${trucbizarre}`)
}
if(nivactuel >= 750 && allpoints2[message.author.id].point750 === 0){
  totalpoints_non_use[message.author.id] = {
    totalpoints_non_use: totalpoints_non_use[message.author.id].totalpoints_non_use + 12
  };
  allpoints2[message.author.id] = {
    point300: allpoints2[message.author.id].point300,
    point320: allpoints2[message.author.id].point320,
    point350: allpoints2[message.author.id].point350,
    point400: allpoints2[message.author.id].point400,
    point450: allpoints2[message.author.id].point450,
    point500: allpoints2[message.author.id].point500,
    point750: allpoints2[message.author.id].point750 +1

  };
  fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if (err) console.log(err)
    });
    fs.writeFile("./allpoints2.json", JSON.stringify(allpoints2), (err) => {
      if (err) console.log(err)
      });
      parcheminlegendaire[message.author.id] = {
        parcheminlegendaire: uparcheminlegendaire + 10
      }
      fs.writeFile("./parcheminlegendaire.json", JSON.stringify(parcheminlegendaire), (err) => {
        if (err) console.log(err)
        });
      message.channel.send(`**Félicitations** ${message.author.username}, vous êtes passé niveau 750!\nNouveau Rang: ${trucbizarre}Overlord${trucbizarre}\n${trucbizarre}Points de Statistiques: +12${trucbizarre}\n${emoteparcheminlegendaire}${trucbizarre}Parchemin Légendaire: +10${trucbizarre}`)
}
  //Ressources



  if(!Acier[message.author.id]){
    Acier[message.author.id] = {
      Acier: 0
    };
  fs.writeFile("./Acier.json", JSON.stringify(Acier), (err) => {
    if (err) console.log(err)
  });
}

if(!BoisdeSapin[message.author.id]){
  BoisdeSapin[message.author.id] = {
    BoisdeSapin: 0
  };


fs.writeFile("./BoisdeSapin.json", JSON.stringify(BoisdeSapin), (err) => {
  if (err) console.log(err)
});
}

if(!BoisdeBouleau[message.author.id]){
  BoisdeBouleau[message.author.id] = {
    BoisdeBouleau: 0
  };


fs.writeFile("./BoisdeBouleau.json", JSON.stringify(BoisdeBouleau), (err) => {
  if (err) console.log(err)
});
}

if(!BoisdeChêne[message.author.id]){
  BoisdeChêne[message.author.id] = {
    BoisdeChêne: 0
  };


fs.writeFile("./BoisdeChêne.json", JSON.stringify(BoisdeChêne), (err) => {
  if (err) console.log(err)
});
}

if(!BoisDoré[message.author.id]){
  BoisDoré[message.author.id] = {
    BoisDoré: 0
  };


fs.writeFile("./BoisDoré.json", JSON.stringify(BoisDoré), (err) => {
  if (err) console.log(err)
});
}

if(!Diamant[message.author.id]){
  Diamant[message.author.id] = {
    Diamant: 0
  };



fs.writeFile("./Diamant.json", JSON.stringify(Diamant), (err) => {
  if (err) console.log(err)
});
}
  
if(!Fer[message.author.id]){
  Fer[message.author.id] = {
    Fer: 0
  };



fs.writeFile("./Fer.json", JSON.stringify(Fer), (err) => {
  if (err) console.log(err)
});
}

if(!Or[message.author.id]){
  Or[message.author.id] = {
    Or: 0
  };



fs.writeFile("./Or.json", JSON.stringify(Or), (err) => {
  if (err) console.log(err)
});
}

if(!Pierre[message.author.id]){
  Pierre[message.author.id] = {
    Pierre: 0
  };

fs.writeFile("./Pierre.json", JSON.stringify(Pierre), (err) => {
  if (err) console.log(err)
});
}

if(!Foreuse[message.author.id]){
  Foreuse[message.author.id] = {
    Foreuse: 1
  };
}

fs.writeFile("./Foreuse.json", JSON.stringify(Foreuse), (err) => {
  if(err) console.log(err)
 });

if(!Hache[message.author.id]){
  Hache[message.author.id] = {
    Hache: 1
  };
}

fs.writeFile("./Hache.json", JSON.stringify(Hache), (err) => {
  if(err) console.log(err)
});

if(!PierreNoire[message.author.id]){
  PierreNoire[message.author.id] = {
    PierreNoire: 0
  };


fs.writeFile("./BoisDoré.json", JSON.stringify(BoisDoré), (err) => {
  if (err) console.log(err)
});
}

if(!Platine[message.author.id]){
  Platine[message.author.id] = {
    Platine: 0
  };

fs.writeFile("./Platine.json", JSON.stringify(Platine), (err) => {
  if (err) console.log(err)
});
}

if(!register[message.author.id]){
  register[message.author.id] = {
    register: 0
  };

fs.writeFile("./register.json", JSON.stringify(register), (err) => {
  if (err) console.log(err)
});
}

if(!Plutonium[message.author.id]){
  Plutonium[message.author.id] = {
    Plutonium: 0
  };

fs.writeFile("./Plutonium.json", JSON.stringify(Plutonium), (err) => {
  if (err) console.log(err)
});
}
let uAdmin = admin[message.author.id].admin;
let uForeuse = Foreuse[message.author.id].Foreuse;
let uPvmax = Pvmax[message.author.id].Pvmax;
let uPv = Pv[message.author.id].Pv;
let uAtk = Atk[message.author.id].Atk;
let uDef = Def[message.author.id].Def;
let uBouclier = Bouclier[message.author.id].Bouclier;
let uRxCoins = RxCoins[message.author.id].RxCoins;
let uEpee = Epee[message.author.id].Epee;
let uBoisdeBouleau = BoisdeBouleau[message.author.id].BoisdeBouleau;
let uBoisDoré = BoisDoré[message.author.id].BoisDoré;
let uAcier = Acier[message.author.id].Acier;
let uFer = Fer[message.author.id].Fer;
let uOr = Or[message.author.id].Or;
let uPlatine = Platine[message.author.id].Platine;
let uDiamant = Diamant[message.author.id].Diamant;
let uPlutonium = Plutonium[message.author.id].Plutonium;
let uPierreNoire = PierreNoire[message.author.id].PierreNoire
let uHache = Hache[message.author.id].Hache;
let uPierre = Pierre[message.author.id].Pierre;
let uBoisdeSapin = BoisdeSapin[message.author.id].BoisdeSapin;
let uXPBoost = XPBoost[message.author.id].XPBoost;
let uLooting = Looting[message.author.id].Looting;
let uTimerReduc = TimerReduc[message.author.id].TimerReduc;
let uBoisdeChêne = BoisdeChêne[message.author.id].BoisdeChêne;
let uHéro = Héro[message.author.id].Héro;

let uetage = etage[message.author.id].etage;
let uetage2 = etage2[message.author.id].etage2;
let uetage3 = etage3[message.author.id].etage3;
let uetage4 = etage4[message.author.id].etage4;
let uetage5 = etage5[message.author.id].etage5;

let uPieceor = Pieceor[message.author.id].Pieceor;
 let classename = ""

 let uwritecommon = writecommon[message.author.id].writecommon
 let uwriterare = writerare[message.author.id].writerare
 let uwriteepic = writeepic[message.author.id].writeepic
 let uwritemystery = writemystery[message.author.id].writemystery
 let uwritegold = writegold[message.author.id].writegold
 let uwritesupreme = writesupreme[message.author.id].writesupreme
 let uwritepcommon = writepcommon[message.author.id].writepcommon
 let uwriteprare = writeprare[message.author.id].writeprare
 let uwritepepic = writepepic[message.author.id].writepepic
 let uwriteplegend = writeplegend[message.author.id].writeplegend


if(uclassen === 0) {
  classename = ""
}


let idg1 = ""
let idg2 = ""
let idg3 = ""
let idg4 = ""
let idg5 = ""
let idfo = ""
let idha = ""
let idsw = ""
let idsh = ""
let idti = ""
let idlo = ""
let idxp = ""

let vid = ":white_check_mark:"






let Hname = "Hache"
let Fname = "Foreuse"
let Sname = "Epée"
let Bname = "Bouclier"
let hemote = ""
let femote = ""
let semote = ""
let shemote = ""
let emotexpboost = ""
let emotelooting = ""
let emotetimer = ""
let aha = ""
let ahamaj = ""
let afo = ""
let afomaj = ""
let asw = ""
let aswmaj = ""
let ash = ""
let ashmaj = ""
let bagemote = ""
let boostAtkClasse = 1
let boostDefClasse = 1
let boostPVClasse = 1

if(uclassen === 1) {
 classename = "Mage"
 Hname = "Vieux livre"
 hemote = "<:livreancien:777504672126730252>"
 Fname = "Livre en pierre"
 femote = "<:livrepierre:777504688605757510>"
 Sname = "Baguette magique"
 semote = "<:baguette:598861539621208085>"
 Bname = "Bouclier magique"
 shemote = "<:Magikshield:598864388031774731>"
 emotexpboost = "<:XPBoost:603262506655285249>" 
 emotelooting = "<:LootOrb:603590666450370581>"
 emotetimer = "<:TimerR:603930490252165133>"

 aha = "v"
 ahamaj = "V"
 afo = "li"
 afomaj = "Li"
 asw = "bagu"
 aswmaj = "Bagu"
 ash = "bo"
 ashmaj = "Bo"
  idfo = "598854715299725322"
  idha = "598854691262300162"
  idsw = "598861539621208085"
  idsh = "598864388031774731"
  idti = "603930490252165133"
  idlo = "603590666450370581"
  idxp = "603262506655285249"
  bagemote = "<:bag1:611577993336455175>"
  boostAtkClasse = (1 * nivactuelclasse)/4
  boostDefClasse = (6 * nivactuelclasse)/4
  boostPVClasse = (3* nivactuelclasse)
  affinitemage = 1.5


}
if(uclassen === 2) {

  classename = "Prêtre"
  Hname = "Hache mystique"
  hemote = "<:axemystic:598883637219426304>"
  Fname = "Pioche mystique"
  femote = "<:pickaxemystic:598883745524613150>"
  Sname = "Epée"
  semote = "<:sword:598883613718741002>"
  Bname = "Protection mystique"
  shemote = "<:mysticshield:598867736008851485> "
  emotexpboost = "<:XPBoost2:603572457307373569>"
  emotelooting = "<:LootOrb2:603590684426895380>"
  emotetimer = "<:TimerR2:603930524846653441>"
  aha = "h"
  ahamaj = "H"
  afo = "pi"
  afomaj = "Pi"
  asw = "e"
  aswmaj = "E"
  ash = "pr"
  ashmaj = "Pr"
  idfo = "598883745524613150"
  idha = "598883637219426304"
  idsw = "598883613718741002"
  idsh = "598867736008851485"
  idti = "603930524846653441"
  idlo = "603590684426895380"
  idxp = "603572457307373569"
  bagemote = "<:bag2:611578089964699741>"
  boostAtkClasse = (7 * nivactuelclasse)/4
  boostDefClasse = (1 * nivactuelclasse)/4
  boostPVClasse = (2* nivactuelclasse)
  affinitemv = 1.5
}
if(uclassen === 3) {

  classename = "Archer"
  Hname = "Hache sacrée" 
  hemote = "<:sacredaxe:598894692339417135>"
  Fname = "Pioche sacrée"
  femote = "<:sacredpickaxe:598894666561093642>"
  Sname = "Arc"
  semote = "<:sacrbow:598894755899768873>"
  Bname = "Bouclier sacré"
  shemote = "<:sacredshield:598886803885522944>"
  emotexpboost = "<:XPBoost3:603572668855484416>"
  emotelooting = "<:LootOrb3:603590705402740739>"
  emotetimer = "<:TimerR3:603930556291481611>"
  aha = "h"
  ahamaj = "H"
  afo = "p"
  afomaj = "P"
  asw = "ar"
  aswmaj = "Ar"
  ash = "b"
  ashmaj = "B"
  idfo = "598894666561093642"
  idha = "598894692339417135"
  idsw = "598894755899768873"
  idsh = "598886803885522944"
  idti = "603930556291481611"
  idlo = "603590705402740739"
  idxp = "603572668855484416"
  bagemote = "<:bag3:611577935370911745>"
  boostAtkClasse = (4 * nivactuelclasse)/4
  boostDefClasse = (2 * nivactuelclasse)/4
  boostPVClasse = (3* nivactuelclasse)
  affiniteelfe = 1.5
}
if(uclassen === 4) {

  classename = "Guerrier"
  Hname = "Hache"
  hemote = "<:axe:598883627870322740>"
  Fname = "Pioche"
  femote = "<:pickaxe:598883724616007713>"
  Sname = "Marteau"
  semote = "<:hammerx:598904578754215946>"
  Bname = "Bouclier"
  shemote = "<:shieldbanal:598896225323843584>"
  emotexpboost = "<:XPBoost4:603572694553853956>"
  emotelooting = "<:LootOrb4:603590727619969035>"
  emotetimer = "<:TimerR4:603930597051727872>"
  aha = "h"
  ahamaj = "H"
  afo = "p"
  afomaj = "P"
  asw = "m"
  aswmaj = "M"
  ash = "b"
  ashmaj = "B"
  idfo = "598883724616007713"
  idha = "598883627870322740"
  idsw = "598904578754215946"
  idsh = "598896225323843584"
  idti = "603930597051727872"
  idlo = "603590727619969035"
  idxp = "603572694553853956"
  bagemote = "<:bag4:611577959425376296>"
  boostAtkClasse = (3 * nivactuelclasse)/4
  boostDefClasse = (3 * nivactuelclasse)/4
  boostPVClasse = (3* nivactuelclasse)
  affinitenain = 1.5
}
if(uclassen === 5) {

  classename = "Chevalier"
  Hname = "Hache"
  hemote = "<:axe:598883627870322740>"
  Fname = "Foreuse"
  femote = "<:drill:598899581618749450>"
  Sname = "Epée"
  semote = "<:sword:598883613718741002>"
  Bname = "Bouclier"
  shemote = "<:shieldbanal:598896225323843584>"
  emotexpboost = "<:XPBoost5:603572727919411200>"
  emotelooting = "<:LootOrb5:603590751435227157>"
  emotetimer = "<:TimerR5:603930632090943525>"
  aha = "h"
  ahamaj = "H"
  afo = "fore"
  afomaj = "Fore"
  asw = "e"
  aswmaj = "E"
  ash = "b"
  ashmaj = "B"
  idfo = "598899581618749450"
  idha = "598883627870322740"
  idsw = "598883613718741002"
  idsh = "598896225323843584"
  idti = "603930632090943525"
  idlo = "603590751435227157"
  idxp = "603572727919411200"
  bagemote = "<:bag5:611577902244560907>"
  boostAtkClasse = (1 * nivactuelclasse)/4
  boostDefClasse = (1 * nivactuelclasse)/4
  boostPVClasse = (1* nivactuelclasse)
  affinitehumain = 1.5
}
let upinfoembed = new Discord.RichEmbed()
.addField(`${message.author.username}, voici la liste des items améliorables:`,`○${Fname} ${femote}\n○${Hname} ${hemote}\n○${Sname} ${semote}\n○${Bname} ${shemote}\n○Looting ${emotelooting}\n○XPBoost ${emotexpboost}\n○TimerReduc ${emotetimer}\n○Sac ${bagemote}\n○Atelier :house:\n○Forge :hammer_pick:\n\nPour améliorer un item, faites ${trucbizarre}!up [item]${trucbizarre}`);
if( 
   includesRealy(message, `!upinfo`)

   
){ 
  if(uclassen === 0 ) message.channel.send("!classe")
  if(uclassen >= 1) message.channel.send(upinfoembed)

};



let resetower = require("./resetower.json")

let resetower2 = require("./resetower2.json")

let resetower3 = require("./resetower3.json")

let resetower4 = require("./resetower4.json")

let resetower5 = require("./resetower5.json")




let artefact1name = ""
let artefact1emoji = ""
let artefact1effect = 1
let artefact2name = ""
let artefact2emoji = ""
let artefact2effect = 1

let artefact3name = ""
let artefact3emoji = ""
let artefact3effect = 1

let artefact4name = ""
let artefact4emoji = ""
let artefact4effect = 1

let artefact5name = ""
let artefact5emoji = ""
let artefact5effect = 1

let artefact6name = ""
let artefact6emoji = ""
let artefact6effect = 1

let artefact7name = ""
let artefact7emoji = ""
let artefact7effect = 1


let artefact8name = ""
let artefact8emoji = ""
let artefact8effect = 1
let artefact8effect2 = 1

let artefact9name = ""
let artefact9emoji = ""
let artefact9effect = 1
let artefact10name = ""
let artefact10emoji = ""
let artefact11effect = 1
let artefact11name = ""
let artefact11emoji = ""
let artefact10effect = 1
let wartifact = 0
if(nivactuel > 149) {
  artefact1name = "**Rubis du Farmeur** <:ruby1:777791528483160074>\n``+25% de ressources à la collecte``"
  artefact1emote = ""
  artefact1effect = 1.25
  wartifact = 1
  };
if(nivactuel > 199) {
  artefact2name = "\n**Orbe Mystique** <:orb_2:777794182483804160>\n``+25% de ressources à la collecte``"
  artefact2emote = ""
  artefact2effect = 1.25
  wartifact = 1
  };

if(nivactuel > 249) {
  artefact3name = "\n**Crâne inquiétant** <:skull1:777798101096071168>\n``Coût des gemmes réduit de moitié``"
  artefact3emote = ""
  artefact3effect = 2
  wartifact = 1
  };
  if(nivactuel > 299) {
  artefact4name = "\n**Engrenage Mystérieux** <:gear1:777798901603762196>\n``+50% d'XP à la collecte``"
  artefact4emote = ""
  artefact4effect = 1.5
  wartifact = 1
  };
  if(nivactuel > 349) {
  artefact5name = "\n**Pierre inconnue** <:mstone:777799137680818206>\n``+25% de fragments à chaque reset du donjon``"
  artefact5emote = ""
  artefact5effect = 1.5
  wartifact = 1
  };
  if(nivactuel > 399) {
  artefact6name = "\n**Météore** <:METEOR:777803204330258433>\n``+25% de RxCoins à la collecte``"
  artefact6emote = ""
  artefact6effect = 1.25
  wartifact = 1
  };
  if(nivactuel > 449) {
  artefact7name = "\n**Écu d'argent** <:ecu1:777804549191893057>\n``+15% d'xp gagné contre les boss``"
  artefact7emote = ""
  artefact7effect = 1.15
  };
  if(nivactuel > 499) {
  artefact8name = "\n**Écu d'or** <:ecu2:777804532814053427>\n``+25% d'or gagné contre les boss et +15% d'xp gagné contre les boss``"
  artefact8emote = ""
  artefact8effect = 1.25
  artefact8effect2 = 1.15
  wartifact = 1
  };
  if(nivactuel > 549) {
  artefact9name = "\n**Vieille épée** <:epee11:777806710840492072>\n``+25% d'attaque, de défense et de Pv``"
  artefact9emote = ""
  artefact9effect = 1.25
  wartifact = 1
  };
  
  if(nivactuel > 599) {
  artefact10name = "\n**Gemme Dorée** <:goldgemme:777809525058568223>\n``Effet des gemmes multiplié par 2``"
  artefact10emote = ""
  artefact10effect = 2
  wartifact = 1
  };
  if(nivactuel > 649) {
  artefact11name = "\n**Courrier Illisible** <:mail:777807818438606888>\n``Ressources obtenues au daily multipliés par 2``"
  artefact11emote = ""
  artefact11effect = 2
  wartifact = 1
  };
if(wartifact === 0){
   artefact1name = "\nVous ne possédez aucun artefact..."
}


if(!resetower[message.author.id]){
    resetower[message.author.id] = {
      resetower: 0
    };

  fs.writeFile("./resetower.json", JSON.stringify(resetower), (err) => {
    if (err) console.log(err)
  });
}
if(!resetower3[message.author.id]){
  resetower3[message.author.id] = {
    resetower3: 0
  };

fs.writeFile("./resetower3.json", JSON.stringify(resetower3), (err) => {
  if (err) console.log(err)
});
}
if(!resetower2[message.author.id]){
  resetower2[message.author.id] = {
    resetower2: 0
  };

fs.writeFile("./resetower2.json", JSON.stringify(resetower2), (err) => {
  if (err) console.log(err)
});
}
if(!resetower4[message.author.id]){
  resetower4[message.author.id] = {
    resetower4: 0
  };

fs.writeFile("./resetower4.json", JSON.stringify(resetower4), (err) => {
  if (err) console.log(err)
});
}
if(!resetower5[message.author.id]){
  resetower5[message.author.id] = {
    resetower5: 0
  };

fs.writeFile("./resetower5.json", JSON.stringify(resetower5), (err) => {
  if (err) console.log(err)
});
}
let uresetower = resetower[message.author.id].resetower
let uresetower2 = resetower2[message.author.id].resetower2
let uresetower3 = resetower3[message.author.id].resetower3
let uresetower4 = resetower4[message.author.id].resetower4
let uresetower5 = resetower5[message.author.id].resetower5



let gemme1name = ""
let gemme1effect = 1
let gemme1emote = ""
let gemme2name = ""
let gemme2effectxp = 1
let gemme2effectpo = 1
let gemme2emote = ""
let gemme3name = ""
let gemme3effectatk = 1
let gemme3effectdef = 1
let gemme3effectpv = 1
let gemme3emote = ""
let gemme4name = ""
let gemme4effect = ""
let gemme4emote = ""
let gemme5name = ""
let gemme5effectwood = 1
let gemme5effectmining = 1
let gemme5effectrx = 1
let gemme5effectpn = 1
let gemme5effectgw = 1
let gemme5effectpx = 1
let gemme5emote = ""



let nombremulti = 1
let nombremulti2 = 1
let nombremulti3 = 1
let nombremulti4 = 1
let nombremulti5 = 1


if(uresetower > 0) {
   nombremulti = 1 + ((uresetower*2.5)/100)
   };
   if(uresetower2 > 0) {
    nombremulti2 = 1 + ((uresetower2*3)/100)
    };
    if(uresetower3 > 0) {
      nombremulti3 = 1 + ((uresetower3*3.5)/100)
      };
      if(uresetower4 > 0) {
        nombremulti4 = 1 + ((uresetower4*3)/100)
        };
        if(uresetower5 > 0) {
          nombremulti5 = 1 + ((uresetower5*2.5)/100)
          };





let udonjonunlock2 = donjonunlock2[message.author.id].donjonunlock2
let udonjonunlock3 = donjonunlock3[message.author.id].donjonunlock3
let udonjonunlock4 = donjonunlock4[message.author.id].donjonunlock4
let udonjonunlock5 = donjonunlock5[message.author.id].donjonunlock5


let dropfragmentsmin = (0.1 + uresetower * 1)* artefact5effect

let dropfragmentsmax = (0.3 + uresetower * 1.2) * artefact5effect

let dropfragmentsmin2 = (0.3 + uresetower2 * 1.2)* artefact5effect

let dropfragmentsmax2 = (0.6 + uresetower2 * 1.5) * artefact5effect

let dropfragmentsmin3 = (0.6 + uresetower3 * 1.6)* artefact5effect

let dropfragmentsmax3 = (1 + uresetower3 * 2.3) * artefact5effect

let dropfragmentsmin4 = (1 + uresetower4 * 2)* artefact5effect

let dropfragmentsmax4 = (2 + uresetower4 * 3) * artefact5effect

let dropfragmentsmin5 = (2.2 + uresetower5 * 3)* artefact5effect

let dropfragmentsmax5 = (3.2 + uresetower5 * 4) * artefact5effect

let pfragdrop = Math.floor(Math.random() * dropfragmentsmax) + dropfragmentsmin;
let pfragdrop2 = Math.floor(Math.random() * dropfragmentsmax2) + dropfragmentsmin2;
let pfragdrop3 = Math.floor(Math.random() * dropfragmentsmax3) + dropfragmentsmin3;
let pfragdrop4 = Math.floor(Math.random() * dropfragmentsmax4) + dropfragmentsmin4;
let pfragdrop5 = Math.floor(Math.random() * dropfragmentsmax5) + dropfragmentsmin5;


 
let desc1 = "``On dit qu'elle réduit le temps...``"
let desc2 = "``Elle boosterait les loots des boss...``"
let desc3 = "``Votre puissance au combat serait boostée...``"
let desc4 = "``Vous attirez les fragments...!``"
let desc5 = "``Allez voir votre collecte parfois...``"


if(uclassen === 1){
 gemme1name = "Gemme Bleue"
 gemme1emote = "<:GemmeBleue1:610483134936514570>"
 
 gemme1effect = (120000 * artefact10effect) * ugemme1
 gemme2name = "Gemme Rouge"
 gemme2emote = "<:GemmeRouge:610482606835892224>"
 gemme2effectxp = 1 + ((0.15*ugemme2/100)* artefact10effect)

 gemme3effectpv = 1 + ((0.15*ugemme3) * artefact10effect)


 gemme3name = "Gemme Verte"
 gemme3emote = "<:GemmeVerte:610482211132801037>"
 gemme4effect = 1 + ((0.25 * ugemme4) * artefact10effect)
 gemme4name = "Gemme Rose"
 gemme4emote = "<:GemmeRose:610482700322865153>"
 gemme5name = "Gemme Violette"
 gemme5emote = "<:GemmeViolette:610482494583734335>"
 gemme5effectrx = 1 + ((0.25 * ugemme5) * artefact10effect)

 };
 
 
 if(uclassen === 2){
 gemme1name = "Gemme Bleue"
 gemme1emote = "<:GemmeBleue2:610483279875014720>"
 
 gemme1effect = (120000 * artefact10effect) * ugemme1
 gemme2name = "Gemme Rouge"
 gemme2emote = "<:GemmeRouge:610482606835892224>"
 gemme2effectxp = 1 + ((0.05*ugemme2)* artefact10effect)
 gemme2effectpo = 1 + ((0.05* ugemme2) * artefact10effect)
 gemme3effectatk = 1 + ((0.078*ugemme3) * artefact10effect)
 gemme3effectdef = 1 + ((0.065*ugemme3) * artefact10effect)
 gemme3name = "Gemme Grise"
 gemme3emote = "<:GemmeGrise:610483035925643275>"
 gemme4effect = 1 + ((0.25 * ugemme4 / 100) * artefact10effect)
 gemme4name = "Gemme Rose"
 gemme4emote = "<:GemmeRose:610482700322865153>"
 gemme5name = "Gemme Orange"
 gemme5emote = "<:GemmeOrange:610482836717174784>"
 gemme5effectpn = 1 + ((0.007 * ugemme5) * artefact10effect)
 gemme5effectgw = 1 + ((0.007 *ugemme5) * artefact10effect)

 };
 
  if(uclassen === 3){
 gemme1name = "Gemme Bleue"
 gemme1emote = "<:GemmeBleue2:610483279875014720>"
 gemme1effect = (120000 * artefact10effect) * ugemme1
 gemme2name = "Gemme Rouge"
 gemme2emote = "<:GemmeRouge:610482606835892224>"
 gemme2effectpo = 1 + ((0.08* ugemme2) * artefact10effect)
 gemme3effectatk = 1 + ((0.05*ugemme3) * artefact10effect)
 gemme3effectdef = 1 + ((0.05*ugemme3) * artefact10effect)
 gemme3effectpv = 1 + ((0.05*ugemme3) * artefact10effect)
 gemme3name = "Gemme Verte"
 gemme3emote = "<:GemmeVerte:610482211132801037>"
 gemme4effect = 1 + ((0.25 * ugemme4 / 100) * artefact10effect)
 gemme4name = "Gemme Orange"
 gemme4emote = "<:GemmeOrange:610482836717174784>"
 gemme5name = "Gemme Grise"
 gemme5emote = "<:GemmeGrise:610483035925643275>"
 gemme5effectwood = 1 + ((0.04 * ugemme5) * artefact10effect)
 gemme5effectgw = 1 + ((0.005 * ugemme5) * artefact10effect)
 gemme5effectrx = 1 + ((0.06 * ugemme5) * artefact10effect) 
 gemme5effectpx = 1 + ((0.025 * ugemme5) * artefact10effect)


 };
 
 if(uclassen === 4){
 gemme1name = "Gemme Bleue"
 gemme1emote = "<:GemmeBleue1:610483134936514570>"
 gemme1effect = (120000 * artefact10effect) * ugemme1
 
 gemme2name = "Gemme Marron"
 gemme2emote = "<:GemmeMarron:610482946322858004>"
 gemme2effectpo = 1 + ((0.035*ugemme2) * artefact10effect)
 gemme3effectpv = 1 + ((0.04*ugemme3) * artefact10effect)
 gemme3effectdef = 1 + ((0.055*ugemme3) * artefact10effect)
 gemme3name = "Gemme Verte"
 gemme3emote = "<:GemmeVerte:610482211132801037>"
 gemme4effect = 1 + ((0.25 * ugemme4 / 100) * artefact10effect)
 gemme4name = "Gemme Blanche"
 gemme4emote = "<:GemmeBlanche:610483403304861723>"
 gemme5name = "Gemme Grise"
 gemme5emote = "<:GemmeGrise:610483035925643275>"
 gemme5effectrx = 1 + ((0.015 * ugemme5) * artefact10effect)
 gemme5effectmining = 1 + ((0.025 * ugemme5) * artefact10effect)
 gemme5effectwood = 1 + ((0.025 * ugemme5) * artefact10effect)


 };
 
 if(uclassen === 5){
 gemme1name = "Gemme Bleue"
 gemme1emote = "<:GemmeBleue1:610483134936514570>"
 gemme1effect = (60000 * artefact10effect) * ugemme1
 
 gemme2name = "Gemme Marron"
 gemme2emote = "<:GemmeMarron:610482946322858004>"
 gemme2effect = 1 + ((0.05*ugemme2)* artefact10effect)
 gemme2effectpo = 1 + ((0.05*ugemme2) * artefact10effect)
 gemme3effectpv = 1 + ((0.05*ugemme3) * artefact10effect)
 gemme3name = "Gemme Verte"
 gemme3emote = "<:GemmeVerte:610482211132801037>"
 gemme4effect = 1 + ((0.035 * ugemme4) * artefact10effect)
 gemme4name = "Gemme Blanche"
 gemme4emote = "<:GemmeBlanche:610483403304861723>"
 gemme5name = "Gemme Rose"
 gemme5emote = "<:GemmeRose:610482700322865153>"
 gemme5effectrx = 1 + ((0.05 * ugemme5) * artefact10effect)
 gemme5effectmining = 1 + ((0.05*ugemme5) * artefact10effect)
 gemme5effectwood = 1 + ((0.05*ugemme5) * artefact10effect)


 };

 




let donjon2messageunlock = ""
let donjon3messageunlock = ""
let donjon4messageunlock = ""
let donjon5messageunlock = ""

if(uresetower === 1){
   donjon2messageunlock = "\n🗺️ Vous avez trouvé une carte, elle contient un donjon supplémentaire! Faites ``!donjon`` pour la consulter"
}
if(uresetower2 === 1){
  donjon3messageunlock = "\n🗺️ Vous avez trouvé une carte, elle contient un donjon supplémentaire! Faites ``!donjon`` pour la consulter."
}
if(uresetower3 === 2){
  donjon4messageunlock = "\n🗺️ Vous avez trouvé une carte, elle contient un donjon supplémentaire! Faites ``!donjon`` pour la consulter."
}
if(uresetower4 === 4){
  donjon5messageunlock = "\n🗺️ Vous avez trouvé une carte, elle contient un donjon supplémentaire! Faites ``!donjon`` pour la consulter."
}

let commonpower = 1
if(upet1 + upet2 + upet3 + upet4 + upet5 + upet6 + upet7 + upet8 === 8){
 commonpower = 1.3
}
let rarepower = 1
let rarepower2 = 1
if(upet9 + upet10 + upet11 + upet12 + upet13 + upet14 + upet15 + upet41 === 8){
 rarepower = 1.4
 rarepower2 = 1.25
}
let epicpower = 1
let epicpower2 = 1
let epicpower3 = 1
if(upet16 + upet17 + upet18 + upet19 + upet20 + upet21 + upet22 + upet23 + upet24 + upet42 === 10){
 epicpower = 1.5
 epicpower2 = 1.35
 epicpower3 = 1.25
}
let legendpower = 1
let legendpower2 = 1
let legendpower3 = 1

if(upet25 + upet26 + upet27 + upet28 + upet29 + upet30 + upet31 + upet32 + upet33 + upet34 === 10){
  legendpower = 1.7
  legendpower2 = 1.55
  legendpower3 = 1.35
 }
let godpower = 1
let godpower2 = 1


if(upet35 + upet36 + upet37 + upet38 + upet39 + upet40 === 6){
  godpower = 2
  godpower2 = 1.75
 }


//BOUSTED 
//COMMON


let booststatcommon1 = 1
let boostpassifcommon1 = 1
if(uskin1 === 1) {
  booststatcommon1 = 1.25
  boostpassifcommon1 = 1.15
}
if(uskin1 === 2) {
  booststatcommon1 = 1.5
  boostpassifcommon1 = 1.3
}
if(uskin1 === 3) {
  booststatcommon1 = 2
  boostpassifcommon1 = 1.6
}
let booststatcommon2 = 1
let boostpassifcommon2 = 1
if(uskin2 === 1) {
  booststatcommon2 = 1.25
  boostpassifcommon2 = 1.15
}
if(uskin2 === 2) {
  booststatcommon2 = 1.5
  boostpassifcommon2 = 1.3
}
if(uskin2 === 3) {
  booststatcommon2 = 2
  boostpassifcommon2 = 1.6
}





if(upetselect === 1) {
   pet1effect1 = (1.01 + (0.01 * nivactuelclasse)) * commonpower*boostpassifcommon1
}
if(upetselect === 2) {
  pet2effect1 = (1.01 + (0.01 * nivactuelclasse)) * commonpower*boostpassifcommon2
}
let booststatcommon3 = 1
let boostpassifcommon3 = 1
if(uskin3 === 1) {
  booststatcommon3 = 1.25
  boostpassifcommon3 = 1.15
}
if(uskin3 === 2) {
  booststatcommon3 = 1.5
  boostpassifcommon3 = 1.3
}
if(uskin3 === 3) {
  booststatcommon3 = 2
  boostpassifcommon3 = 1.6
}


let booststatcommon4 = 1
let boostpassifcommon4 = 1
if(uskin4 === 1) {
  booststatcommon4 = 1.25
  boostpassifcommon4 = 1.15
}
if(uskin4 === 2) {
  booststatcommon4 = 1.5
  boostpassifcommon4 = 1.3
}
if(uskin4 === 3) {
  booststatcommon4 = 2
  boostpassifcommon4 = 1.6
}



let booststatcommon5 = 1
let boostpassifcommon5 = 1
if(uskin5 === 1) {
  booststatcommon5 = 1.25
  boostpassifcommon5 = 1.15
}
if(uskin5 === 2) {
  booststatcommon5 = 1.5
  boostpassifcommon5 = 1.3
}
if(uskin5 === 3) {
  booststatcommon5 = 2
  boostpassifcommon5 = 1.6
}


let booststatcommon6 = 1
let boostpassifcommon6 = 1
if(uskin6 === 1) {
  booststatcommon6 = 1.25
  boostpassifcommon6 = 1.15
}
if(uskin6 === 2) {
  booststatcommon6 = 1.5
  boostpassifcommon6 = 1.3
}
if(uskin6 === 3) {
  booststatcommon6 = 2
  boostpassifcommon6 = 1.6
}



let booststatcommon7 = 1
let boostpassifcommon7 = 1
if(uskin7 === 1) {
  booststatcommon7 = 1.25
  boostpassifcommon7 = 1.15
}
if(uskin7 === 2) {
  booststatcommon7 = 1.5
  boostpassifcommon7 = 1.3
}
if(uskin7 === 3) {
  booststatcommon7 = 2
  boostpassifcommon7 = 1.6
}



let booststatcommon8 = 1
let boostpassifcommon8 = 1
if(uskin8 === 1) {
  booststatcommon8 = 1.25
  boostpassifcommon8 = 1.15
}
if(uskin8 === 2) {
  booststatcommon8 = 1.5
  boostpassifcommon8 = 1.3
}
if(uskin8 === 3) {
  booststatcommon8 = 2
  boostpassifcommon8 = 1.6
}


if(upetselect === 3) {
  pet3effect1 = (1.01 + (0.01 * nivactuelclasse)) * commonpower * boostpassifcommon3
}
if(upetselect === 4) {
  pet4effect1 = (1.01 + (0.01 * nivactuelclasse)) * commonpower *boostpassifcommon4
}
if(upetselect === 5) {
  pet5effect1 = (1.01 + (0.01 * nivactuelclasse)) * commonpower *boostpassifcommon5
}
if(upetselect === 6) {
  pet6effect1 = (1.01 + (0.01 * nivactuelclasse)) * commonpower *boostpassifcommon6
}
if(upetselect === 7) {
  pet7effect1 = (1.01 + (0.01 * nivactuelclasse)) * commonpower *boostpassifcommon7
}
if(upetselect === 8) {
  pet8effect1 = (1.01 + (0.01 * nivactuelclasse)) * commonpower *boostpassifcommon8
}

let booststatrare9 = 1
let boostpassifrare9 = 1
if(uskin9 === 1) {
  booststatrare9 = 1.35
  boostpassifrare9 = 1.25
}
if(uskin9 === 2) {
  booststatrare9 = 1.7
  boostpassifrare9 = 1.5
}
if(uskin9 === 3) {
  booststatrare9 = 2.4
  boostpassifrare9 = 2
}

let booststatrare10 = 1
let boostpassifrare10 = 1
if(uskin10 === 1) {
  booststatrare10 = 1.35
  boostpassifrare10 = 1.25
}
if(uskin10 === 2) {
  booststatrare10 = 1.7
  boostpassifrare10 = 1.5
}
if(uskin10 === 3) {
  booststatrare10 = 2.4
  boostpassifrare10 = 2
}

let booststatrare11 = 1
let boostpassifrare11 = 1
if(uskin11 === 1) {
  booststatrare11 = 1.35
  boostpassifrare11 = 1.25
}
if(uskin11 === 2) {
  booststatrare11 = 1.7
  boostpassifrare11 = 1.5
}
if(uskin11 === 3) {
  booststatrare11 = 2.4
  boostpassifrare11 = 2
}

let booststatrare12 = 1
let boostpassifrare12 = 1
if(uskin12 === 1) {
  booststatrare12 = 1.35
  boostpassifrare12 = 1.25
}
if(uskin12 === 2) {
  booststatrare12 = 1.7
  boostpassifrare12 = 1.5
}
if(uskin12 === 3) {
  booststatrare12 = 2.4
  boostpassifrare12 = 2
}

let booststatrare13 = 1
let boostpassifrare13 = 1
if(uskin13 === 1) {
  booststatrare13 = 1.35
  boostpassifrare13 = 1.25
}
if(uskin13 === 2) {
  booststatrare13 = 1.7
  boostpassifrare13 = 1.5
}
if(uskin13 === 3) {
  booststatrare13 = 2.4
  boostpassifrare13 = 2
}
let booststatrare14 = 1
let boostpassifrare14 = 1
if(uskin14 === 1) {
  booststatrare14 = 1.35
  boostpassifrare14 = 1.25
}
if(uskin14 === 2) {
  booststatrare14 = 1.7
  boostpassifrare14 = 1.5
}
if(uskin14 === 3) {
  booststatrare14 = 2.4
  boostpassifrare14 = 2
}
let booststatrare15 = 1
let boostpassifrare15 = 1
if(uskin15 === 1) {
  booststatrare15 = 1.35
  boostpassifrare15 = 1.25
}
if(uskin15 === 2) {
  booststatrare15 = 1.7
  boostpassifrare15 = 1.5
}
if(uskin15 === 3) {
  booststatrare15 = 2.4
  boostpassifrare15 = 2
}
let booststatrare41 = 1
let boostpassifrare41 = 1
if(uskin41 === 1) {
  booststatrare41 = 1.35
  boostpassifrare41 = 1.25
}
if(uskin41 === 2) {
  booststatrare41 = 1.7
  boostpassifrare41 = 1.5
}
if(uskin41 === 3) {
  booststatrare41 = 2.4
  boostpassifrare41 = 2
}

if(upetselect === 9) {
  pet9effect1 = (1.02 + (0.010 * nivactuelclasse)) * rarepower *boostpassifrare9
}
if(upetselect === 10) {
  pet10effect1 = (1.015 + (0.010 * nivactuelclasse)) * rarepower*boostpassifrare10
}
if(upetselect === 11) {
  pet11effect1 = (1.015 + (0.010 * nivactuelclasse)) * rarepower2*boostpassifrare11
}
if(upetselect === 12) {
  pet12effect1 = (1.015 + (0.010 * nivactuelclasse)) * rarepower*boostpassifrare12
}
if(upetselect === 13) {
  pet13effect1 = (1.005 + (0.010 * nivactuelclasse) *rarepower)*boostpassifrare13
}
if(upetselect === 14) {
  pet14effect1 = (1.015 + (0.010 * nivactuelclasse) *rarepower)*boostpassifrare14
  pet14effect2 = (1.01 + (0.006 * nivactuelclasse)* rarepower2)*boostpassifrare14
}
if(upetselect === 15) {
  pet15effect1 = (1.02 + (0.010 * nivactuelclasse) *rarepower)*boostpassifrare15
}
if(upetselect === 41) {
  pet41effect1 = (1.02 + (0.010 * nivactuelclasse) *rarepower)*boostpassifrare41
}
let booststatepic16 = 1
let boostpassifepic16 = 1
if(uskin16 === 1) {
  booststatepic16 = 1.5
  boostpassifepic16 = 1.35
}
if(uskin16 === 2) {
  booststatepic16 = 2
  boostpassifepic16 = 1.7
}
if(uskin16 === 3) {
  booststatepic16 = 3
  boostpassifepic16 = 2.4
}

let booststatepic17 = 1
let boostpassifepic17 = 1
if(uskin17 === 1) {
  booststatepic17 = 1.5
  boostpassifepic17 = 1.35
}
if(uskin17 === 2) {
  booststatepic17 = 2
  boostpassifepic17 = 1.7
}
if(uskin17 === 3) {
  booststatepic17 = 3
  boostpassifepic17 = 2.4
}
let booststatepic18 = 1
let boostpassifepic18 = 1
if(uskin18 === 1) {
  booststatepic18 = 1.5
  boostpassifepic18 = 1.35
}
if(uskin18 === 2) {
  booststatepic18 = 2
  boostpassifepic18 = 1.7
}
if(uskin18 === 3) {
  booststatepic18 = 3
  boostpassifepic18 = 2.4
}

let booststatepic19 = 1
if(uskin19 === 1) {
  booststatepic19 = 1.95
}
if(uskin19 === 2) {
  booststatepic19 = 2.6
}
if(uskin19 === 3) {
  booststatepic19 = 3.8
}

let booststatepic20 = 1
let boostpassifepic20 = 1
if(uskin20 === 1) {
  booststatepic20 = 1.5
  boostpassifepic20 = 1.35
}
if(uskin20 === 2) {
  booststatepic20 = 2
  boostpassifepic20 = 1.7
}
if(uskin20 === 3) {
  booststatepic20 = 3
  boostpassifepic20 = 2.4
}
let booststatepic21 = 1
let boostpassifepic21 = 1
if(uskin21 === 1) {
  booststatepic21 = 1.5
  boostpassifepic21 = 1.35
}
if(uskin21 === 2) {
  booststatepic21 = 2
  boostpassifepic21 = 1.7
}
if(uskin21 === 3) {
  booststatepic21 = 3
  boostpassifepic21 = 2.4
}
let booststatepic22 = 1
let boostpassifepic22 = 1
if(uskin22 === 1) {
  booststatepic22 = 1.5
  boostpassifepic22 = 1.35
}
if(uskin22 === 2) {
  booststatepic22 = 2
  boostpassifepic22 = 1.7
}
if(uskin22 === 3) {
  booststatepic22= 3
  boostpassifepic22 = 2.4
}
let booststatepic23 = 1
let boostpassifepic23 = 1
if(uskin23 === 1) {
  booststatepic23 = 1.5
  boostpassifepic23 = 1.35
}
if(uskin23 === 2) {
  booststatepic23 = 2
  boostpassifepic23 = 1.7
}
if(uskin23 === 3) {
  booststatepic23 = 3
  boostpassifepic23 = 2.4
}
let booststatepic24 = 1
let boostpassifepic24 = 1
if(uskin24 === 1) {
  booststatepic24 = 1.5
  boostpassifepic24 = 1.35
}
if(uskin24 === 2) {
  booststatepic24 = 2
  boostpassifepic24 = 1.7
}
if(uskin24 === 3) {
  booststatepic24 = 3
  boostpassifepic24 = 2.4
}
let booststatepic42 = 1
let boostpassifepic42 = 1
if(uskin42 === 1) {
  booststatepic42 = 1.5
  boostpassifepic42 = 1.35
}
if(uskin42 === 2) {
  booststatepic42 = 2
  boostpassifepic42 = 1.7
}
if(uskin42 === 3) {
  booststatepic42 = 3
  boostpassifepic42 = 2.4
}
if(upetselect === 16) {
  pet16effect1 = (1.02 + (0.015 * nivactuelclasse) *epicpower) *boostpassifepic16
}

if(upetselect === 42) {
  pet42effect1 = (1.02 + (0.015 * nivactuelclasse) *epicpower) *boostpassifepic42
}
if(upetselect === 17) {
  pet17effect1 = (1.03 + (0.015 * nivactuelclasse) *epicpower) *boostpassifepic17
}
if(upetselect === 18) {
  pet18effect1 = (1.015 + (0.01 * nivactuelclasse) *epicpower) *boostpassifepic18
  pet18effect2 = (1.01 + (0.010 * nivactuelclasse) *epicpower2) *boostpassifepic18
  pet18effect3 = (1.01 + (0.005 * nivactuelclasse) *epicpower3) *boostpassifepic18
}

if(upetselect === 20) {
  pet20effect1 = (1.01 + (0.01 * nivactuelclasse) *epicpower) *boostpassifepic20
}
if(upetselect === 21) {
  pet21effect1 = (1.02 + (0.01 * nivactuelclasse) *epicpower) *boostpassifepic21
  pet21effect2 = (1.01 + (0.010 * nivactuelclasse) *epicpower2) *boostpassifepic21
}
if(upetselect === 22) {
  pet22effect1 = (1.02 + (0.01 * nivactuelclasse) *epicpower) *boostpassifepic22
  pet22effect2 = (1.01 + (0.010 * nivactuelclasse) *epicpower2) *boostpassifepic22
}
if(upetselect === 23) {
  pet23effect1 = (1.02 + (0.01 * nivactuelclasse) *epicpower) *boostpassifepic23
}
if(upetselect === 24) {
  pet24effect1 = (1.01 + (0.01 * nivactuelclasse) *epicpower) *boostpassifepic24
}
let booststatlegend25 = 1

if(uskin25 === 1) {
  booststatlegend25 = 2.25
}
if(uskin25 === 2) {
  booststatlegend25 = 3.2
}
if(uskin25 === 3) {
  booststatlegend25 = 5
}

let booststatlegend26 = 1
let boostpassiflegend26 = 1
if(uskin26 === 1) {
  booststatlegend26 = 1.85
  boostpassiflegend26 = 1.3
}
if(uskin26 === 2) {
  booststatlegend26 = 2.75
  boostpassiflegend26 = 1.8
}
if(uskin26 === 3) {
  booststatlegend26 = 3.5
  boostpassiflegend26 = 2.5
}
let booststatlegend27 = 1
let boostpassiflegend27 = 1
if(uskin27 === 1) {
  booststatlegend27 = 1.75
  boostpassiflegend27 = 1.5
}
if(uskin27 === 2) {
  booststatlegend27 = 2.5
  boostpassiflegend27 = 2
}
if(uskin27 === 3) {
  booststatlegend27 = 3.2
  boostpassiflegend27 = 3
}

let booststatlegend28 = 1
let boostpassiflegend28 = 1
if(uskin28 === 1) {
  booststatlegend28 = 1.75
  boostpassiflegend28 = 1.5
}
if(uskin28 === 2) {
  booststatlegend28 = 2.5
  boostpassiflegend28 = 2
}
if(uskin28 === 3) {
  booststatlegend28 = 3.2
  boostpassiflegend28 = 3
}
let booststatlegend29 = 1
let boostpassiflegend29 = 1
if(uskin29 === 1) {
  booststatlegend29 = 1.75
  boostpassiflegend29 = 1.5
}
if(uskin29 === 2) {
  booststatlegend29 = 2.5
  boostpassiflegend29 = 2
}
if(uskin29 === 3) {
  booststatlegend29 = 3.2
  boostpassiflegend29 = 3
}
let booststatlegend30 = 1
let boostpassiflegend30 = 1
if(uskin30 === 1) {
  booststatlegend30 = 1.75
  boostpassiflegend30 = 1.5
}
if(uskin30 === 2) {
  booststatlegend30 = 2.5
  boostpassiflegend30 = 2
}
if(uskin30 === 3) {
  booststatlegend30 = 3.2
  boostpassiflegend30 = 3
}
let booststatlegend31 = 1
let boostpassiflegend31 = 1
if(uskin31 === 1) {
  booststatlegend31 = 1.75
  boostpassiflegend31 = 1.5
}
if(uskin31 === 2) {
  booststatlegend31 = 2.5
  boostpassiflegend31 = 2
}
if(uskin31 === 3) {
  booststatlegend31 = 3.2
  boostpassiflegend31 = 3
}
let booststatlegend32 = 1
let boostpassiflegend32 = 1
if(uskin32 === 1) {
  booststatlegend32 = 1.90
  boostpassiflegend32 = 1.3
}
if(uskin32 === 2) {
  booststatlegend32 = 2.7
  boostpassiflegend32 = 1.8
}
if(uskin32 === 3) {
  booststatlegend32 = 3.2
  boostpassiflegend32 = 2.6
}
let booststatlegend33 = 1
let boostpassiflegend33 = 1
if(uskin33 === 1) {
  booststatlegend33 = 1.75
  boostpassiflegend33 = 1.5
}
if(uskin33 === 2) {
  booststatlegend33 = 2.5
  boostpassiflegend33 = 2
}
if(uskin33 === 3) {
  booststatlegend33 = 3
  boostpassiflegend33 = 3
}
let booststatlegend34 = 1
let boostpassiflegend34 = 1
if(uskin34 === 1) {
  booststatlegend34 = 1.75
  boostpassiflegend34 = 1.5
}
if(uskin34 === 2) {
  booststatlegend34 = 2
  boostpassiflegend34 = 2
}
if(uskin34 === 3) {
  booststatlegend34 = 2.5
  boostpassiflegend34 = 3
}
if(upetselect === 26) {
  pet26effect1 = (0.99 - (0.0045 *nivactuelclasse * legendpower3 *boostpassiflegend26))
}
if(upetselect === 27) {
  pet27effect1 = (1.03 + (0.0125 * nivactuelclasse) *legendpower *boostpassiflegend27)
}
if(upetselect === 28) {
  pet28effect1 = (1.01 + (0.0125 * nivactuelclasse) *legendpower*boostpassiflegend28)
  pet28effect2 = (1.02 + (0.01 * nivactuelclasse) *legendpower2*boostpassiflegend28)
}
if(upetselect === 29) {
  pet29effect1 = (1.01 + (0.0125 * nivactuelclasse) *legendpower*boostpassiflegend29)
  pet29effect2 = (1.02 + (0.01 * nivactuelclasse) *legendpower2*boostpassiflegend29)
}
if(upetselect === 30) {
  pet30effect1 = (1.01 + (0.0125 * nivactuelclasse) *legendpower*boostpassiflegend30)
  pet30effect2 = (1.01 + (0.01 * nivactuelclasse) *legendpower2*boostpassiflegend30)
}
if(upetselect === 31) {
  pet31effect1 = (1.03 + (0.0125 * nivactuelclasse) *legendpower*boostpassiflegend31)
}
if(upetselect === 32) {
  pet32effect1 = (0.995 - (0.0025 *nivactuelclasse * legendpower2*boostpassiflegend32))
  pet32effect2 = (1.01 + (0.01 * nivactuelclasse) *legendpower3*boostpassiflegend32)
}
if(upetselect === 33) {
  pet33effect1 = (1.03 + (0.0125 * nivactuelclasse) *legendpower*boostpassiflegend33)
  pet33effect2 = (1.01 + (0.01 * nivactuelclasse) *legendpower2*boostpassiflegend33)
}
if(upetselect === 34) {
  pet34effect1 = (1.04 + (0.0125 * nivactuelclasse) *legendpower*boostpassiflegend34)
}
let booststatgod35 = 1
let boostpassifgod35 = 1
if(uskin35 === 1) {
  booststatgod35 = 1.5
  boostpassifgod35 = 2
}
if(uskin35 === 2) {
  booststatgod35 = 2.5
  boostpassifgod35 = 3
}
if(uskin35 === 3) {
  booststatgod35 = 4
  boostpassifgod35 = 5
}
let booststatgod36 = 1
let boostpassifgod36 = 1
if(uskin36 === 1) {
  booststatgod36 = 1.5
  boostpassifgod36 = 2
}
if(uskin36 === 2) {
  booststatgod36 = 2
  boostpassifgod36 = 3
}
if(uskin36 === 3) {
  booststatgod36 = 3
  boostpassifgod36 = 5
}
let booststatgod37 = 1
let boostpassifgod37 = 1
if(uskin37 === 1) {
  booststatgod37 = 2
  boostpassifgod37 = 2
}
if(uskin37 === 2) {
  booststatgod37 = 3
  boostpassifgod37 = 3
}
if(uskin37 === 3) {
  booststatgod37 = 4
  boostpassifgod37 = 5
}


let booststatgod38 = 1
let boostpassifgod38 = 1
let boostpassifgod382 = 1
if(uskin38 === 1) {
  booststatgod38 = 1.5
  boostpassifgod38 = 2
  boostpassifgod382 = 1.1
}
if(uskin38 === 2) {
  booststatgod38 = 2
  boostpassifgod38 = 3
  boostpassifgod382= 1.2
}
if(uskin38 === 3) {
  booststatgod38 = 4
  boostpassifgod38 = 5
  boostpassifgod382 = 1.37
}
let booststatgod39 = 1
let boostpassifgod39 = 1
if(uskin39 === 1) {
  booststatgod39 = 1.5
  boostpassifgod39 = 2
}
if(uskin39 === 2) {
  booststatgod39 = 2
  boostpassifgod39 = 3
}
if(uskin39 === 3) {
  booststatgod39 = 3
  boostpassifgod39 = 5
}
let booststatgod40 = 1

if(uskin40 === 1) {
  booststatgod40 = 1.5

}
if(uskin40 === 2) {
  booststatgod40 = 2.5

}
if(uskin40 === 3) {
  booststatgod40 = 3.5
}
if(upetselect === 35) {
  pet35effect1 = (1.06 + (0.02 * nivactuelclasse) *godpower*boostpassifgod35)
}
if(upetselect === 36) {
  pet36effect1 = (1.02 + (0.02 * nivactuelclasse) *godpower *boostpassifgod36)
  pet36effect2 = (1.03 + (0.016 * nivactuelclasse) *godpower2*boostpassifgod36)
}
if(upetselect === 37) {
  pet37effect1 = (1.1 + (0.02 * nivactuelclasse) *godpower*boostpassifgod37)
  pet37effect2 = (1.02 + (0.016 * nivactuelclasse) *godpower2*boostpassifgod37)
}
if(upetselect === 38) {
  pet38effect1 = ((1.02 + (0.02 * nivactuelclasse) *godpower*boostpassifgod38)  )
  pet38effect2 = 0.99 - (0.006 *nivactuelclasse * godpower2*boostpassifgod38)
}
if(upetselect === 39) {
  pet39effect1 = ((1.03 + (0.02 * nivactuelclasse) *godpower))
  pet39effect2 = ((1.05 + (0.016 * nivactuelclasse) *godpower2))
}





if(message.content === "!remove arme" || message.content === "!arme remove") {
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect === 0 ) return message.reply("Tu n'as aucune arme d'équipé.")
  if(uclassen > 0, uarmeselect > 0) {
 

  armeselect[message.author.id] = {
    armeselect: 0
  };
  
 
              fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
                if (err) console.log(err)
                });
                message.channel.send(`${message.author.username}, ton arme à bien été retirée!`)
   
};
};
if(message.content === "!arme select 1") {
  if(uitem1 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem1 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 1
    };


          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });
    
                  message.channel.send("Tu as bien équipé l'arme Baton [ID:1]")
  };
};
if(message.content === "!arme select 2") {
  if(uitem2 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem2 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 2
    };


          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });

                  message.channel.send("Tu as bien équipé l'arme Couteau de Cuisine [ID:2]")
  };
};
if(message.content === "!arme select 3") {
  if(uitem3 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem3 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 3
    };


          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });

                  message.channel.send("Tu as bien équipé l'arme Couteau en plastique [ID:3]")
  };
};
if(message.content === "!arme select 4") {
  if(uitem4 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem4 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 4
    };


          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });
  
                  message.channel.send("Tu as bien équipé l'arme Epée en Bois [ID:4]")
  };
};
if(message.content === "!arme select 5") {
  if(uitem5 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem5 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 5
    };

          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });
 
                  message.channel.send("Tu as bien équipé l'arme Gants de Boxe [ID:5]")
  };
};
if(message.content === "!arme select 6") {
  if(uitem6 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem6 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 6
    };

          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });

                  message.channel.send("Tu as bien équipé l'arme Pistolet [ID:6]")
  };
};
if(message.content === "!arme select 7") {
  if(uitem7 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem7 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 7
    };
 
          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });
 
                  message.channel.send("Tu as bien équipé l'arme Cuter [ID:7]")
  };
};
if(message.content === "!arme select 8") {
  if(uitem8 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem8 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 8
    };

          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });

                  message.channel.send("Tu as bien équipé l'arme Briquet [ID:8]")
  };
};
if(message.content === "!arme select 9") {
  if(uitem9 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem9 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 9
    };
    
          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });

                  message.channel.send("Tu as bien équipé l'arme Lance-Flamme **eco+** [ID:9]")
  };
};
if(message.content === "!arme select 10") {
  if(uitem10 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem10 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 10
    };

          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });

                  message.channel.send("Tu as bien équipé l'arme Serviette [ID:10]")
  };

};
if(message.content === "!arme select 11") {
  if(uitem11 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem11 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 11
    };
 

          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });

                  message.channel.send("Tu as bien équipé l'arme Grenade [ID:11]")
  };

};
if(message.content === "!arme select 12") {
  if(uitem12 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem12 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 12
    };

          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });
     
                  message.channel.send("Tu as bien équipé l'arme Epée en Bronze [ID:12]")
  };

};
if(message.content === "!arme select 13") {
  if(uitem13 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem13 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 13
    };

          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });

                  message.channel.send("Tu as bien équipé l'arme Epée en Or [ID:13]")
  };

};
if(message.content === "!arme select 14") {
  if(uitem14 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem14 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 14
    };
 

          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });
   
                  message.channel.send("Tu as bien équipé l'arme Couteau de Chasse [ID:14]")
  };

};
if(message.content === "!arme select 15") {
  if(uitem15 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem15 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 15
    };

          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });
   
                  message.channel.send("Tu as bien équipé l'arme Lance-Pierre [ID:15]")
  };

};
if(message.content === "!arme select 16") {
  if(uitem16 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem16 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 16
    };


          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });
   
                  message.channel.send("Tu as bien équipé l'arme Tronçonneuse [ID:16]")
  };

};
if(message.content === "!arme select 17") {
  if(uitem17 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem17 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 17
    };

          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });

                  message.channel.send("Tu as bien équipé l'arme Fusil de chasse [ID:17]")
  };

};
if(message.content === "!arme select 18") {
  if(uitem18 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem18 > 0 && uarmeselect === 0 && uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 18
    };
 
          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });
     
                  message.channel.send("Tu as bien équipé l'arme Lance-Flamme [ID:18]")
  };

};
if(message.content === "!arme select 19") {
  if(uitem19 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem19 > 0 && uarmeselect === 0 && uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 19
    };

          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });
 
                  message.channel.send("Tu as bien équipé l'arme Hache de combat en plastique [ID:19]")
  };

};
if(message.content === "!arme select 20") {
  if(uitem20 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem20 > 0 && uarmeselect === 0 && uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 20
    };

          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });
  
                  message.channel.send("Tu as bien équipé l'arme Epée Argentée [ID:20]")
  };

};
if(message.content === "!arme select 21") {
  if(uitem21 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem21 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 21
    };


          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });

                  message.channel.send("Tu as bien équipé l'arme Carapuce à O [ID:21]")
  };

};
if(message.content === "!arme select 22") {
  if(uitem22 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem22 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 22
    };
    fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
      if (err) console.log(err)
      });
                  message.channel.send("Tu as bien équipé l'arme Poppy [ID:22]")
  };

};
if(message.content === "!arme select 23") {
  if(uitem23 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem23 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 23
    };

          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });
  
                  message.channel.send("Tu as bien équipé l'arme Scissor Blade Rouge [ID:23]")
  };

};
if(message.content === "!arme select 24") {
  if(uitem24 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem24 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 24
    };
 
          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });
      
                  message.channel.send("Tu as bien équipé l'arme Scissor Blade Violet [ID:24]")
  };

};
if(message.content === "!arme select 25") {
  if(uitem25 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem25 > 0, uarmeselect === 0, uclassen > 0) {
 
    armeselect[message.author.id] = {
      armeselect: 25
    };
 

          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });
      
                  message.channel.send("Tu as bien équipé l'arme Scissors Blades [ID:25]")
  };

};
if(message.content === "!arme select 26") {
  if(uitem26 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem26 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 26
    };
 

          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });

                  message.channel.send("Tu as bien équipé l'arme Murasame [ID:26]")
  };

};
if(message.content === "!arme select 27") {
  if(uitem27 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem27 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 27
    };

          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });

                  message.channel.send("Tu as bien équipé l'arme Elucidator [ID:27]")
  };

};
if(message.content === "!arme select 28") {
  if(uitem28 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem28 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 28
    };

          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });

                  message.channel.send("Tu as bien équipé l'arme Bouclier de Captain [ID:28]")
  };

};
if(message.content === "!arme select 29") {
  if(uitem29 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem29 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 29
    };
  
          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });

                  message.channel.send("Tu as bien équipé l'arme Lostvayne [ID:29]")
  };

};
if(message.content === "!arme select 30") {
  if(uitem30 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem30 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 30
    };

          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });

                  message.channel.send("Tu as bien équipé l'arme Excalibur dorée [ID:30]")
  };

};
if(message.content === "!arme select 31") {
  if(uitem31 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem31 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 31
    };

          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });

                  message.channel.send("Tu as bien équipé l'arme Couteau d'Izaya [ID:31]")
  };

};
if(message.content === "!arme select 32") {
  if(uitem32 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem32 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 32
    };

          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });

                  message.channel.send("Tu as bien équipé l'arme Faux d'Ombre [ID:32]")
  };

};
if(message.content === "!arme select 33") {
  if(uitem33 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem33 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 33
    };

          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });

                  message.channel.send("Tu as bien équipé l'arme Schofield Model 3 [ID:33]")
  };

};
if(message.content === "!arme select 34") {
  if(uitem34 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem34 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 34
    };

          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });

                  message.channel.send("Tu as bien équipé l'arme Rhitta [ID:34]")
  };

};
if(message.content === "!arme select 35") {
  if(uitem35 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem35 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 35
    };

          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });

                  message.channel.send("Tu as bien équipé l'arme Dark Repulser [ID:35]")
  };

};
if(message.content === "!arme select 36") {
  if(uitem36 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem36 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 36
    };

          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });

                  message.channel.send("Tu as bien équipé l'arme Lambent Light [ID:36]")
  };

};
if(message.content === "!arme select 37") {
  if(uitem37 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem37 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 37
    };

          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });

                  message.channel.send("Tu as bien équipé l'arme Chastiefol: Lance [ID:37]")
  };

};
if(message.content === "!arme select 38") {
  if(uitem38 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem38 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 38
    };

          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });

                  message.channel.send("Tu as bien équipé l'arme Equipement Tridimensionnel [ID:38]")
  };

};
if(message.content === "!arme select 39") {
  if(uitem39 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem39 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 39
    };

          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });

                  message.channel.send("Tu as bien équipé l'arme Sharingan [ID:39]")
  };

};
if(message.content === "!arme select 40") {
  if(uitem40 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem40 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 40
    };

          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });

                  message.channel.send("Tu as bien équipé l'arme Trident [ID:40]")
  };

};
if(message.content === "!arme select 41") {
  if(uitem41 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem41 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 41
    };


          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });

                  message.channel.send("Tu as bien équipé l'arme Saika [ID:41]")
  };

};
if(message.content === "!arme select 42") {
  if(uitem42 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem42 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 42
    };

          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });

                  message.channel.send("Tu as bien équipé l'arme Pistolet laser [ID:42]")
  };

};
if(message.content === "!arme select 43") {
  if(uitem43 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem43 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 43
    };

          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });
                  message.channel.send("Tu as bien équipé l'arme Baguette de sureau [ID:43]")
  };

};
if(message.content === "!arme select 44") {
  if(uitem44 === 0) return message.reply("Tu ne possèdes pas cette arme.");
  if(uclassen === 0) return message.reply("Tu n'as aucune classe, reviens plus tard!")
  if(uarmeselect > 0) return message.reply("Tu as déjà une arme selectionnée, fais !remove arme pour la retirer.")
  if(uitem44 > 0, uarmeselect === 0, uclassen > 0) {

    armeselect[message.author.id] = {
      armeselect: 44
    };

          fs.writeFile("./armeselect.json", JSON.stringify(armeselect), (err) => {
            if (err) console.log(err)
            });
                  message.channel.send("Tu as bien équipé l'arme Epée de Gryffondor [ID:44]")
  };

};
let atkarme = 0
let defarme = 0
let pvarme = 0


if(uitem1 > 0){
  item1name = "Bâton"
  item1atk = Math.trunc(1.5 * pet10effect1* pet35effect1 * (1+ (0.35* Math.pow(2, uarmeb1-1))))
  item1def = 0
  item1pv = 0
  item1emote = "<:baton:597399029185511444>"
};
if(uitem2 > 0){
  item2name = "Couteau de cuisine"
  item2atk = Math.trunc(2 * pet10effect1* pet35effect1 * (1+ (0.35* Math.pow(2, uarmeb2-1))))
  item2def = 0
  item2pv = 0
  item2emote = "<:couteau2:596994150214139914>"
};
if(uitem3 > 0){
  item3name = "Couteau en plastique"
  item3atk = Math.trunc(0.5 * pet10effect1* pet35effect1* (1+ (0.35* Math.pow(2, uarmeb3-1))))
  item3def = Math.trunc(0.5 * pet10effect1* pet35effect1* (1+ (0.35* Math.pow(2, uarmeb3-1))))
  item3pv = Math.trunc(0.5 * pet10effect1* pet35effect1* (1+ (0.35* Math.pow(2, uarmeb3-1))))
  item3emote = "<:couteau3:597399115915067395>"
};
if(uitem4 > 0){
  item4name = "Epée en bois"
  item4atk = Math.trunc(8.5 * pet10effect1* pet35effect1* (1+ (0.35* Math.pow(2, uarmeb4-1))))
  item4def = Math.trunc(3 * pet10effect1* pet35effect1* (1+ (0.35* Math.pow(2, uarmeb4-1))))
  item4pv = Math.trunc(3* pet10effect1* pet35effect1* (1+ (0.35* Math.pow(2, uarmeb4-1))))
  item4emote = "<:Epee4:596994186771693568>"
};
if(uitem5 > 0){
  item5name = "Gants de boxe"
  item5atk = Math.trunc(2* pet10effect1* pet35effect1* (1+ (0.35* Math.pow(2, uarmeb5-1))))
  item5def = Math.trunc(7* pet10effect1* pet35effect1* (1+ (0.35* Math.pow(2, uarmeb5-1))))
  item5pv = Math.trunc(16* pet10effect1* pet35effect1* (1+ (0.35* Math.pow(2, uarmeb5-1))))
  item5emote = "<:gants5:596994206732386305>"
};
if(uitem6 > 0){
  item6name = "Pistolet"
  item6atk = Math.trunc(8* pet10effect1* pet35effect1* (1+ (0.35* Math.pow(2, uarmeb5-1))))
  item6def = 0
  item6pv = Math.trunc(10* pet10effect1* pet35effect1* (1+ (0.35* Math.pow(2, uarmeb5-1))))
  item6emote = "<:pistolet6:597399431716798474>"
};
if(uitem7 > 0){
  item7name = "Cuter"
  item7atk = Math.trunc(1.5* pet10effect1* pet35effect1* (1+ (0.35* Math.pow(2, uarmeb6-1))))
  item7def = Math.trunc(0.5* pet10effect1* pet35effect1* (1+ (0.35* Math.pow(2, uarmeb6-1))))
  item7pv = 0
  item7emote = "<:cuter7:597399140561059841>"
};
if(uitem8 > 0){
  item8name = "Briquet"
  item8atk = Math.trunc(1.5* pet10effect1* pet35effect1* (1+ (0.35* Math.pow(2, uarmeb7-1))))
  item8def = Math.trunc(3.5* pet10effect1* pet35effect1* (1+ (0.35* Math.pow(2, uarmeb7-1))))
  item8pv = Math.trunc(1* pet10effect1* pet35effect1)
  item8emote = "<:briquet8:597399081718906890>"
};
if(uitem9 > 0){
  item9name = "Lance-Flamme **eco+**"
  item9atk = Math.trunc(10* pet10effect1* pet35effect1* (1+ (0.35* Math.pow(2, uarmeb8-1))))
  item9def = Math.trunc(5* pet10effect1* pet35effect1* (1+ (0.35* Math.pow(2, uarmeb8-1))))
  item9pv = Math.trunc(5* pet10effect1* pet35effect1* (1+ (0.35* Math.pow(2, uarmeb8-1))))
  item9emote = "<:lanceflamme9:597399305514516480>"
};
if(uitem10 > 0){
  item10name = "Serviette"
  item10atk = 0
  item10def = Math.trunc(3* pet10effect1* pet35effect1* (1+ (0.35* Math.pow(2, uarmeb9-1))))
  item10pv = Math.trunc(1* pet10effect1* pet35effect1* (1+ (0.35* Math.pow(2, uarmeb9-1))))
  item10emote = "<:serviette10:597403659793596416>"
};
if(uitem11 > 0){
  item11name = "Grenade"
  item11atk = Math.trunc(28* pet10effect1* pet35effect1* (1+ (0.55* Math.pow(2, uarmeb11-1))))
  item11def = 0
  item11pv = 0
  item11emote = "<:grenade11:597399227051802664>"
};
if(uitem12 > 0){
  item12name = "Epée en bronze"
  item12atk = Math.trunc(10.5* pet10effect1* pet35effect1* (1+ (0.55* Math.pow(2, uarmeb12-1))))
  item12def = Math.trunc(2.5* pet10effect1* pet35effect1* (1+ (0.55* Math.pow(2, uarmeb12-1))))
  item12pv = Math.trunc(30* pet10effect1* pet35effect1* (1+ (0.55* Math.pow(2, uarmeb12-1))))
  item12emote = "<:bronzesword12:597399003016986634>"
};
if(uitem13 > 0){
  item13name = "Epée en Or"
  item13atk = Math.trunc(13* pet10effect1* pet35effect1* (1+ (0.55* Math.pow(2, uarmeb13-1))))
  item13def = Math.trunc(5* pet10effect1* pet35effect1* (1+ (0.55* Math.pow(2, uarmeb13-1))))
  item13pv = Math.trunc(35* pet10effect1* pet35effect1* (1+ (0.55* Math.pow(2, uarmeb13-1))))
  item13emote = "<:gsword13:597150536642330665>"
};
if(uitem14 > 0){
  item14name = "Couteau de chasse"
  item14atk = Math.trunc(8* pet10effect1* pet35effect1*(1+ (0.55* Math.pow(2, uarmeb14-1))))
  item14def = Math.trunc(2* pet10effect1* pet35effect1* (1+ (0.55* Math.pow(2, uarmeb14-1))))
  item14pv = Math.trunc(15* pet10effect1* pet35effect1* (1+ (0.55* Math.pow(2, uarmeb14-1))))
  item14emote = "<:couteau14:597399130565771274>"
};
if(uitem15 > 0){
  item15name = "Lance-Pierre"
  item15atk = Math.trunc(3* pet10effect1* pet35effect1* (1+ (0.55* Math.pow(2, uarmeb15-1))))
  item15def = Math.trunc(1* pet10effect1* pet35effect1* (1+ (0.55* Math.pow(2, uarmeb15-1))))
  item15pv = Math.trunc(10* pet10effect1* pet35effect1* (1+ (0.55* Math.pow(2, uarmeb15-1))))
  item15emote = "<:lancepierre15:597152778363731987>"
};
if(uitem16 > 0){
  item16name = "Tronçonneuse"
  item16atk = Math.trunc(12* pet10effect1* pet35effect1* (1+ (0.55* Math.pow(2, uarmeb16-1))))
  item16def = Math.trunc(1* pet10effect1* pet35effect1* (1+ (0.55* Math.pow(2, uarmeb16-1))))
  item16pv = Math.trunc(2* pet10effect1* pet35effect1* (1+ (0.55* Math.pow(2, uarmeb16-1))))
  item16emote = "<:tronconneuse16:597399638294659082>"
};
if(uitem17 > 0){
  item17name = "Fusil de chasse"
  item17atk = Math.trunc(9* pet10effect1* pet35effect1* (1+ (0.55* Math.pow(2, uarmeb17-1))))
  item17def = Math.trunc(1.5* pet10effect1* pet35effect1* (1+ (0.55* Math.pow(2, uarmeb17-1))))
  item17pv = Math.trunc(2* pet10effect1* pet35effect1* (1+ (0.55* Math.pow(2, uarmeb17-1))))
  item17emote = "<:fusilchasse17:597399173096013863>"
};
if(uitem18 > 0){
  item18name = "Lance-Flamme"
  item18atk = Math.trunc(15* pet10effect1* pet35effect1* (1+ (0.55* Math.pow(2, uarmeb18-1))))
  item18def = Math.trunc(4* pet10effect1* pet35effect1* (1+ (0.55* Math.pow(2, uarmeb18-1))))
  item18pv = Math.trunc(15* pet10effect1* pet35effect1 * (1+ (0.55* Math.pow(2, uarmeb18-1))))
  item18emote = "<:lanceflammeelonmusk18:597399327496863774>"
};
if(uitem19 > 0){
  item19name = "Hache de combat en plastique"
  item19atk = Math.trunc(7* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb19-1))))
  item19def = Math.trunc(0* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb19-1))))
  item19pv = Math.trunc(0* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb19-1))))
  item19emote = "<:hachecombat19:597365129918545920>"
};
if(uitem20 > 0){
  item20name = "Epée argentée"
  item20atk = Math.trunc(15* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb20-1))))
  item20def = Math.trunc(1* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb20-1))))
  item20pv = Math.trunc(10* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb20-1))))
  item20emote = "<:sword20:597400340513423405>"
};
if(uitem21 > 0){
  item21name = "Carapuce à O"
  item21atk = Math.trunc(1* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb21-1))))
  item21def = Math.trunc(1* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb21-1))))
  item21pv = Math.trunc(1* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb21-1))))
  item21emote = "<:Carapuce__O21:597160550023036929>"
};
if(uitem22 > 0){
  item22name = "Poppy"
  item22atk = Math.trunc(1* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb22-1))))
  item22def = Math.trunc(0* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb22-1))))
  item22pv = Math.trunc(5* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb22-1))))
  item22emote = "<:poppy22:597365213037199361>"
};
if(uitem23 > 0){
  item23name = "Scissor Blade Rouge"
  item23atk = Math.trunc(70* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb23-1))))
  item23def = Math.trunc(10* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb23-1))))
  item23pv = Math.trunc(50* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb23-1))))
  item23emote = "<:scissorbladered23:597399519252185088>"
};
if(uitem24 > 0){
  item24name = "Scissor Blade Violet"
  item24atk = Math.trunc(75* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb24-1))))
  item24def = Math.trunc(12* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb24-1))))
  item24pv = Math.trunc(50* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb24-1))))
  item24emote = "<:scissorbladepurple24:597399493062688808>"
};
if(uitem25 > 0){
  item25name = "Scissors Blades"
  item25atk = Math.trunc(200* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb25-1))))
  item25def = Math.trunc(50* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb25-1))))
  item25pv = Math.trunc(250* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb25-1))))
  item25emote = "<:scissorblade25:597399474742099989>"
};
if(uitem26 > 0){
  item26name = "Murasame"
  item26atk = Math.trunc(300* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb26-1))))
  item26def = Math.trunc(10* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb26-1))))
  item26pv = Math.trunc(100* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb26-1))))
  item26emote = "<:Murasame26:597399385277595659>"
};
if(uitem27 > 0){
  item27name = "Elucidator"
  item27atk = Math.trunc(22* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb27-1))))
  item27def = Math.trunc(10* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb27-1))))
  item27pv = Math.trunc(120* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb27-1))))
  item27emote = "<:Elucidator27:597399150744698921>"
};
if(uitem28 > 0){
  item28name = "Bouclier de Captain"
  item28atk = Math.trunc(5* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb28-1))))
  item28def = Math.trunc(280* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb28-1))))
  item28pv = Math.trunc(150* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb28-1))))
  item28emote = "<:Bouclier28:597365465156812830>"
};
if(uitem29 > 0){
  item29name = "Lostvayne"
  item29atk = Math.trunc(150* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb29-1))))
  item29def = Math.trunc(20* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb29-1))))
  item29pv = Math.trunc(135* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb29-1))))
  item29emote = "<:lostvayne29:597399362892595211>"
};
if(uitem30 > 0){
  item30name = "Excalibur Dorée"
  item30atk = Math.trunc(99* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb30-1))))
  item30def = Math.trunc(5* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb30-1))))
  item30pv = Math.trunc(100* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb30-1))))
  item30emote = "<:SwordExcaliburSAO30:597399625284059146>"
};
if(uitem31 > 0){
  item31name = "Couteau d'Izaya"
  item31atk = Math.trunc(55* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb31-1))))
  item31def = Math.trunc(22* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb31-1))))
  item31pv = Math.trunc(15* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb31-1))))
  item31emote = "<:IzayaKnife31:597399269678252072>"
};
if(uitem32 > 0){
  item32name = "Faux d'Ombre"
  item32atk = Math.trunc(10* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb32-1))))
  item32def = Math.trunc(15* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb32-1))))
  item32pv = Math.trunc(30* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb32-1))))
  item32emote = "<:FauxOmbre32:597399163034009610>"
};
if(uitem33 > 0){
  item33name = "Schofiel Model 3"
  item33atk = Math.trunc(25* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb33-1))))
  item33def = 0
  item33pv = Math.trunc(10* pet10effect1* pet35effect1* (1+ (0.7* Math.pow(2, uarmeb33-1))))
  item33emote = "<:SchofieldM333:597399453594550273>"
};
if(uitem34 > 0){
  item34name = "Rhitta"
  item34atk = Math.trunc(300 * pet10effect1* pet35effect1 * (1+(0.9* Math.pow(2, uarmeb34-1))))
  item34def = 0
  item34pv = 0
  item34emote = "<:Rhitta34:597752072145731594>"
};
if(uitem35 > 0){
  item35name = "Dark Repulser"
  item35atk = Math.trunc(75* pet10effect1* pet35effect1* (1+(0.9* Math.pow(2, uarmeb35-1))))
  item35def = Math.trunc(15* pet10effect1* pet35effect1* (1+(0.9* Math.pow(2, uarmeb35-1))))
  item35pv = Math.trunc(125* pet10effect1* pet35effect1* (1+(0.9* Math.pow(2, uarmeb35-1))))
  item35emote = "<:DarkRepulser35:597752101267046410>"
};
if(uitem36 > 0){
  item36name = "Lambent Light"
  item36atk = Math.trunc(65* pet10effect1* pet35effect1* (1+(0.9* Math.pow(2, uarmeb36-1))))
  item36def = Math.trunc(5* pet10effect1* pet35effect1* (1+(0.9* Math.pow(2, uarmeb36-1))))
  item36pv = Math.trunc(75* pet10effect1* pet35effect1* (1+(0.9* Math.pow(2, uarmeb36-1))))
  item36emote = "<:LambentLight36:597752148947632128>"
};
if(uitem37 > 0){
  item37name = "Chastiefol: Lance"
  item37atk = Math.trunc(200* pet10effect1* pet35effect1* (1+(0.9* Math.pow(2, uarmeb37-1))))
  item37def = 0
  item37pv = Math.trunc(50* pet10effect1* pet35effect1* (1+(0.9* Math.pow(2, uarmeb37-1))))
  item37emote = "<:ChastiefolLance37:597752209664376853>"
};
if(uitem38 > 0){
  item38name = "Equipement Tridimensionnel"
  item38atk = Math.trunc(45* pet10effect1* pet35effect1* (1+(0.9* Math.pow(2, uarmeb38-1))))
  item38def = Math.trunc(15* pet10effect1* pet35effect1* (1+(0.9* Math.pow(2, uarmeb38-1))))
  item38pv = Math.trunc(120* pet10effect1* pet35effect1* (1+(0.9* Math.pow(2, uarmeb38-1))))
  item38emote = "<:EQP38:597752229323210771>"
};
if(uitem39 > 0){
  item39name = "Sharingan"
  item39atk = Math.trunc(140* pet10effect1* pet35effect1* (1+(0.9* Math.pow(2, uarmeb39-1))))
  item39def = Math.trunc(75* pet10effect1* pet35effect1* (1+(0.9* Math.pow(2, uarmeb39-1))))
  item39pv = Math.trunc(350* pet10effect1* pet35effect1* (1+(0.9* Math.pow(2, uarmeb39-1))))
  item39emote = "<:Sharingan39:597752389294096395>"
};
if(uitem40 > 0){
  item40name = "Trident"
  item40atk = Math.trunc(35* pet10effect1* pet35effect1* (1+(0.9* Math.pow(2, uarmeb40-1))))
  item40def = Math.trunc(50* pet10effect1* pet35effect1* (1+(0.9* Math.pow(2, uarmeb40-1))))
  item40pv = Math.trunc(2000* pet10effect1* pet35effect1* (1+(0.9* Math.pow(2, uarmeb40-1))))
  item40emote = "<:Trident40:597752417685340160>"
};
if(uitem41 > 0){
  item41name = "Saika"
  item41atk = Math.trunc(100* pet10effect1* pet35effect1* (1+(0.9* Math.pow(2, uarmeb41-1))))
  item41def = Math.trunc(100* pet10effect1* pet35effect1* (1+(0.9* Math.pow(2, uarmeb41-1))))
  item41pv = Math.trunc(1000* pet10effect1* pet35effect1* (1+(0.9* Math.pow(2, uarmeb41-1))))
  item41emote = "<:saika41:597752484366254101>"
};

if(uitem42 > 0){
  item42name = "Pistoler laser"
  item42atk = Math.trunc(220* pet10effect1* pet35effect1* (1+(0.9* Math.pow(2, uarmeb42-1))))
  item42def = Math.trunc(5* pet10effect1* pet35effect1* (1+(0.9* Math.pow(2, uarmeb42-1))))
  item42pv = Math.trunc(15* pet10effect1* pet35effect1* (1+(0.9* Math.pow(2, uarmeb42-1))))
  item42emote = "<:pistoletlaser42:725792300642599063>"
};
if(uitem43 > 0){
  item43name = "Baguette de sureau"
  item43atk = Math.trunc(150* pet10effect1* pet35effect1* (1+(0.9* Math.pow(2, uarmeb43-1))))
  item43def = Math.trunc(10* pet10effect1* pet35effect1* (1+(0.9* Math.pow(2, uarmeb43-1))))
  item43pv = Math.trunc(200* pet10effect1* pet35effect1* (1+(0.9* Math.pow(2, uarmeb43-1))))
  item43emote = "<:baguettesureau43:731095435170545679>"
};
if(uitem44 > 0){
  item44name = "Epée de Gryffondor"
  item44atk = Math.trunc(185* pet10effect1* pet35effect1* (1+(0.7* Math.pow(2, uarmeb44-1))))
  item44def = Math.trunc(30* pet10effect1* pet35effect1* (1+(0.7* Math.pow(2, uarmeb44-1))))
  item44pv = Math.trunc(125* pet10effect1* pet35effect1* (1+(0.7* Math.pow(2, uarmeb44-1))))
  item44emote = "<:epeedegryffondor:777837809671208960>"
};
if(uarmeselect === 1) {
  atkarme = item1atk
  defarme =  item1def
  pvarme = item1pv
 }
 if(uarmeselect === 2) {
  atkarme = item2atk
  defarme =  item2def
  pvarme = item2pv
 }
 if(uarmeselect === 3) {
  atkarme = item3atk
  defarme =  item3def
  pvarme = item3pv
 }
 if(uarmeselect === 4) {
  atkarme = item4atk
  defarme =  item4def
  pvarme = item4pv
 }
 if(uarmeselect === 5) {
  atkarme = item5atk
  defarme =  item5def
  pvarme = item5pv
 }
 if(uarmeselect === 6) {
  atkarme = item6atk
  defarme =  item6def
  pvarme = item6pv
 }
 if(uarmeselect === 7) {
  atkarme = item7atk
  defarme =  item7def
  pvarme = item7pv
 }
 if(uarmeselect === 8) {
  atkarme = item8atk
  defarme =  item8def
  pvarme = item8pv
 }
 if(uarmeselect === 9) {
  atkarme = item9atk
  defarme =  item9def
  pvarme = item9pv
 }
 if(uarmeselect === 10) {
  atkarme = item10atk
  defarme =  item10def
  pvarme = item10pv
 }
 if(uarmeselect === 11) {
  atkarme = item11atk
  defarme =  item11def
  pvarme = item11pv
 }
 if(uarmeselect === 12) {
  atkarme = item12atk
  defarme =  item12def
  pvarme = item12pv
 }
 if(uarmeselect === 13) {
  atkarme = item13atk
  defarme =  item13def
  pvarme = item13pv
 }
 if(uarmeselect === 14) {
  atkarme = item14atk
  defarme =  item14def
  pvarme = item14pv
 }
 if(uarmeselect === 15) {
  atkarme = item15atk
  defarme =  item15def
  pvarme = item15pv
 }
 if(uarmeselect === 16) {
  atkarme = item16atk
  defarme =  item16def
  pvarme = item16pv
 }
 if(uarmeselect === 17) {
  atkarme = item17atk
  defarme =  item17def
  pvarme = item17pv
 }
 if(uarmeselect === 18) {
  atkarme = item18atk
  defarme =  item18def
  pvarme = item18pv
 }
 if(uarmeselect === 19) {
  atkarme = item19atk
  defarme =  item19def
  pvarme = item19pv
 }
 if(uarmeselect === 20) {
  atkarme = item20atk
  defarme =  item20def
  pvarme = item20pv
 }
 if(uarmeselect === 21) {
  atkarme = item21atk
  defarme =  item21def
  pvarme = item21pv
 }
 if(uarmeselect === 22) {
  atkarme = item22atk
  defarme =  item22def
  pvarme = item22pv
 }
 if(uarmeselect === 23) {
  atkarme = item23atk
  defarme =  item23def
  pvarme = item23pv
 }
  if(uarmeselect === 24) {
  atkarme = item24atk
  defarme =  item24def
  pvarme = item24pv
 }
 if(uarmeselect === 25) {
  atkarme = item25atk
  defarme =  item25def
  pvarme = item25pv
 }
 if(uarmeselect === 26) {
  atkarme = item26atk
  defarme =  item26def
  pvarme = item26pv
 }
 if(uarmeselect === 27) {
  atkarme = item27atk
  defarme =  item27def
  pvarme = item27pv
 }
 if(uarmeselect === 28) {
  atkarme = item28atk
  defarme =  item28def
  pvarme = item28pv
 }
 if(uarmeselect === 29) {
  atkarme = item29atk
  defarme =  item29def
  pvarme = item29pv
 }
 if(uarmeselect === 30) {
  atkarme = item30atk
  defarme =  item30def
  pvarme = item30pv
 }
 if(uarmeselect === 31) {
  atkarme = item31atk
  defarme =  item31def
  pvarme = item31pv
 }
 if(uarmeselect === 32) {
  atkarme = item32atk
  defarme =  item32def
  pvarme = item32pv
 }
 if(uarmeselect === 33) {
  atkarme = item33atk
  defarme =  item33def
  pvarme = item33pv
 }
 if(uarmeselect === 34) {
  atkarme = item34atk
  defarme =  item34def
  pvarme = item34pv
 }
 if(uarmeselect === 35) {
  atkarme = item35atk
  defarme =  item35def
  pvarme = item35pv
 }
 if(uarmeselect === 36) {
  atkarme = item36atk
  defarme =  item36def
  pvarme = item36pv
 }
 if(uarmeselect === 37) {
  atkarme = item37atk
  defarme =  item37def
  pvarme = item37pv
 }
 if(uarmeselect === 38) {
  atkarme = item38atk
  defarme =  item38def
  pvarme = item38pv
 }
 if(uarmeselect === 39) {
  atkarme = item39atk
  defarme =  item39def
  pvarme = item39pv
 }
 if(uarmeselect === 40) {
  atkarme = item40atk
  defarme =  item40def
  pvarme = item40pv
 }
 if(uarmeselect === 41) {
  atkarme = item41atk
  defarme =  item41def
  pvarme = item41pv
 }
 if(uarmeselect === 42) {
  atkarme = item42atk
  defarme =  item42def
  pvarme = item42pv
 }
 if(uarmeselect === 43) {
  atkarme = item43atk
  defarme =  item43def
  pvarme = item43pv
 }
 if(uarmeselect === 44) {
  atkarme = item44atk
  defarme =  item44def
  pvarme = item44pv
 }
let potatkbouste = 1
let potdefbouste = 1
let potpvbouste = 1



let useatkpot = require("./useatk.json");
let usedefpot = require("./usedef.json");
let usepvpot = require("./usepv.json");


if(!useatkpot[message.author.id]){
  useatkpot[message.author.id] = {
    useatkpot: 0
  };

fs.writeFile("./useatk.json", JSON.stringify(useatkpot), (err) => {
  if (err) console.log(err)
});
}
if(!usedefpot[message.author.id]){
  usedefpot[message.author.id] = {
    usedefpot: 0
  };

fs.writeFile("./usedef.json", JSON.stringify(usedefpot), (err) => {
  if (err) console.log(err)
});
}
if(!usepvpot[message.author.id]){
  usepvpot[message.author.id] = {
    usepvpot: 0
  };

fs.writeFile("./usepv.json", JSON.stringify(usepvpot), (err) => {
  if (err) console.log(err)
});
}
let uuseatkpot = useatkpot[message.author.id].useatkpot
let uusedefpot = usedefpot[message.author.id].usedefpot
let uusepvpot = usepvpot[message.author.id].usepvpot


let messagedeboostatk = "+0%"
let messagedeboostdef = "+0%"
let messagedeboostpv = "+0%"


if(uuseatkpot > 0) {
  potatkbouste = 1.25
  messagedeboostatk = `+25% pour les ${uuseatkpot} prochain combats`
}
if(uusedefpot > 0) {
  potdefbouste = 1.25
  messagedeboostatk = `+25% pour les ${uusedefpot} prochain combats`
}
if(uusepvpot > 0) {
  potpvbouste = 1.25
  messagedeboostatk = `+25% pour les ${uusepvpot} prochain combats`
}
let potatk = require("./potatk.json");
let potdef = require("./potdef.json");
let potpv = require("./potpv.json");
if(!potatk[message.author.id]){
  potatk[message.author.id] = {
    potatk: 0
  };

fs.writeFile("./potatk.json", JSON.stringify(potatk), (err) => {
  if (err) console.log(err)
});
}
if(!potdef[message.author.id]){
  potdef[message.author.id] = {
    potdef: 0
  };

fs.writeFile("./potdef.json", JSON.stringify(potdef), (err) => {
  if (err) console.log(err)
});
}
if(!potpv[message.author.id]){
  potpv[message.author.id] = {
    potpv: 0
  };

fs.writeFile("./potpv.json", JSON.stringify(potpv), (err) => {
  if (err) console.log(err)
});
}
let upotatk = potatk[message.author.id].potatk

let upotdef = potdef[message.author.id].potdef

let upotpv = potpv[message.author.id].potpv

if(
  includesRealy(message, `!use at`) ||
  includesRealy(message, `!Use at`) ||
  includesRealy(message, `!USE at`) ||
  includesRealy(message, `!Use At`) ||
  includesRealy(message, `!use At`) ||
  includesRealy(message, `!USE At`) 


) {
  if(uclassen === 0 || upotatk ===  0) message.channel.send("Tu n'as pas assez de potions d'Attaque.")
  if(uclassen >= 1 && upotatk >= 1) {

    useatkpot[message.author.id] = {
      useatkpot: uuseatkpot + 1
    };

    potatk[message.author.id] = {
      potatk: upotatk - 1
    };

    fs.writeFile("./useatkpot.json", JSON.stringify(useatkpot), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./potatk.json", JSON.stringify(potatk), (err) => {
      if(err) console.log(err)
    });
    message.channel.send(`__${potatkemote} Potion d'Attaque:__\nBoost appliqué: +25% d'attaque lors de votre prochain combat !\n${trucbizarre}Potions d'Attaque restantes: ${upotatk-1}${trucbizarre}`)

  }

}
if(
  includesRealy(message, `!use De`) ||
  includesRealy(message, `!Use De`) ||
  includesRealy(message, `!USE De`) ||
  includesRealy(message, `!Use de`) ||
  includesRealy(message, `!use de`) ||
  includesRealy(message, `!USE de`) 


) {
  if(uclassen === 0 || upotdef ===  0) message.channel.send("Tu n'as pas assez de potions de défense.")
  if(uclassen >= 1 && upotdef >= 1) {

    usedefpot[message.author.id] = {
      usedefpot: uusedefpot + 1
    };

    potdef[message.author.id] = {
      potdef: upotdef - 1
    };

    fs.writeFile("./usedefpot.json", JSON.stringify(usedefpot), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./potdef.json", JSON.stringify(potdef), (err) => {
      if(err) console.log(err)
    });
    message.channel.send(`__${potdefemote} Potion de Défense:__\nBoost appliqué: +25% de défense lors de votre prochain combat !\n${trucbizarre}Potions de défense restantes: ${upotdef-1}${trucbizarre}`)

  }

}
if(
  includesRealy(message, `!use vie`) ||
  includesRealy(message, `!Use vie`) ||
  includesRealy(message, `!USE vie`) ||
  includesRealy(message, `!Use pv`) ||
  includesRealy(message, `!use pv`) ||
  includesRealy(message, `!USE pv`) 


) {
  if(uclassen === 0 || upotpv ===  0) message.channel.send("Tu n'as pas assez de potions de vie.")
  if(uclassen >= 1 && upotpv >= 1) {

    usepvpot[message.author.id] = {
      usepvpot: uusepvpot + 1
    };

    potpv[message.author.id] = {
      potpv: upotpv - 1
    };

    fs.writeFile("./usepvpot.json", JSON.stringify(usepvpot), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./potpv.json", JSON.stringify(potpv), (err) => {
      if(err) console.log(err)
    });
    message.channel.send(`__${potpvemote} Potion de Vie:__\nBoost appliqué: +25% de Pv lors de votre prochain combat !\n${trucbizarre}Potions de vie restantes: ${upotpv-1}${trucbizarre}`)

  }

}
let boostcraftepee = 0.125*uEpee
let boostcraftshield = 0.125*uBouclier

if(uEpee > 5) {
  boostcraftepee= 0.25*uEpee
}
if(uBouclier > 5) {
  boostcraftshield= 0.25* uBouclier
}
if(uEpee > 10) {
  boostcraftepee= 0.35*uEpee
}
if(uBouclier > 10) {
  boostcraftshield= 0.35* uBouclier
}
if(uEpee > 13) {
  boostcraftepee= 0.5*uEpee
}
if(uBouclier > 13) {
  boostcraftshield= 0.5* uBouclier
}
if(uEpee > 15) {
  boostcraftepee= 0.75*uEpee

}
if(uBouclier > 15) {
  boostcraftshield= 0.75* uBouclier

}
if(uEpee > 18) {
  boostcraftepee= 1*uEpee

}
if(uBouclier > 18) {
  boostcraftshield= 1* uBouclier

}
if(uEpee > 21) {
  boostcraftepee= 1.5*uEpee

}
if(uBouclier > 21) {
  boostcraftshield= 1.5* uBouclier

}
if(uEpee > 23) {
  boostcraftepee= 2*uEpee

}
if(uBouclier > 23) {
  boostcraftshield= 2* uBouclier


}
let BoostAtkP = 1+(0.0008*nivactuel)
let BoostDefP = 1+(0.0008*nivactuel)
let BoostPvP = 1+(0.001*nivactuel)
let PMaxAtk = (uAtk + boostAtkClasse)*((BoostAtkP + artefact9effect + gemme3effectatk + pet12effect1 + pet16effect1 + pet18effect1 + pet30effect1 + pet31effect1 + pet32effect2 + pet37effect1 - 9  + boostcraftepee) * potatkbouste) + atkarme
let PMaxDef = (uDef + boostDefClasse)*((BoostDefP + artefact9effect + gemme3effectdef + pet16effect1 + pet18effect2 + pet22effect1 + pet27effect1 + pet31effect1 + pet34effect1 + pet36effect1 -9 + boostcraftshield) * potdefbouste) + defarme
let PMaxPv = (uPvmax*3 + boostPVClasse)* ((BoostPvP + artefact9effect + gemme3effectpv + pet15effect1 + pet16effect1 + pet17effect1 + pet28effect1 + pet29effect1 + pet31effect1 + pet33effect2 + pet34effect1 + pet36effect1 + pet13effect1  + boostcraftepee+boostcraftshield -12) * potpvbouste)  + pvarme


if(upetselect === 19) {
  pet19effect1 = (PMaxPv/100) * (1+nivactuelclasse)
}
if(upetselect === 25) {
  pet25effect1 = (PMaxPv*2.5/100) * (1+nivactuelclasse)
}
if(upetselect === 40) {
  pet40effect1 = (PMaxPv*5/100) * (1+nivactuelclasse)
  pet40effect2 = (1.03 + (0.035 * nivactuelclasse) *godpower2)
}

let gdropfrag = pfragdrop * gemme4effect* pet20effect1 *pet24effect1* pet39effect1
let gdropfrag2 = pfragdrop2 * gemme4effect* pet20effect1 *pet24effect1* pet39effect1
let gdropfrag3 = pfragdrop3 * gemme4effect* pet20effect1 *pet24effect1* pet39effect1
let gdropfrag4 = pfragdrop4 * gemme4effect* pet20effect1 *pet24effect1* pet39effect1
let gdropfrag5 = pfragdrop5 * gemme4effect * pet20effect1 *pet24effect1* pet39effect1

if(message.content === "!donjon 1 reset"){
if(uetage <= 30) message.channel.send("Action impossible pour le moment.")
if(uetage >= 31) {
   etage[message.author.id] = {
    etage: 0
  };
  resetower[message.author.id] = {
    resetower: uresetower + 1
  };
  fragments[message.author.id] = {
    fragments: ufragments + gdropfrag
    };
   
  fs.writeFile("./etage.json", JSON.stringify(etage), (err) => {
    if (err) console.log(err)
  });
  
  fs.writeFile("./resetower.json", JSON.stringify(resetower), (err) => {
    if (err) console.log(err)
  });
  
  fs.writeFile("./fragments.json", JSON.stringify(fragments), (err) => {
    if (err) console.log(err)
  });
  message.channel.send(`Reset effectué avec succès, vous vous retrouvez au premier étage du donjon, bonne chance!\n${trucbizarre}⭐${trucbizarre}**__Récompenses:__**\n+${millify(gdropfrag,2)} ${fragemote}\nNombre total de reset du donjon 1: ${trucbizarre}${uresetower+1}${trucbizarre} ${donjon2messageunlock}`)
}
};

if(message.content === "!donjon 2 reset"){
  if(udonjonunlock2 === 0 || uetage2 <= 18) message.channel.send("Action impossible pour le moment.")
  if(uetage2 >= 19 && udonjonunlock2 >= 1) {
     etage2[message.author.id] = {
      etage2: 0
    };
    resetower2[message.author.id] = {
      resetower2: uresetower2 + 1
    };
    fragments[message.author.id] = {
      fragments: ufragments + gdropfrag2
      };
     
    fs.writeFile("./etage2.json", JSON.stringify(etage2), (err) => {
      if (err) console.log(err)
    });
    
    fs.writeFile("./resetower2.json", JSON.stringify(resetower2), (err) => {
      if (err) console.log(err)
    });
    
    fs.writeFile("./fragments.json", JSON.stringify(fragments), (err) => {
      if (err) console.log(err)
    });
    message.channel.send(`Reset effectué avec succès, vous vous retrouvez au premier étage du donjon, bonne chance!\n${trucbizarre}⭐${trucbizarre}**__Récompenses:__**\n+${millify(gdropfrag2,2)} ${fragemote}\n${trucbizarre}Nombre total de reset du donjon 2: ${uresetower2+1}${trucbizarre} ${donjon3messageunlock}`)
  }
  };
  if(message.content === "!donjon 3 reset"){
    if(udonjonunlock3 === 0 || uetage3 <= 16) message.channel.send("Action impossible pour le moment.")
    if(uetage3 >= 17 && udonjonunlock3>= 1) {
       etage3[message.author.id] = {
        etage3: 0
      };
      resetower3[message.author.id] = {
        resetower3: uresetower3 + 1
      };
      fragments[message.author.id] = {
        fragments: ufragments + gdropfrag3
        };
       
      fs.writeFile("./etage3.json", JSON.stringify(etage3), (err) => {
        if (err) console.log(err)
      });
      
      fs.writeFile("./resetower3.json", JSON.stringify(resetower3), (err) => {
        if (err) console.log(err)
      });
      
      fs.writeFile("./fragments.json", JSON.stringify(fragments), (err) => {
        if (err) console.log(err)
      });
      message.channel.send(`Reset effectué avec succès, vous vous retrouvez au premier étage du donjon, bonne chance!\n${trucbizarre}⭐${trucbizarre}**__Récompenses:__**\n+${millify(gdropfrag3,2)} ${fragemote}\n${trucbizarre}Nombre total de reset du donjon 3: ${uresetower3+1}${trucbizarre} ${donjon4messageunlock}`)
    }
    };

    if(message.content === "!donjon 4 reset"){
      if(udonjonunlock4 === 0 || uetage4 <= 17) message.channel.send("Action impossible pour le moment.")
      if(uetage4 >= 18 && udonjonunlock4>= 1) {
         etage4[message.author.id] = {
          etage4: 0
        };
        resetower4[message.author.id] = {
          resetower4: uresetower4 + 1
        };
        fragments[message.author.id] = {
          fragments: ufragments + gdropfrag4
          };
         
        fs.writeFile("./etage4.json", JSON.stringify(etage4), (err) => {
          if (err) console.log(err)
        });
        
        fs.writeFile("./resetower4.json", JSON.stringify(resetower4), (err) => {
          if (err) console.log(err)
        });
        
        fs.writeFile("./fragments.json", JSON.stringify(fragments), (err) => {
          if (err) console.log(err)
        });
        message.channel.send(`Reset effectué avec succès, vous vous retrouvez au premier étage du donjon, bonne chance!\n${trucbizarre}⭐${trucbizarre}**__Récompenses:__**\n+${millify(gdropfrag4,2)} ${fragemote}\n${trucbizarre}Nombre total de reset du donjon 4: ${uresetower4+1}${trucbizarre}  ${donjon5messageunlock}`)
      }
      };
      if(message.content === "!donjon 5 reset"){
        if(udonjonunlock5 === 0 || uetage5 <= 11) message.channel.send("Action impossible pour le moment.")
        if(uetage5 >=  12 && udonjonunlock5 >= 1) {
           etage5[message.author.id] = {
            etage5: 0
          };
          resetower5[message.author.id] = {
            resetower5: uresetower5 + 1
          };
          fragments[message.author.id] = {
            fragments: ufragments + gdropfrag5
            };
           
          fs.writeFile("./etage5.json", JSON.stringify(etage5), (err) => {
            if (err) console.log(err)
          });
          
          fs.writeFile("./resetower5.json", JSON.stringify(resetower5), (err) => {
            if (err) console.log(err)
          });
          
          fs.writeFile("./fragments.json", JSON.stringify(fragments), (err) => {
            if (err) console.log(err)
          });
          message.channel.send(`Reset effectué avec succès, vous vous retrouvez au premier étage du donjon, bonne chance!\n${trucbizarre}⭐${trucbizarre}**__Récompenses:__**\n+${millify(gdropfrag5,2)} ${fragemote}\n${trucbizarre}Nombre total de reset du donjon 5: ${uresetower5+1}${trucbizarre} `)
        }
        };




  




if(!bag[message.author.id]){
    bag[message.author.id] = {
      bag: 0
    };

  fs.writeFile("./bag.json", JSON.stringify(bag), (err) => {
    if (err) console.log(err)
  });
}




let ubag = bag[message.author.id].bag




let pAcier = 0
let pBC = 0
let pPierre = 0
let pFer = 0
let pGold = 0
let pPluto = 0
let pPN = 0
let pP = 0
let pDiam = 0
let pBCab = 0
let pBBl = 0
let pBS = 0
let pRx = 0
let QRx= ""
let hAcier = 0
let hBC = 0
let hPierre = 0
let hFer = 0
let hGold =0
let hPluto =0
let hPN = 0
let hP = 0
let hDiam = 0
let hBCab = 0
let hBBl = 0
let hBS = 0
let hRx =0
let xpPierre = 0
let xpAcier = 0
let xpFer = 0
let xpOr = 0
let xpPlatine = 0
let xpPluto = 0
let xpDiam = 0
let xpPN = 0
let xpBS = 0
let xpBC = 0
let xpBBL = 0
let xpGWOOD = 0
let uDropSapin = 0
let uDropPierre = 0
let uDropBouleau = 0
let uDropAcier = 0
let uDropXP = 0
let minageXP = 0
let uDropChene = 0
let uDropCab = 0
let uDropFer = 0
let uDropOr = 0
let uDropPla = 0
let uDropD = 0
let uDropPt = 0
let uDropPN = 0
let xPierre = 0
let xAcier = 0
let xFer = 0
let xOr = 0
let xPla = 0
let xDi = 0
let xPluto = 0
let xPN = 0
let xBS = 0
let xBbl = 0
let xBC = 0
let xGW = 0
let xRx = 0
let xBoostXP = 0
let lPierre = 0
let SOPO = 0
let SORx = 0
let lAcier = 0
let lFer = 0
let lOr = 0
let lPla = 0
let lDi = 0
let lPluto = 0
let lPN = 0
let lBS = 0
let lBbl = 0
let lBC = 0
let lGW = 0
let lRx = 0
let NkPierre = 0
let NkAcier = 0
let NkFer = 0
let NkOr = 0
let NkPla = 0
let NkDi = 0
let NkPluto = 0
let NkPN = 0
let NkRx = 0
let AtPi = 0
let AtAcier = 0
let AtFer = 0
let AtPN = 0
let AtBS = 0
let AtBbl = 0
let AtBC = 0
let AtGW = 0
let AtRx = 0
let Atnecessaire = 0


let MkBS = 0
let MkBbl = 0
let MkBC = 0
let MkGW = 0
let MkRx = 0

let lBoostWood = 1
let lBoostOre = 1
let TiPN = 0
let TiGWood = 0
let TiRx = 0
let TiPo = 0

if(ubag === 0){
  SOPO = 50
  SORx = 1000
  }
  if(ubag === 1){
    SOPO = 250
    SORx = 2250
    }
    if(ubag === 2){
      SOPO = 1000
      SORx = 12000
      }
      if(ubag === 3){
        SOPO = 3000
        SORx = 35000
        }
        if(ubag === 4){
          SOPO = 6000
          SORx = 66666
          }
          if(ubag === 5){
            SOPO = 9999
            SORx = 99999
            }
            if(ubag === 6){
              SOPO = 15000
              SORx = 175000
              }
              if(ubag === 7){
                SOPO = 30000
                SORx = 400000
                }
                if(ubag === 8){
                  SOPO = 50000
                  SORx = 600000
                  }
                  if(ubag === 9){
                    SOPO = 99999
                    SORx = 999999
                    }

if(uForeuse === 1){
  pPierre = 5
  }
  if(uForeuse === 1){
    uDropPierre = Math.floor(Math.random() * 5) + 2;
    minageXP = Math.floor(Math.random() * 3) + 1;
    };
if(uHache === 1){
  hBS = 2
  }
  if(uHache === 1){
    uDropSapin = Math.floor(Math.random() * 3) + 1;
    uDropXP = Math.floor(Math.random() * 2) + 2;
    };

if(uForeuse === 2){
  pPierre = 8
  }
  if(uForeuse === 2){
    uDropPierre = Math.floor(Math.random() * 10) + 5;
    minageXP = Math.floor(Math.random() * 6) + 3;
    };
  if(uHache === 2){
  hBS = 5
  }
  if(uHache === 2){
    uDropSapin = Math.floor(Math.random() * 6) + 5;
    uDropXP = Math.floor(Math.random() * 4) + 3;
   };
if(uForeuse === 3){
  pPierre = 15
}
if(uHache === 3){
  hBS = 8
  }
if(uForeuse === 3){
    uDropPierre = Math.floor(Math.random() * 11) + 7;
    minageXP = Math.floor(Math.random() * 7) + 3;
    };
 if(uHache === 3){
    uDropSapin = Math.floor(Math.random() * 7) + 4;
    uDropXP = Math.floor(Math.random() * 5) + 3;
   };
if(uForeuse === 4){
  pPierre = 25
}
if(uHache === 4){
  hBS = 12
  }
if(uForeuse === 4){
    uDropPierre = Math.floor(Math.random() * 13) + 9;
    minageXP = Math.floor(Math.random() * 9) + 4;
    };
 if(uHache === 4){
    uDropSapin = Math.floor(Math.random() * 9) + 5;
    uDropXP = Math.floor(Math.random() * 6) + 4;
   };
if(uForeuse === 5){
  pPierre = 32
}
if(uHache === 5){
  hBS = 24
  }
if(uForeuse === 5){
    uDropPierre = Math.floor(Math.random() * 17) + 12;
    minageXP = Math.floor(Math.random() * 10) + 5;
    };
 if(uHache === 5){
    uDropSapin = Math.floor(Math.random() * 12) + 7;
    uDropXP = Math.floor(Math.random() * 7) + 4;
   };
if(uForeuse === 6){
  pPierre = 43
}
if(uHache === 6){
  hBS = 28
  hPierre = 12
  }
  if(uForeuse === 6){
    uDropPierre = Math.floor(Math.random() * 20) + 15;
    minageXP = Math.floor(Math.random() * 10) + 6;
    };
 if(uHache === 6){
    uDropSapin = Math.floor(Math.random() * 15) + 9;
    uDropXP = Math.floor(Math.random() * 9) + 5;
   };
if(uForeuse === 7){
  pPierre = 57
}
if(uHache === 7){
  hBS = 38
  hPierre = 23
  }
  if(uForeuse === 7){
    uDropPierre = Math.floor(Math.random() * 25) + 18;
    minageXP = Math.floor(Math.random() * 11) + 7;
    };
 if(uHache === 7){
    uDropSapin = Math.floor(Math.random() * 18) + 12;
    uDropXP = Math.floor(Math.random() * 10) + 5;
   };
if(uForeuse === 8){
  pPierre = 63
  pAcier = 2
}
if(uHache === 8){
  hBS = 47
  hPierre = 37
  }
  if(uForeuse === 8){
    uDropPierre = Math.floor(Math.random() * 30) + 22;
    uDropAcier = Math.floor(Math.random() * 2) + 1;
    minageXP = Math.floor(Math.random() * 12) + 8;
    };
 if(uHache === 8){
    uDropSapin = Math.floor(Math.random() * 24) + 16;
    uDropXP = Math.floor(Math.random() * 11) + 6;
   };
if(uForeuse === 9){
  pPierre = 70
  pAcier = 3
}
if(uHache === 9){
  hBS = 62
  hPierre = 43
  }
  if(uForeuse === 9){
    uDropPierre = Math.floor(Math.random() * 35) + 26;
    uDropAcier = Math.floor(Math.random() * 2) + 1;
    minageXP = Math.floor(Math.random() * 13) + 9;
    };
 if(uHache === 9){
    uDropSapin = Math.floor(Math.random() * 29) + 21;
    uDropXP = Math.floor(Math.random() * 12) + 7;
   };
if(uForeuse === 10){
  pPierre = 82
  pAcier = 5
}
if(uHache === 10){
  hBS = 76
  hPierre = 55
  }
  if(uForeuse === 10){
    uDropPierre = Math.floor(Math.random() * 38) + 31;
    uDropAcier = Math.floor(Math.random() * 3) + 1;
    minageXP = Math.floor(Math.random() * 15) + 11;
    };
 if(uHache === 10){
    uDropSapin = Math.floor(Math.random() * 33) + 26;
    uDropXP = Math.floor(Math.random() * 14) + 8;
   };
if(uForeuse === 11){
  pPierre = 89
  pAcier = 7
  pBS = 1
}
if(uHache === 11){
  hBS = 82
  hPierre = 67
  hAcier = 3
  }
  if(uForeuse === 11){
    uDropPierre = Math.floor(Math.random() * 45) + 38;
    uDropAcier = Math.floor(Math.random() * 5) + 2;
    minageXP = Math.floor(Math.random() * 18) + 14;
    };
 if(uHache === 11){
    uDropSapin = Math.floor(Math.random() * 38) + 33;
    uDropXP = Math.floor(Math.random() * 18) + 12;
   };
if(uForeuse === 12){
  pPierre = 100
  pAcier = 10
  pBS = 3
}
if(uHache === 12){
  hBS = 95
  hPierre = 80
  hAcier = 13
  }
  if(uForeuse === 12){
    uDropPierre = Math.floor(Math.random() * 55) + 44;
    uDropAcier = Math.floor(Math.random() * 6) + 3;
    minageXP = Math.floor(Math.random() * 22) + 17;
    };
 if(uHache === 12){
    uDropSapin = Math.floor(Math.random() * 50) + 40;
    uDropXP = Math.floor(Math.random() * 21) + 16;
   };
if(uForeuse === 13){
  pPierre = 108
  pAcier = 12
  pBS = 19
}
if(uHache === 13){
  hBS = 100
  hPierre = 105
  hAcier = 15
  }
  if(uForeuse === 13){
    uDropPierre = Math.floor(Math.random() * 65) + 55;
    uDropAcier = Math.floor(Math.random() * 8) + 5;
    minageXP = Math.floor(Math.random() * 25) + 19;
    };
 if(uHache === 13){
    uDropSapin = Math.floor(Math.random() * 62) + 54;
    uDropXP = Math.floor(Math.random() * 23) + 18;
   };
if(uForeuse === 14){
  pPierre = 150
  pAcier = 25
  pBS = 38
}
if(uHache === 14){
  hBS = 110
  hPierre = 130
  hAcier = 23
  }
  if(uForeuse === 14){
    uDropPierre = Math.floor(Math.random() * 85) + 75;
    uDropAcier = Math.floor(Math.random() * 15) + 8;
    minageXP = Math.floor(Math.random() * 30) + 25;
    };
 if(uHache === 14){
    uDropSapin = Math.floor(Math.random() * 79) + 65;
    uDropXP = Math.floor(Math.random() * 28) + 22;
   };
if(uForeuse === 15){
  pPierre = 200
  pAcier = 30
  pBS = 55
}
if(uHache === 15){
  hBS = 125
  hPierre = 180
  hAcier = 26
  }
  if(uForeuse === 15){
    uDropPierre = Math.floor(Math.random() * 120) + 105;
    uDropAcier = Math.floor(Math.random() * 20) + 15;
    uDropFer = Math.floor(Math.random() * 2) + 0;
    minageXP = Math.floor(Math.random() * 30) + 26;
    };
 if(uHache === 15){
    uDropSapin = Math.floor(Math.random() * 90) + 80;
    uDropXP = Math.floor(Math.random() * 30) + 27;
   };
if(uForeuse === 16){
  pPierre = 320
  pAcier = 35
  pBS = 78
  pFer = 4
}
if(uHache === 16){
  hBS = 160
  hPierre = 236
  hAcier = 30
  hFer = 4
  }
  if(uForeuse === 16){
    uDropPierre = Math.floor(Math.random() * 160) + 150;
    uDropAcier = Math.floor(Math.random() * 32) + 20;
    uDropFer = Math.floor(Math.random() * 5) + 1;
    minageXP = Math.floor(Math.random() * 35) + 29;
    };
 if(uHache === 16){
    uDropSapin = Math.floor(Math.random() * 110) + 90;
    uDropXP = Math.floor(Math.random() * 32) + 29;
   };
if(uForeuse === 17){
  pPierre = 363
  pAcier = 41
  pBS = 98
  pFer = 5
}
if(uHache === 17){
  hBS = 180
  hPierre = 320
  hAcier = 42
  hFer = 8
  }
  if(uForeuse === 17){
    uDropPierre = Math.floor(Math.random() * 210) + 190;
    uDropAcier = Math.floor(Math.random() * 35) + 25;
    uDropFer = Math.floor(Math.random() * 8) + 3;
    minageXP = Math.floor(Math.random() * 38) + 32;
    };
 if(uHache === 17){
    uDropSapin = Math.floor(Math.random() * 120) + 100;
    uDropXP = Math.floor(Math.random() * 36) + 30;
   };
if(uForeuse === 18){
  pPierre = 417
  pAcier = 49
  pBS = 125
  pFer = 8
}
if(uHache === 18){
  hBS = 200
  hPierre = 450
  hAcier = 55
  hFer = 12
  }
  if(uForeuse === 18){
    uDropPierre = Math.floor(Math.random() * 250) + 225;
    uDropAcier = Math.floor(Math.random() * 40) + 30;
    uDropFer = Math.floor(Math.random() * 10) + 5;
    minageXP = Math.floor(Math.random() * 41) + 33;
    };
 if(uHache === 18){
    uDropSapin = Math.floor(Math.random() * 140) + 110;
    uDropXP = Math.floor(Math.random() * 40) + 33;
   };
if(uForeuse === 19){
  pPierre = 515
  pAcier = 55
  pBS = 150
  pFer = 12
}
if(uHache === 19){
  hBS = 230
  hPierre = 550
  hAcier = 85
  hFer = 18
  }
  if(uForeuse === 19){
    uDropPierre = Math.floor(Math.random() * 330) + 305;
    uDropAcier = Math.floor(Math.random() * 45) + 38;
    uDropFer = Math.floor(Math.random() * 12) + 6;
    minageXP = Math.floor(Math.random() * 42) + 35;
    };
 if(uHache === 19){
    uDropSapin = Math.floor(Math.random() * 160) + 140;
    uDropXP = Math.floor(Math.random() * 41) + 34;
   };
if(uForeuse === 20){
  pPierre = 756
  pAcier = 78
  pBS = 180
  pFer = 19
}
if(uHache === 20){
  hBS = 300
  hPierre = 850
  hAcier = 100
  hFer = 24
  }
  if(uForeuse === 20){
    uDropPierre = Math.floor(Math.random() * 450) + 425;
    uDropAcier = Math.floor(Math.random() * 55) + 44;
    uDropFer = Math.floor(Math.random() * 15) + 8;
    minageXP = Math.floor(Math.random() * 46) + 39;
    };
 if(uHache === 20){
    uDropSapin = Math.floor(Math.random() * 210) + 180;
    uDropBouleau = Math.floor(Math.random() * 2) + 1
    uDropXP = Math.floor(Math.random() * 43) + 36;
   };
if(uForeuse === 21){
  pPierre = 1000
  pAcier = 100
  pBS = 222
  pFer = 26
  pBBl = 2
}
if(uHache === 21){
  hBS = 400
  hPierre = 1100
  hAcier = 125
  hFer = 34
  hBBl = 3
  }
  if(uForeuse === 21){
    uDropPierre = Math.floor(Math.random() * 660) + 625;
    uDropAcier = Math.floor(Math.random() * 85) + 64;
    uDropFer = Math.floor(Math.random() * 23) + 16;
    minageXP = Math.floor(Math.random() * 50) + 43;
    };
 if(uHache === 21){
    uDropSapin = Math.floor(Math.random() * 250) + 210;
    uDropBouleau = Math.floor(Math.random() * 3) + 1;
    uDropXP = Math.floor(Math.random() * 49) + 42;
   };
if(uForeuse === 22){
  pPierre = 1300
  pAcier = 120
  pBS = 250
  pFer = 40
  pBBl = 4
}
if(uHache === 22){
  hBS = 600
  hPierre = 1400
  hAcier = 175
  hFer = 45
  hBBl = 8
  }
  if(uForeuse === 22){
    uDropPierre = Math.floor(Math.random() * 800) + 720;
    uDropAcier = Math.floor(Math.random() * 120) + 96;
    uDropFer = Math.floor(Math.random() * 30) + 22;
    minageXP = Math.floor(Math.random() * 52) + 45;
    };
 if(uHache === 22){
    uDropSapin = Math.floor(Math.random() * 333) + 300;
    uDropBouleau = Math.floor(Math.random() * 6) + 3;
    uDropXP = Math.floor(Math.random() * 51) + 44;
   };
if(uForeuse === 23){
  pPierre = 1600
  pAcier = 162
  pBS = 340
  pFer = 57
  pBBl = 7
}
if(uHache === 23){
  hBS = 700
  hPierre = 1800
  hAcier = 175
  hFer = 55
  hBBl = 16
  }
  if(uForeuse === 23){
    uDropPierre = Math.floor(Math.random() * 1200) + 1000;
    uDropAcier = Math.floor(Math.random() * 145) + 112;
    uDropFer = Math.floor(Math.random() * 39) + 30;
    minageXP = Math.floor(Math.random() * 58) + 50;
    };
 if(uHache === 23){
    uDropSapin = Math.floor(Math.random() * 450) + 390;
    uDropBouleau = Math.floor(Math.random() * 9) + 5;
    uDropXP = Math.floor(Math.random() * 53) + 46;
   };
if(uForeuse === 24){
  pPierre = 2250
  pAcier = 200
  pBS = 500
  pFer = 26
  pBBl = 15
}
if(uHache === 24){
  hBS = 800
  hPierre = 2300
  hAcier = 200
  hFer = 60
  hBBl = 20
  }
  if(uForeuse === 24){
    uDropPierre = Math.floor(Math.random() * 1600) + 1400;
    uDropAcier = Math.floor(Math.random() * 165) + 133;
    uDropFer = Math.floor(Math.random() * 43) + 36;
    minageXP = Math.floor(Math.random() * 61) + 55;
    };
 if(uHache === 24){
    uDropSapin = Math.floor(Math.random() * 625) + 450;
    uDropBouleau = Math.floor(Math.random() * 12) + 8;
    uDropXP = Math.floor(Math.random() * 63) + 56;
   };
if(uForeuse === 25){
  pPierre = 3100
  pAcier = 300
  pBS = 600
  pFer = 88
  pBBl = 22
}
if(uHache === 25){
  hBS = 1000
  hPierre = 4000
  hAcier = 320
  hFer = 75
  hBBl = 28
  hGold = 2
  }
  if(uForeuse === 25){
    uDropPierre = Math.floor(Math.random() * 2800) + 2500;
    uDropAcier = Math.floor(Math.random() * 215) + 184;
    uDropFer = Math.floor(Math.random() * 63) + 47;
    uDropOr = Math.floor(Math.random() * 2) + 0;
    minageXP = Math.floor(Math.random() * 67) + 60;
    };
 if(uHache === 25){
    uDropSapin = Math.floor(Math.random() * 725) + 550;
    uDropBouleau = Math.floor(Math.random() * 18) + 12;
    uDropXP = Math.floor(Math.random() * 68) + 61;
   };
if(uForeuse === 26){
  pPierre = 3900
  pAcier = 380
  pBS = 750
  pFer = 120
  pBBl = 30
  pGold = 3
}
if(uHache === 26){
  hBS = 1200
  hPierre = 4500
  hAcier = 350
  hFer = 110
  pBBl = 36
  hGold = 3
  }
  if(uForeuse === 26){
    uDropPierre = Math.floor(Math.random() * 3300) + 2800;
    uDropAcier = Math.floor(Math.random() * 255) + 220;
    uDropFer = Math.floor(Math.random() * 76) + 60;
    uDropOr = Math.floor(Math.random() * 3) + 0;
    minageXP = Math.floor(Math.random() * 70) + 62;
    };
 if(uHache === 26){
    uDropSapin = Math.floor(Math.random() * 800) + 670;
    uDropBouleau = Math.floor(Math.random() * 23) + 16;
    uDropXP = Math.floor(Math.random() * 69) + 61;
   };
if(uForeuse === 27){
  pPierre = 5000
  pAcier = 444
  pBS = 890
  pFer = 157
  hBBl = 39
  pGold = 7
}
if(uHache === 27){
  hBS = 1400
  hPierre = 5500
  hAcier = 489
  hFer = 200
  hBBl = 60
  hGold = 6
  }
  if(uForeuse === 27){
    uDropPierre = Math.floor(Math.random() * 4000) + 3300;
    uDropAcier = Math.floor(Math.random() * 325) + 280;
    uDropFer = Math.floor(Math.random() * 100) + 80;
    uDropOr = Math.floor(Math.random() * 6) + 1;
    minageXP = Math.floor(Math.random() * 75) + 66;
    };
 if(uHache === 27){
    uDropSapin = Math.floor(Math.random() * 1000) + 880;
    uDropBouleau = Math.floor(Math.random() * 30) + 20;
    uDropXP = Math.floor(Math.random() * 76) + 67;
   };
if(uForeuse === 28){
  pPierre = 6342
  pAcier = 529
  pBS = 1250
  pFer = 201
  pBBl = 58
  pGold = 12
}
if(uHache === 28){
  hBS = 1700
  hPierre = 6500
  hAcier = 568
  hFer = 238
  hBBl = 78
  hGold = 12
  }
  if(uForeuse === 28){
    uDropPierre = Math.floor(Math.random() * 4800) + 4300;
    uDropAcier = Math.floor(Math.random() * 405) + 350;
    uDropFer = Math.floor(Math.random() * 130) + 100;
    uDropOr = Math.floor(Math.random() * 8) + 3;
    minageXP = Math.floor(Math.random() * 76) + 68;
    };
 if(uHache === 28){
    uDropSapin = Math.floor(Math.random() * 1300) + 1180;
    uDropBouleau = Math.floor(Math.random() * 44) + 31;
    uDropXP = Math.floor(Math.random() * 77) + 69;
   };
if(uForeuse === 29){
  pPierre = 7500
  pAcier = 600
  pBS = 1650
  pFer = 300
  pBBl = 100
  pGold = 20
}
if(uHache === 29){
  hBS = 1900
  hPierre = 8000
  hAcier = 625
  hFer = 290
  hBBl = 120
  hGold = 18
  }
  if(uForeuse === 29){
    uDropPierre = Math.floor(Math.random() * 6400) + 5500;
    uDropAcier = Math.floor(Math.random() * 465) + 400;
    uDropFer = Math.floor(Math.random() * 210) + 140;
    uDropOr = Math.floor(Math.random() * 12) + 5;
    minageXP = Math.floor(Math.random() * 78) + 70;
    };
 if(uHache === 29){
    uDropSapin = Math.floor(Math.random() * 1500) + 1280;
    uDropBouleau = Math.floor(Math.random() * 66) + 52;
    uDropXP = Math.floor(Math.random() * 79) + 71;
   };
if(uForeuse === 30){
  pPierre = 8100
  pAcier = 700
  pBS = 2300
  pFer = 360
  pBBl = 125
  pGold = 25
}
if(uHache === 30){
  hBS = 2500
  hPierre = 8900
  hAcier = 850
  hFer = 438
  hBBl = 189
  hGold = 34
  }
  if(uForeuse === 30){
    uDropPierre = Math.floor(Math.random() * 6800) + 6100;
    uDropAcier = Math.floor(Math.random() * 575) + 480;
    uDropFer = Math.floor(Math.random() * 310) + 240;
    uDropOr = Math.floor(Math.random() * 17) + 9;
    minageXP = Math.floor(Math.random() * 80) + 72;
    };
 if(uHache === 30){
    uDropSapin = Math.floor(Math.random() * 1900) + 1630;
    uDropBouleau = Math.floor(Math.random() * 122) + 80;
    uDropXP = Math.floor(Math.random() * 81) + 73;
   };
if(uForeuse === 31){
  pPierre = 8888
  pAcier = 888
  pBS = 2800
  pFer = 444
  pBBl = 202
  pGold = 30
}
if(uHache === 31){
  hBS = 3400
  hPierre = 10000
  hAcier = 920
  hFer = 529
  hBBl = 236
  hGold = 45
  }
  if(uForeuse === 31){
    uDropPierre = Math.floor(Math.random() * 7700) + 6900;
    uDropAcier = Math.floor(Math.random() * 700) + 600;
    uDropFer = Math.floor(Math.random() * 400) + 290;
    uDropOr = Math.floor(Math.random() * 25) + 13;
    minageXP = Math.floor(Math.random() * 82) + 75;
    };
 if(uHache === 31){
    uDropSapin = Math.floor(Math.random() * 2600) + 2030;
    uDropBouleau = Math.floor(Math.random() * 157) + 120;
    uDropXP = Math.floor(Math.random() * 85) + 76;
   };
if(uForeuse === 32){
  pPierre = 10000
  pAcier = 1000
  pBS = 3500
  pFer = 525
  pBBl = 300
  pGold = 38
}
if(uHache === 32){
  hBS = 4000
  hPierre = 12000
  hAcier = 1050
  hFer = 670
  hBBl = 317
  hGold = 50
  }
  if(uForeuse === 32){
    uDropPierre = Math.floor(Math.random() * 8300) + 7200;
    uDropAcier = Math.floor(Math.random() * 800) + 650;
    uDropFer = Math.floor(Math.random() * 430) + 300;
    uDropOr = Math.floor(Math.random() * 29) + 16;
    minageXP = Math.floor(Math.random() * 86) + 79;
    };
 if(uHache === 32){
    uDropSapin = Math.floor(Math.random() * 3000) + 2400;
    uDropBouleau = Math.floor(Math.random() * 175) + 140;
    uDropXP = Math.floor(Math.random() * 89) + 82;
   };
if(uForeuse === 33){
  pPierre = 12000
  pAcier = 1200
  pBS = 4000
  pFer = 750
  pBBl = 450
  pGold = 45
}
if(uHache === 33){
  hBS = 5210
  hPierre = 15000
  hAcier = 1278
  hFer = 800
  hBBl = 487
  hGold = 67
  }
  if(uForeuse === 33){
    uDropPierre = Math.floor(Math.random() * 10000) + 9000;
    uDropAcier = Math.floor(Math.random() * 1000) + 900;
    uDropFer = Math.floor(Math.random() * 600) + 450;
    uDropOr = Math.floor(Math.random() * 32) + 20;
    minageXP = Math.floor(Math.random() * 91) + 84;
    };
 if(uHache === 33){
    uDropSapin = Math.floor(Math.random() * 3900) + 3000;
    uDropBouleau = Math.floor(Math.random() * 210) + 160;
    uDropXP = Math.floor(Math.random() * 93) + 85;
   };
if(uForeuse === 34){
  pPierre = 15000
  pAcier = 1500
  pBS = 4500
  pFer = 1000
  pBBl = 550
  pGold = 55
}
if(uHache === 34){
  hBS = 8000
  hPierre = 25000
  hAcier = 2200
  hFer = 1500
  hBBl = 900
  hGold = 100
  }
  if(uForeuse === 34){
    uDropPierre = Math.floor(Math.random() * 12000) + 10000;
    uDropAcier = Math.floor(Math.random() * 1200) + 1000;
    uDropFer = Math.floor(Math.random() * 700) + 640;
    uDropOr = Math.floor(Math.random() * 38) + 24;
    minageXP = Math.floor(Math.random() * 93) + 86;
    };
 if(uHache === 34){
    uDropSapin = Math.floor(Math.random() * 4200) + 3400;
    uDropBouleau = Math.floor(Math.random() * 340) + 260;
    uDropXP = Math.floor(Math.random() * 96) + 87;
   };
if(uForeuse === 35){
  pPierre = 20000
  pAcier = 2000
  pBS = 5000
  pFer = 1250
  pBBl = 550
  pGold = 75
}
if(uHache === 35){
  hBS = 8000
  hPierre = 30000
  hAcier = 2600
  hFer = 1800
  hBBl = 1200
  hGold = 120
  hP = 2
  }
  if(uForeuse === 35){
    uDropPierre = Math.floor(Math.random() * 13000) + 12000;
    uDropAcier = Math.floor(Math.random() * 1300) + 1200;
    uDropFer = Math.floor(Math.random() * 900) + 800;
    uDropOr = Math.floor(Math.random() * 42) + 30;
    uDropPla = Math.floor(Math.random() * 2) + 0;
    minageXP = Math.floor(Math.random() * 96) + 89;
    };
 if(uHache === 35){
    uDropSapin = Math.floor(Math.random() * 4800) + 3800;
    uDropBouleau = Math.floor(Math.random() * 500) + 300;
    uDropXP = Math.floor(Math.random() * 100) + 91;
   };
if(uForeuse === 36){
  pPierre = 25000
  pAcier = 2400
  pBS = 6000
  pFer = 1624
  pBBl = 763
  pGold = 98
  pP = 1
}
if(uHache === 36){
  hBS = 10000
  hPierre = 40000
  hAcier = 3000
  hFer = 2000
  hBBl = 1500
  hGold = 150
  hP = 3
  }
  if(uForeuse === 36){
    uDropPierre = Math.floor(Math.random() * 15000) + 14000;
    uDropAcier = Math.floor(Math.random() * 1500) + 1400;
    uDropFer = Math.floor(Math.random() * 1100) + 900;
    uDropOr = Math.floor(Math.random() * 52) + 40;
    uDropPla = Math.floor(Math.random() * 4) + 0;
    minageXP = Math.floor(Math.random() * 100) + 93;
    };
 if(uHache === 36){
    uDropSapin = Math.floor(Math.random() * 5000) + 4000;
    uDropBouleau = Math.floor(Math.random() * 600) + 400;
    uDropXP = Math.floor(Math.random() * 105) + 96;
   };
if(uForeuse === 37){
  pPierre = 30000
  pAcier = 2800
  pBS = 7000
  pFer = 2026
  pBBl = 900
  pGold = 123
  pP = 4
}
if(uHache === 37){
  hBS = 11000
  hPierre = 50000
  hAcier = 3300
  hFer = 2400
  hBBl = 1600
  hGold = 180
  hP = 5
  }
  if(uForeuse === 37){
    uDropPierre = Math.floor(Math.random() * 16000) + 15000;
    uDropAcier = Math.floor(Math.random() * 1600) + 1500;
    uDropFer = Math.floor(Math.random() * 1200) + 1000;
    uDropOr = Math.floor(Math.random() * 56) + 44;
    uDropPla = Math.floor(Math.random() * 6) + 0;
    minageXP = Math.floor(Math.random() * 105) + 96;
    };
 if(uHache === 37){
    uDropSapin = Math.floor(Math.random() * 5500) + 4400;
    uDropBouleau = Math.floor(Math.random() * 650) + 550;
    uDropXP = Math.floor(Math.random() * 108) + 99;
   };
if(uForeuse === 38){
  pPierre = 35000
  pAcier = 3200
  pBS = 8000
  pFer = 2400
  pBBl = 1200
  pGold = 150
  pP = 8
}
if(uHache === 38){
  hBS = 12000
  hPierre = 55000
  hAcier = 3800
  hFer = 2800
  hBBl = 1800
  hGold = 200
  hP = 7
  }
  if(uForeuse === 38){
    uDropPierre = Math.floor(Math.random() * 17000) + 16000;
    uDropAcier = Math.floor(Math.random() * 1700) + 1600;
    uDropFer = Math.floor(Math.random() * 1300) + 1100;
    uDropOr = Math.floor(Math.random() * 62) + 48;
    uDropPla = Math.floor(Math.random() * 8) + 1;
    minageXP = Math.floor(Math.random() * 115) + 90;
    };
 if(uHache === 38){
    uDropSapin = Math.floor(Math.random() * 5900) + 4800;
    uDropBouleau = Math.floor(Math.random() * 700) + 620;
    uDropXP = Math.floor(Math.random() * 125) + 100;
   };
if(uForeuse === 39){
  pPierre = 42000
  pAcier = 3800
  pBS = 10000
  pFer = 2800
  pBBl = 1700
  pGold = 188
  pP = 15
}
if(uHache === 39){
  hBS = 15000
  hPierre = 65000
  hAcier = 4500
  hFer = 3500
  hBBl = 2500
  hGold = 250
  hP = 15
  }
  if(uForeuse === 39){
    uDropPierre = Math.floor(Math.random() * 18000) + 17000;
    uDropAcier = Math.floor(Math.random() * 1800) + 1700;
    uDropFer = Math.floor(Math.random() * 1400) + 1200;
    uDropOr = Math.floor(Math.random() * 69) + 58;
    uDropPla = Math.floor(Math.random() * 10) + 2;
    minageXP = Math.floor(Math.random() * 130) + 95;
    };
 if(uHache === 39){
    uDropSapin = Math.floor(Math.random() * 6300) + 6100;
    uDropBouleau = Math.floor(Math.random() * 761) + 690;
    uDropXP = Math.floor(Math.random() * 135) + 105;
   };
if(uForeuse === 40){
  pPierre = 55555
  pAcier = 5555
  pBS = 11000
  pFer = 3500
  pBBl = 2800
  pGold = 342
  pP = 20
}
if(uHache === 40){
  hBS = 18000
  hPierre = 70000
  hAcier = 7000
  hFer = 4200
  hBBl = 3000
  hGold = 325
  hP = 25
  }
  if(uForeuse === 40){
    uDropPierre = Math.floor(Math.random() * 20000) + 18000;
    uDropAcier = Math.floor(Math.random() * 2000) + 1800;
    uDropFer = Math.floor(Math.random() * 1600) + 1400;
    uDropOr = Math.floor(Math.random() * 75) + 63;
    uDropPla = Math.floor(Math.random() * 12) + 3;
    minageXP = Math.floor(Math.random() * 135) + 100;
    };
 if(uHache === 40){
    uDropSapin = Math.floor(Math.random() * 6600) + 6300;
    uDropBouleau = Math.floor(Math.random() * 810) + 720;
    uDropXP = Math.floor(Math.random() * 145) + 125;
   };
if(uForeuse === 41){
  pPierre = 70000
  pAcier = 5000
  pBS = 12000
  pFer = 3000
  pBBl = 2000
  pGold = 300
  pP = 18
}
if(uHache === 41){
  hBS = 20000
  hPierre = 80000
  hAcier = 7000
  hFer = 4200
  hBBl = 3000
  hGold = 325
  hP = 25
  }
  if(uForeuse === 41){
    uDropPierre = Math.floor(Math.random() * 21000) + 19000;
    uDropAcier = Math.floor(Math.random() * 2100) + 1900;
    uDropFer = Math.floor(Math.random() * 1700) + 1500;
    uDropOr = Math.floor(Math.random() * 81) + 69;
    uDropPla = Math.floor(Math.random() * 13) + 5;
    minageXP = Math.floor(Math.random() * 150) + 130;
    };
 if(uHache === 41){
    uDropSapin = Math.floor(Math.random() * 7200) + 6900;
    uDropBouleau = Math.floor(Math.random() * 1200) + 900;
    uDropChene = Math.floor(Math.random() * 3) + 0;
    uDropXP = Math.floor(Math.random() * 180) + 150;
   };
if(uForeuse === 42){
  pPierre = 75000
  pAcier = 5000
  pBS = 15000
  pFer = 3000
  pBBl = 2000
  pGold = 300
  pP = 18
  pBC = 5
}
if(uHache === 42){
  hBS = 22000
  hPierre = 85000
  hAcier = 7200
  hFer = 4400
  hBBl = 3200
  hGold = 350
  hP = 30
  }
  if(uForeuse === 42){
    uDropPierre = Math.floor(Math.random() * 23000) + 21000;
    uDropAcier = Math.floor(Math.random() * 2300) + 2100;
    uDropFer = Math.floor(Math.random() * 1800) + 1600;
    uDropOr = Math.floor(Math.random() * 94) + 80;
    uDropPla = Math.floor(Math.random() * 15) + 6;
    minageXP = Math.floor(Math.random() * 180) + 150;
    };
 if(uHache === 42){
    uDropSapin = Math.floor(Math.random() * 7700) + 7200;
    uDropBouleau = Math.floor(Math.random() * 1500) + 1200;
    uDropChene = Math.floor(Math.random() * 5) + 0;
    uDropXP = Math.floor(Math.random() * 225) + 180;
   };
if(uForeuse === 43){
  pPierre = 88000
  pAcier = 6000
  pBS = 18000
  pFer = 4000
  pBBl = 3000
  pGold = 400
  pP = 28
  pBC = 10
}
if(uHache === 43){
  hBS = 25000
  hPierre = 90000
  hAcier = 7500
  hFer = 4800
  hBBl = 3600
  hGold = 410
  hP = 35
  }
  if(uForeuse === 43){
    uDropPierre = Math.floor(Math.random() * 25000) + 23000;
    uDropAcier = Math.floor(Math.random() * 2500) + 2300;
    uDropFer = Math.floor(Math.random() * 2000) + 1700;
    uDropOr = Math.floor(Math.random() * 102) + 88;
    uDropPla = Math.floor(Math.random() * 16) + 6;
    minageXP = Math.floor(Math.random() * 200) + 180;
    };
 if(uHache === 43){
    uDropSapin = Math.floor(Math.random() * 8300) + 7600;
    uDropBouleau = Math.floor(Math.random() * 1600) + 1400;
    uDropChene = Math.floor(Math.random() * 8) + 0;
    uDropXP = Math.floor(Math.random() * 275) + 210;
   };
if(uForeuse === 44){
  pPierre = 92000
  pAcier = 7000
  pBS = 20000
  pFer = 4000
  pBBl = 3000
  pGold = 500
  pP = 32
  pBC = 15
}
if(uHache === 44){
  hBS = 28000
  hPierre = 100000
  hAcier = 7800
  hFer = 5200
  hBBl = 3800
  hGold = 480
  hP = 40
  }
  if(uForeuse === 44){
    uDropPierre = Math.floor(Math.random() * 27000) + 25000;
    uDropAcier = Math.floor(Math.random() * 2700) + 2500;
    uDropFer = Math.floor(Math.random() * 2100) + 1800;
    uDropOr = Math.floor(Math.random() * 109) + 93;
    uDropPla = Math.floor(Math.random() * 19) + 8;
    minageXP = Math.floor(Math.random() * 219) + 199;
    };
 if(uHache === 44){
    uDropSapin = Math.floor(Math.random() * 8900) + 8700;
    uDropBouleau = Math.floor(Math.random() * 1700) + 1500;
    uDropChene = Math.floor(Math.random() * 7) + 1;
    uDropXP = Math.floor(Math.random() * 300) + 250;
   };
if(uForeuse === 45){
  pPierre = 100000
  pAcier = 6000
  pBS = 25000
  pFer = 4000
  pBBl = 3000
  pGold = 400
  pP = 28
  pBC = 20
  pDiam = 2
}
if(uHache === 45){
  hBS = 32000
  hPierre = 125000
  hAcier = 8000
  hFer = 5400
  hBBl = 4000
  hGold = 500
  hP = 45
  }
  if(uForeuse === 45){
    uDropPierre = Math.floor(Math.random() * 28000) + 26000;
    uDropAcier = Math.floor(Math.random() * 2800) + 2600;
    uDropFer = Math.floor(Math.random() * 2200) + 1900;
    uDropOr = Math.floor(Math.random() * 128) + 97;
    uDropPla = Math.floor(Math.random() * 20) + 9;
    uDropD = Math.floor(Math.random() * 2) + 0;
    minageXP = Math.floor(Math.random() * 250) + 210;
    };
 if(uHache === 45){
    uDropSapin = Math.floor(Math.random() * 9200) + 9050;
    uDropBouleau = Math.floor(Math.random() * 1800) + 1600;
    uDropChene = Math.floor(Math.random() * 9) + 2;
    uDropXP = Math.floor(Math.random() * 350) + 260;
   };
if(uForeuse === 46){
  pPierre = 120000
  pAcier = 7500
  pBS = 28000
  pFer = 5500
  pBBl = 4500
  pGold = 750
  pP = 50
  pBC = 30
  pDiam = 5
}
if(uHache === 46){
  hBS = 35000
  hPierre = 155000
  hAcier = 8500
  hFer = 6000
  hBBl = 4900
  hGold = 650
  hP = 50
  }
  if(uForeuse === 46){
    uDropPierre = Math.floor(Math.random() * 30000) + 28000;
    uDropAcier = Math.floor(Math.random() * 3000) + 2800;
    uDropFer = Math.floor(Math.random() * 2300) + 1960;
    uDropOr = Math.floor(Math.random() * 136) + 107;
    uDropPla = Math.floor(Math.random() * 20) + 10;
    uDropD = Math.floor(Math.random() * 5) + 1;
    minageXP = Math.floor(Math.random() * 290) + 230;
    };
 if(uHache === 46){
    uDropSapin = Math.floor(Math.random() * 9800) + 9300;
    uDropBouleau = Math.floor(Math.random() * 1900) + 1700;
    uDropChene = Math.floor(Math.random() * 10) + 3;
    uDropXP = Math.floor(Math.random() * 380) + 280;
   };
if(uForeuse === 47){
  pPierre = 140000
  pAcier = 9000
  pBS = 34000
  pFer = 6500
  pBBl = 5800
  pGold = 960
  pP = 55
  pBC = 46
  pDiam = 8
}
if(uHache === 47){
  hBS = 40000
  hPierre = 180000
  hAcier = 9300
  hFer = 7000
  hBBl = 5400
  hGold = 675
  hP = 55
  }
  if(uForeuse === 47){
    uDropPierre = Math.floor(Math.random() * 33000) + 31000;
    uDropAcier = Math.floor(Math.random() * 3100) + 2900;
    uDropFer = Math.floor(Math.random() * 2400) + 2100;
    uDropOr = Math.floor(Math.random() * 166) + 127;
    uDropPla = Math.floor(Math.random() * 22) + 11;
    uDropD = Math.floor(Math.random() * 6) + 1;
    minageXP = Math.floor(Math.random() * 310) + 260;
    };
 if(uHache === 47){
    uDropSapin = Math.floor(Math.random() * 10000) + 9700;
    uDropBouleau = Math.floor(Math.random() * 2000) + 1800;
    uDropChene = Math.floor(Math.random() * 12) + 4;
    uDropXP = Math.floor(Math.random() * 390) + 290;
   };
if(uForeuse === 48){
  pPierre = 160000
  pAcier = 10000
  pBS = 40000
  pFer = 7500
  pBBl = 6800
  pGold = 1160
  pP = 75
  pBC = 56
  pDiam = 13
}
if(uHache === 48){
  hBS = 45000
  hPierre = 200000
  hAcier = 11000
  hFer = 8000
  hBBl = 6800
  hGold = 825
  hP = 68
  hBC = 75
  hDiam = 15
  }
  if(uForeuse === 48){
    uDropPierre = Math.floor(Math.random() * 35000) + 33000;
    uDropAcier = Math.floor(Math.random() * 3300) + 3000;
    uDropFer = Math.floor(Math.random() * 2500) + 2110;
    uDropOr = Math.floor(Math.random() * 182) + 132;
    uDropPla = Math.floor(Math.random() * 23) + 12;
    uDropD = Math.floor(Math.random() * 8) + 2;
    minageXP = Math.floor(Math.random() * 325) + 280;
    };
 if(uHache === 48){
    uDropSapin = Math.floor(Math.random() * 11000) + 9900;
    uDropBouleau = Math.floor(Math.random() * 2100) + 1900;
    uDropChene = Math.floor(Math.random() * 15) + 6;
    uDropXP = Math.floor(Math.random() * 420) + 300;
   };
if(uForeuse === 49){
  pPierre = 180000
  pAcier = 12000
  pBS = 60000
  pFer = 8823
  pBBl = 7932
  pGold = 1345
  pP = 87
  pBC = 65
  pDiam = 16
}
if(uHache === 49){
  hBS = 60000
  hPierre = 220000
  hAcier = 13000
  hFer = 8800
  hBBl = 7500
  hGold = 1050
  hP = 100
  hBC = 80
  hDiam = 18
  }
  if(uForeuse === 49){
    uDropPierre = Math.floor(Math.random() * 37000) + 35000;
    uDropAcier = Math.floor(Math.random() * 3400) + 3100;
    uDropFer = Math.floor(Math.random() * 2600) + 2300;
    uDropOr = Math.floor(Math.random() * 200) + 150;
    uDropPla = Math.floor(Math.random() * 25) + 15;
    uDropD = Math.floor(Math.random() * 10) + 3;
    minageXP = Math.floor(Math.random() * 350) + 300;
    };
 if(uHache === 49){
    uDropSapin = Math.floor(Math.random() * 12000) + 10000;
    uDropBouleau = Math.floor(Math.random() * 2400) + 2100;
    uDropChene = Math.floor(Math.random() * 18) + 8;
    uDropXP = Math.floor(Math.random() * 470) + 340;
   };
if(uForeuse === 50){
  pPierre = 200000
  pAcier = 15000
  pBS = 75000
  pFer = 10001
  pBBl = 9243
  pGold = 1650
  pP = 100
  pBC = 85
  pDiam = 22
}
if(uHache === 50){
  hBS = 80000
  hPierre = 280000
  hAcier = 16000
  hFer = 10000
  hBBl = 9200
  hGold = 1750
  hP = 130
  hBC = 100
  hDiam = 23
  }
  if(uForeuse === 50){
    uDropPierre = Math.floor(Math.random() * 39000) + 36000;
    uDropAcier = Math.floor(Math.random() * 3500) + 3200;
    uDropFer = Math.floor(Math.random() * 2800) + 2500;
    uDropOr = Math.floor(Math.random() * 230) + 180;
    uDropPla = Math.floor(Math.random() * 29) + 18;
    uDropD = Math.floor(Math.random() * 13) + 4;
    minageXP = Math.floor(Math.random() * 400) + 350;
    };
 if(uHache === 50){
    uDropSapin = Math.floor(Math.random() * 18000) + 15000;
    uDropBouleau = Math.floor(Math.random() * 2900) + 2600;
    uDropChene = Math.floor(Math.random() * 25) + 12;
    uDropXP = Math.floor(Math.random() * 520) + 410;
   };
if(uForeuse === 51){
  pPierre = 230000 
  pAcier = 15400
  pBS = 90000
  pFer = 12032
  pBBl = 10300
  pGold = 1980
  pP = 112
  pBC = 94
  pDiam = 25
}
if(uHache === 51){
  hBS = 100000
  hPierre = 320000
  hAcier = 18000
  hFer = 13000
  hBBl = 10200
  hGold = 2100
  hP = 155
  hBC = 110
  hDiam = 28
  }
  if(uForeuse === 51){
    uDropPierre = Math.floor(Math.random() * 44000) + 40000;
    uDropAcier = Math.floor(Math.random() * 4500) + 4200;
    uDropFer = Math.floor(Math.random() * 3200) + 3000;
    uDropOr = Math.floor(Math.random() * 270) + 220;
    uDropPla = Math.floor(Math.random() * 32) + 21;
    uDropD = Math.floor(Math.random() * 15) + 5;
    minageXP = Math.floor(Math.random() * 420) + 370;
    };
 if(uHache === 51){
    uDropSapin = Math.floor(Math.random() * 22000) + 19000;
    uDropBouleau = Math.floor(Math.random() * 3300) + 2900;
    uDropChene = Math.floor(Math.random() * 31) + 16;
    uDropXP = Math.floor(Math.random() * 555) + 444;
   };
if(uForeuse === 52){
  pPierre = 250000
  pAcier = 16800
  pBS = 100000
  pFer = 13432
  pBBl = 11500
  pGold = 2230
  pP = 125
  pBC = 100
  pDiam = 32
}
if(uHache === 52){
  hBS = 130000
  hPierre = 350000
  hAcier = 20000
  hFer = 16000
  hBBl = 10200
  hGold = 2600
  hP = 180
  hBC = 133
  hDiam = 35
  }
  if(uForeuse === 52){
    uDropPierre = Math.floor(Math.random() * 49000) + 43000;
    uDropAcier = Math.floor(Math.random() * 5000) + 4800;
    uDropFer = Math.floor(Math.random() * 3700) + 3400;
    uDropOr = Math.floor(Math.random() * 350) + 280;
    uDropPla = Math.floor(Math.random() * 40) + 30;
    uDropD = Math.floor(Math.random() * 17) + 6;
    minageXP = Math.floor(Math.random() * 425) + 375;
    };
 if(uHache === 52){
    uDropSapin = Math.floor(Math.random() * 25000) + 23000;
    uDropBouleau = Math.floor(Math.random() * 3600) + 3400;
    uDropChene = Math.floor(Math.random() * 39) + 26;
    uDropXP = Math.floor(Math.random() * 565) + 454;
   };
if(uForeuse === 53){
  pPierre = 300000
  pAcier = 18400
  pBS = 115000
  pFer = 14900
  pBBl = 12300
  pGold = 2500
  pP = 150
  pBC = 115
  pDiam = 36
}
if(uHache === 53){
  hBS = 150000
  hPierre = 400000
  hAcier = 25000
  hFer = 19000
  hBBl = 15000
  hGold = 3000
  hP = 210
  hBC = 150
  hDiam = 43
  }
  if(uForeuse === 53){
    uDropPierre = Math.floor(Math.random() * 55000) + 53000;
    uDropAcier = Math.floor(Math.random() * 6000) + 5500;
    uDropFer = Math.floor(Math.random() * 4700) + 4400;
    uDropOr = Math.floor(Math.random() * 450) + 380;
    uDropPla = Math.floor(Math.random() * 50) + 40;
    uDropD = Math.floor(Math.random() * 20) + 10;
    minageXP = Math.floor(Math.random() * 570) + 550;
    };
 if(uHache === 53){
    uDropSapin = Math.floor(Math.random() * 30000) + 27000;
    uDropBouleau = Math.floor(Math.random() * 4600) + 4400;
    uDropChene = Math.floor(Math.random() * 49) + 36;
    uDropXP = Math.floor(Math.random() * 665) + 554;
   };
if(uForeuse === 54){
  pPierre = 400000
  pAcier = 25000
  pBS = 150000
  pFer = 18000
  pBBl = 16000
  pGold = 3500
  pP = 200
  pBC = 150
  pDiam = 43
}
if(uHache === 54){
  hBS = 180000
  hPierre = 500000
  hAcier = 30000
  hFer = 22000
  hBBl = 18000
  hGold = 4000
  hP = 240
  hBC = 190
  hDiam = 55
  }
    if(uForeuse === 54){
    uDropPierre = Math.floor(Math.random() * 75000) + 63000;
    uDropAcier = Math.floor(Math.random() * 9000) + 8500;
    uDropFer = Math.floor(Math.random() * 6700) + 6400;
    uDropOr = Math.floor(Math.random() * 850) + 690;
    uDropPla = Math.floor(Math.random() * 70) + 60;
    uDropD = Math.floor(Math.random() * 35) + 25;
    minageXP = Math.floor(Math.random() * 700) + 680;
    };
 if(uHache === 54){
    uDropSapin = Math.floor(Math.random() * 50000) + 40000;
    uDropBouleau = Math.floor(Math.random() * 6600) + 6400;
    uDropChene = Math.floor(Math.random() * 63) + 56;
    uDropXP = Math.floor(Math.random() * 795) + 700;
   };
if(uForeuse === 55){
  pPierre = 500000
  pAcier = 28000
  pBS = 180000
  pFer = 20000
  pBBl = 18000
  pGold = 3800
  pP = 220
  pBC = 150
  pDiam = 50
}
if(uHache === 55){
  hBS = 200000
  hPierre = 600000
  hAcier = 33000
  hFer = 25000
  hBBl = 20000
  hGold = 5000
  hP = 280
  hBC = 200
  hDiam = 65
  }
  if(uForeuse === 55){
    uDropPierre = Math.floor(Math.random() * 95000) + 93000;
    uDropAcier = Math.floor(Math.random() * 10000) + 9500;
    uDropFer = Math.floor(Math.random() * 7700) + 7400;
    uDropOr = Math.floor(Math.random() * 950) + 840;
    uDropPla = Math.floor(Math.random() * 80) + 60;
    uDropD = Math.floor(Math.random() * 31) + 28;
    minageXP = Math.floor(Math.random() * 750) + 690;
    };
 if(uHache === 55){
    uDropSapin = Math.floor(Math.random() * 60000) + 50000;
    uDropBouleau = Math.floor(Math.random() * 7000) + 6700;
    uDropChene = Math.floor(Math.random() * 70) + 58;
    uDropXP = Math.floor(Math.random() * 820) + 715;
   };

if(uForeuse === 56){
  pPierre = 600000
  pAcier = 30000
  pBS = 240000
  pFer = 25000
  pBBl = 22500
  pGold = 4500
  pP = 250
  pBC = 180
  pDiam = 60
}
if(uHache === 56){
  hBS = 270000
  hPierre = 800000
  hAcier = 40000
  hFer = 33000
  hBBl = 28000 
  hGold = 6200
  hP = 320
  hBC = 222
  hDiam = 75
  }
  if(uForeuse === 56){
    uDropPierre = Math.floor(Math.random() * 110000) + 100000;
    uDropAcier = Math.floor(Math.random() * 10000) + 9000;
    uDropFer = Math.floor(Math.random() * 8000) + 7500;
    uDropOr = Math.floor(Math.random() * 1100) + 900;
    uDropPla = Math.floor(Math.random() * 90) + 70;
    uDropD = Math.floor(Math.random() * 36) + 31;
    minageXP = Math.floor(Math.random() * 780) + 710;
    };
 if(uHache === 56){
    uDropSapin = Math.floor(Math.random() * 65000) + 55000;
    uDropBouleau = Math.floor(Math.random() * 7500) + 7000;
    uDropChene = Math.floor(Math.random() * 75) + 62;
    uDropXP = Math.floor(Math.random() * 850) + 750;
   };
if(uForeuse === 57){
  pPierre = 700000
  pAcier = 35000
  pBS = 300000
  pFer = 27000
  pBBl = 25000
  pGold = 5000
  pP = 300
  pBC = 220
  pDiam = 70
}
if(uHache === 57){
  hBS = 380000
  hPierre = 1000000
  hAcier = 50000
  hFer = 40000
  hBBl = 34000
  hGold = 7500
  hP = 380
  hBC = 280
  hDiam = 90
  }
  if(uForeuse === 57){
    uDropPierre = Math.floor(Math.random() * 150000) + 140000;
    uDropAcier = Math.floor(Math.random() * 11000) + 10000;
    uDropFer = Math.floor(Math.random() * 8500) + 7900;
    uDropOr = Math.floor(Math.random() * 1300) + 1100;
    uDropPla = Math.floor(Math.random() * 95) + 75;
    uDropD = Math.floor(Math.random() * 40) + 33;
    minageXP = Math.floor(Math.random() * 800) + 730;
    };
 if(uHache === 57){
    uDropSapin = Math.floor(Math.random() * 70000) + 60000;
    uDropBouleau = Math.floor(Math.random() * 8500) + 8000;
    uDropChene = Math.floor(Math.random() * 79) + 66;
    uDropXP = Math.floor(Math.random() * 880) + 780;
   };
if(uForeuse === 58){
  pPierre = 800000
  pAcier = 40000
  pBS = 325000
  pFer = 32000
  pBBl = 30000
  pGold = 6000
  pP = 370
  pBC = 250
  pDiam = 80
}
if(uHache === 58){
  hBS = 450000
  hPierre = 1300000
  hAcier = 60000
  hFer = 50000
  hBBl = 40000
  hGold = 8500
  hP = 430
  hBC = 320
  hDiam = 115
  }
  if(uForeuse === 58){
    uDropPierre = Math.floor(Math.random() * 200000) + 170000;
    uDropAcier = Math.floor(Math.random() * 15000) + 13000;
    uDropFer = Math.floor(Math.random() * 9800) + 9200;
    uDropOr = Math.floor(Math.random() * 1700) + 1400;
    uDropPla = Math.floor(Math.random() * 105) + 82;
    uDropD = Math.floor(Math.random() * 45) + 42;
    minageXP = Math.floor(Math.random() * 825) + 750;
    };
 if(uHache === 58){
    uDropSapin = Math.floor(Math.random() * 75000) + 69000;
    uDropBouleau = Math.floor(Math.random() * 9200) + 8700;
    uDropChene = Math.floor(Math.random() * 82) + 73;
    uDropXP = Math.floor(Math.random() * 900) + 810;
   };
if(uForeuse === 59){
  pPierre = 1000000
  pAcier = 50000
  pBS = 450000
  pFer = 40000
  pBBl = 35000
  pGold = 7500
  pP = 422
  pBC = 320
  pDiam = 100
}
if(uHache === 59){
  hBS = 550000
  hPierre = 1800000
  hAcier = 100000
  hFer = 80000
  hBBl = 60000
  hGold = 12500
  hP = 600
  hBC = 430
  hDiam = 150
  }
  if(uForeuse === 59){
    uDropPierre = Math.floor(Math.random() * 300000) + 200000;
    uDropAcier = Math.floor(Math.random() * 20000) + 18000;
    uDropFer = Math.floor(Math.random() * 12000) + 10000;
    uDropOr = Math.floor(Math.random() * 2000) + 1800;
    uDropPla = Math.floor(Math.random() * 125) + 102;
    uDropD = Math.floor(Math.random() * 49) + 46;
    minageXP = Math.floor(Math.random() * 850) + 780;
    };
 if(uHache === 59){
    uDropSapin = Math.floor(Math.random() * 95000) + 79000;
    uDropBouleau = Math.floor(Math.random() * 10200) + 9700;
    uDropChene = Math.floor(Math.random() * 99) + 83;
    uDropXP = Math.floor(Math.random() * 930) + 840;
   };
if(uForeuse === 60){
  pPierre = 1200000
  pAcier = 60000
  pBS = 500000
  pFer = 50000
  pBBl = 45000
  pGold = 9000
  pP = 450
  pBC = 380
  pDiam = 120
}
if(uHache === 60){
  hBS = 650000
  hPierre = 2000000
  hAcier = 120000
  hFer = 90000
  hBBl = 70000
  hGold = 13500
  hP = 700
  hBC = 500
  hDiam = 180
  }
  if(uForeuse === 60){
    uDropPierre = Math.floor(Math.random() * 400000) + 300000;
    uDropAcier = Math.floor(Math.random() * 25000) + 21000;
    uDropFer = Math.floor(Math.random() * 15000) + 13000;
    uDropOr = Math.floor(Math.random() * 2500) + 2100;
    uDropPla = Math.floor(Math.random() * 155) + 122;
    uDropD = Math.floor(Math.random() * 55) + 49;
    minageXP = Math.floor(Math.random() * 875) + 800;
    };
 if(uHache === 60){
    uDropSapin = Math.floor(Math.random() * 105000) + 99000;
    uDropBouleau = Math.floor(Math.random() * 12400) + 11000;
    uDropChene = Math.floor(Math.random() * 105) + 87;
    uDropXP = Math.floor(Math.random() * 960) + 870;
   };
if(uForeuse === 61){
  pPierre = 1400000
  pAcier = 65000
  pBS = 650000
  pFer = 55000
  pBBl = 50000
  pGold = 10000
  pP = 500
  pBC = 450
  pDiam = 146
}
if(uHache === 61){
  hBS = 750000
  hPierre = 3000000
  hAcier = 140000
  hFer = 110000
  hBBl = 80000
  hGold = 15000
  hP = 800
  hBC = 650
  hDiam = 200
  }
  if(uForeuse === 61){
    uDropPierre = Math.floor(Math.random() * 450000) + 350000;
    uDropAcier = Math.floor(Math.random() * 30000) + 26000;
    uDropFer = Math.floor(Math.random() * 19000) + 16000;
    uDropOr = Math.floor(Math.random() * 2900) + 2600;
    uDropPla = Math.floor(Math.random() * 175) + 150;
    uDropD = Math.floor(Math.random() * 59) + 52;
    minageXP = Math.floor(Math.random() * 900) + 820;
    };
 if(uHache === 61){
    uDropSapin = Math.floor(Math.random() * 120000) + 100000;
    uDropBouleau = Math.floor(Math.random() * 14600) + 13000;
    uDropChene = Math.floor(Math.random() * 115) + 93;
    uDropXP = Math.floor(Math.random() * 1000) + 900;
   };
if(uForeuse === 62){
  pPierre = 2000000
  pAcier = 80000
  pBS = 750000
  pFer = 65000
  pBBl = 60000
  pGold = 11000
  pP = 550
  pBC = 500
  pDiam = 156
}
if(uHache === 62){
  hBS = 950000
  hPierre = 5000000
  hAcier = 180000
  hFer = 145000
  hBBl = 120000
  hGold = 18000
  hP = 1000
  hBC = 790
  hDiam = 250
  }
  if(uForeuse === 62){
    uDropPierre = Math.floor(Math.random() * 520000) + 450000;
    uDropAcier = Math.floor(Math.random() * 40000) + 33000;
    uDropFer = Math.floor(Math.random() * 22000) + 19000;
    uDropOr = Math.floor(Math.random() * 3500) + 3000;
    uDropPla = Math.floor(Math.random() * 195) + 170;
    uDropD = Math.floor(Math.random() * 65) + 58;
    minageXP = Math.floor(Math.random() * 950) + 850;
    };
 if(uHache === 62){
    uDropSapin = Math.floor(Math.random() * 160000) + 120000;
    uDropBouleau = Math.floor(Math.random() * 17000) + 15000;
    uDropChene = Math.floor(Math.random() * 155) + 123;
    uDropXP = Math.floor(Math.random() * 1200) + 1000;
   };
if(uForeuse === 63){
  pPierre = 3000000
  pAcier = 90000
  pBS = 850000
  pFer = 75000
  pBBl = 70000
  pGold = 12000
  pP = 600
  pBC = 560
  pDiam = 170
}
if(uHache === 63){
  hBS = 1250000
  hPierre = 7000000
  hAcier = 250000
  hFer = 180000
  hBBl = 140000
  hGold = 22000
  hP = 1300
  hBC = 1090
  hDiam = 310
  }
  if(uForeuse === 63){
    uDropPierre = Math.floor(Math.random() * 600000) + 500000;
    uDropAcier = Math.floor(Math.random() * 45000) + 35000;
    uDropFer = Math.floor(Math.random() * 25000) + 22000;
    uDropOr = Math.floor(Math.random() * 4300) + 3600;
    uDropPla = Math.floor(Math.random() * 222) + 190;
    uDropD = Math.floor(Math.random() * 75) + 68;
    minageXP = Math.floor(Math.random() * 1000) + 920;
    };
 if(uHache === 63){
    uDropSapin = Math.floor(Math.random() * 230000) + 180000;
    uDropBouleau = Math.floor(Math.random() * 22000) + 19000;
    uDropChene = Math.floor(Math.random() * 185) + 150;
    uDropXP = Math.floor(Math.random() * 1250) + 1050;
   };
if(uForeuse === 64){
  pPierre = 5000000
  pAcier = 115000
  pBS = 1100000
  pFer = 105000
  pBBl = 100000
  pGold = 15000
  pP = 800
  pBC = 700
  pDiam = 220
}
if(uHache === 64){
  hBS = 2000000
  hPierre = 10000000
  hAcier = 350000
  hFer = 280000
  hBBl = 250000
  hGold = 30000
  hP = 1600
  hBC = 1300
  hDiam = 400
  }
  if(uForeuse === 64){
    uDropPierre = Math.floor(Math.random() * 800000) + 700000;
    uDropAcier = Math.floor(Math.random() * 55000) + 45000;
    uDropFer = Math.floor(Math.random() * 35000) + 29000;
    uDropOr = Math.floor(Math.random() * 6300) + 5600;
    uDropPla = Math.floor(Math.random() * 400) + 270;
    uDropD = Math.floor(Math.random() * 85) + 72;
    minageXP = Math.floor(Math.random() * 1100) + 1000;
    };
 if(uHache === 64){
    uDropSapin = Math.floor(Math.random() * 350000) + 310000;
    uDropBouleau = Math.floor(Math.random() * 30000) + 23000;
    uDropChene = Math.floor(Math.random() * 245) + 190;
    uDropXP = Math.floor(Math.random() * 1350) + 1150;
   };
if(uForeuse === 65){
  pPierre = 8000000
  pAcier = 125000
  pBS = 1200000
  pFer = 115000
  pBBl = 110000
  pGold = 16000
  pP = 900
  pBC = 820
  pDiam = 250
  pPluto = 5
  pBCab = 3
}
if(uHache === 65){
  hBS = 2500000
  hPierre = 13000000
  hAcier = 430000
  hFer = 380000
  hBBl = 300000
  hGold = 35000
  hP = 1800
  hBC = 1500
  hDiam = 500
  hPluto = 2
  hBCab = 2
  }
  if(uForeuse === 65){
    uDropPierre = Math.floor(Math.random() * 1000000) + 900000;
    uDropAcier = Math.floor(Math.random() * 62000) + 55000;
    uDropFer = Math.floor(Math.random() * 45000) + 38000;
    uDropOr = Math.floor(Math.random() * 7400) + 6600;
    uDropPla = Math.floor(Math.random() * 450) + 380;
    uDropD = Math.floor(Math.random() * 90) + 77;
    uDropPt = Math.floor(Math.random()*2)+0;
    minageXP = Math.floor(Math.random() * 1190) + 1100;
    };
 if(uHache === 65){
    uDropSapin = Math.floor(Math.random() * 400000) + 350000;
    uDropBouleau = Math.floor(Math.random() * 35000) + 30000;
    uDropChene = Math.floor(Math.random() * 325) + 230;
    uDropCab = Math.floor(Math.random() * 2) + 0;
    uDropXP = Math.floor(Math.random() * 1450) + 1250;
   };
if(uForeuse === 66){
  pPierre = 10000000
  pAcier = 135000
  pBS = 1300000
  pFer = 125000
  pBBl = 120000
  pGold = 17000
  pP = 1000
  pBC = 930
  pDiam = 300
  pPluto = 7
  pBCab = 5
}
if(uHache === 66){
  hBS = 3000000
  hPierre = 18000000
  hAcier = 500000
  hFer = 450000
  hBBl = 380000
  hGold = 40000
  hP = 2200
  hBC = 1900
  hDiam = 700
  hPluto = 6
  hBCab = 4
  }
  if(uForeuse === 66){
    uDropPierre = Math.floor(Math.random() * 3000000) + 1500000;
    uDropAcier = Math.floor(Math.random() * 73000) + 65000;
    uDropFer = Math.floor(Math.random() * 55000) + 48000;
    uDropOr = Math.floor(Math.random() * 8400) + 7600;
    uDropPla = Math.floor(Math.random() * 490) + 460;
    uDropD = Math.floor(Math.random() * 115) + 96;
    uDropPt = Math.floor(Math.random() * 2) + 0;
    minageXP = Math.floor(Math.random() * 1222) + 1111;
    };
 if(uHache === 66){
    uDropSapin = Math.floor(Math.random() * 460000) + 420000;
    uDropBouleau = Math.floor(Math.random() * 55000) + 45000;
    uDropChene = Math.floor(Math.random() * 425) + 330;
    uDropCab = Math.floor(Math.random() * 2) + 0;
    uDropXP = Math.floor(Math.random() * 1650) + 1350;
   };
if(uForeuse === 67){
  pPierre = 15000000
  pAcier = 150000
  pBS = 1500000
  pFer = 140000
  pBBl = 135000
  pGold = 18000
  pP = 1200
  pBC = 1100
  pDiam = 400
  pPluto = 10
  pBCab = 8
}
if(uHache === 67){
  hBS = 4000000
  hPierre = 20000000
  hAcier = 800000
  hFer = 650000
  hBBl = 480000
  hGold = 50000
  hP = 2500
  hBC = 2200
  hDiam = 800
  hPluto = 10
  hBCab = 7
  }
  if(uForeuse === 67){
    uDropPierre = Math.floor(Math.random() * 4000000) + 2500000;
    uDropAcier = Math.floor(Math.random() * 85000) + 75000;
    uDropFer = Math.floor(Math.random() * 65000) + 55000;
    uDropOr = Math.floor(Math.random() * 9500) + 8700;
    uDropPla = Math.floor(Math.random() * 520) + 480;
    uDropD = Math.floor(Math.random() * 145) + 116;
    uDropPt = Math.floor(Math.random() * 4) + 0;
    minageXP = Math.floor(Math.random() * 1400) + 1300;
    };
 if(uHache === 67){
    uDropSapin = Math.floor(Math.random() * 570000) + 490000;
    uDropBouleau = Math.floor(Math.random() * 65000) + 55000;
    uDropChene = Math.floor(Math.random() * 475) + 360;
    uDropCab = Math.floor(Math.random() * 4) + 0;
    uDropXP = Math.floor(Math.random() * 1790) + 1570;
   };
if(uForeuse === 68){
  pPierre = 20000000
  pAcier = 171000
  pBS = 1659878
  pFer = 158982
  pBBl = 154483
  pGold = 20123
  pP = 1412
  pBC = 1265
  pDiam = 413
  pPluto = 15
  pBCab = 12
}
if(uHache === 68){
  hBS = 5000000
  hPierre = 28000000
  hAcier = 1000000
  hFer = 850000
  hBBl = 680000
  hGold = 60000
  hP = 2800
  hBC = 2500
  hDiam = 900
  hPluto = 17
  hBCab = 12
  }
  if(uForeuse === 68){
    uDropPierre = Math.floor(Math.random() * 5000000) + 3500000;
    uDropAcier = Math.floor(Math.random() * 95000) + 85000;
    uDropFer = Math.floor(Math.random() * 75000) + 65000;
    uDropOr = Math.floor(Math.random() * 10500) + 9700;
    uDropPla = Math.floor(Math.random() * 570) + 520;
    uDropD = Math.floor(Math.random() * 165) + 126;
    uDropPt = Math.floor(Math.random() * 6) + 0;
    minageXP = Math.floor(Math.random() * 1600) + 1400;
    };
 if(uHache === 68){
    uDropSapin = Math.floor(Math.random() * 600000) + 500000;
    uDropBouleau = Math.floor(Math.random() * 70000) + 60000;
    uDropChene = Math.floor(Math.random() * 575) + 470;
    uDropCab = Math.floor(Math.random() * 5) + 0;
    uDropXP = Math.floor(Math.random() * 1900) + 1690;
   };
if(uForeuse === 69){
  pPierre = 30000000
  pAcier = 250000
  pBS = 2500000
  pFer = 200000
  pBBl = 195000
  pGold = 30000
  pP = 1750
  pBC = 1575
  pDiam = 650
  pPluto = 30
  pBCab = 25
}
if(uHache === 69){
  hBS = 10000000
  hPierre = 38000000
  hAcier = 2500000
  hFer = 1100000
  hBBl = 900000
  hGold = 80000
  hP = 3400
  hBC = 2900
  hDiam = 1000
  hPluto = 25
  hBCab = 22
  }
  if(uForeuse === 69){
    uDropPierre = Math.floor(Math.random() * 6000000) + 4500000;
    uDropAcier = Math.floor(Math.random() * 100000) + 90000;
    uDropFer = Math.floor(Math.random() * 85000) + 75000;
    uDropOr = Math.floor(Math.random() * 12500) + 10500;
    uDropPla = Math.floor(Math.random() * 610) + 540;
    uDropD = Math.floor(Math.random() * 195) + 156;
    uDropPt = Math.floor(Math.random() * 10) + 1;
    minageXP = Math.floor(Math.random() * 1800) + 1600;
    };
 if(uHache === 69){
    uDropSapin = Math.floor(Math.random() * 1000000) + 800000;
    uDropBouleau = Math.floor(Math.random() * 90000) + 78000;
    uDropChene = Math.floor(Math.random() * 675) + 570;
    uDropCab = Math.floor(Math.random() * 7) + 0;
    uDropXP = Math.floor(Math.random() * 2000) + 1780;
   };
if(uForeuse === 70){
  pPierre = 50000000
  pAcier = 350000
  pBS = 3500000
  pFer = 300000
  pBBl = 295000
  pGold = 35000
  pP = 2000
  pBC = 1900
  pDiam = 788
  pPluto = 40
  pBCab = 38
  pPN = 2
}
if(uHache === 70){
  hBS = 13000000
  hPierre = 50000000
  hAcier = 5000000
  hFer = 2800000
  hBBl = 2000000
  hGold = 90000
  hP = 3600
  hBC = 3200
  hDiam = 1500
  hPluto = 38
  hBCab = 36
  hPN = 2
  }
  if(uForeuse === 70){
    uDropPierre = Math.floor(Math.random() * 9000000) + 7500000;
    uDropAcier = Math.floor(Math.random() * 500000) + 300000;
    uDropFer = Math.floor(Math.random() * 285000) + 175000;
    uDropOr = Math.floor(Math.random() * 16500) + 14500;
    uDropPla = Math.floor(Math.random() * 670) + 600;
    uDropD = Math.floor(Math.random() * 255) + 196;
    uDropPt = Math.floor(Math.random() * 13) + 2;
    uDropPN = Math.floor(Math.random() * 2) + 0;
    minageXP = Math.floor(Math.random() * 2000) + 1800;
    };
 if(uHache === 70){
    uDropSapin = Math.floor(Math.random() * 1500000) + 1200000;
    uDropBouleau = Math.floor(Math.random() * 150000) + 100000;
    uDropChene = Math.floor(Math.random() * 705) + 580;
    uDropCab = Math.floor(Math.random() * 8) + 0;
    uDropXP = Math.floor(Math.random() * 2200) + 1980;
   };
if(uForeuse === 71){
  pPierre = 75000000
  pAcier = 500000
  pBS = 5000000
  pFer = 450000
  pBBl = 405000
  pGold = 40000
  pP = 2500
  pBC = 2200
  pDiam = 888
  pPluto = 55
  pBCab = 43
  pPN = 3
}
if(uHache === 71){
  hBS = 17000000
  hPierre = 100000000
  hAcier = 5000000
  hFer = 2800000
  hBBl = 2000000
  hGold = 90000
  hP = 3600
  hBC = 3200
  hDiam = 2000
  hPluto = 50
  hBCab = 50
  hPN = 5
  }
  if(uForeuse === 71){
    uDropPierre = Math.floor(Math.random() * 10000000) + 8500000;
    uDropAcier = Math.floor(Math.random() * 600000) + 400000;
    uDropFer = Math.floor(Math.random() * 300000) + 200000;
    uDropOr = Math.floor(Math.random() * 19500) + 17500;
    uDropPla = Math.floor(Math.random() * 750) + 620;
    uDropD = Math.floor(Math.random() * 315) + 255;
    uDropPt = Math.floor(Math.random() * 16) + 3;
    uDropPN = Math.floor(Math.random() * 2) + 0;
    minageXP = Math.floor(Math.random() * 2500) + 2200;
    };
 if(uHache === 71){
    uDropSapin = Math.floor(Math.random() * 1800000) + 1600000;
    uDropBouleau = Math.floor(Math.random() * 200000) + 150000;
    uDropChene = Math.floor(Math.random() * 755) + 600;
    uDropCab = Math.floor(Math.random() * 9) + 0;
    uDropXP = Math.floor(Math.random() * 2800) + 2400;
   };
if(uForeuse === 72){
  pPierre = 99999999
  pAcier = 999999
  pBS = 7000000
  pFer = 666666
  pBBl = 666666
  pGold = 44444
  pP = 3333
  pBC = 3333
  pDiam = 999
  pPluto = 77
  pBCab = 66
  pPN = 5
}
if(uHache === 72){
  hBS = 25000000
  hPierre = 150000000
  hAcier = 10000000
  hFer = 3800000
  hBBl = 3000000
  hGold = 120000
  hP = 4000
  hBC = 3900
  hDiam = 2500
  hPluto = 65
  hBCab = 60
  hPN = 7
  }
  if(uForeuse === 72){
    uDropPierre = Math.floor(Math.random() * 13000000) + 10500000;
    uDropAcier = Math.floor(Math.random() * 800000) + 600000;
    uDropFer = Math.floor(Math.random() * 380000) + 340000;
    uDropOr = Math.floor(Math.random() * 23500) + 20500;
    uDropPla = Math.floor(Math.random() * 800) + 680;
    uDropD = Math.floor(Math.random() * 365) + 285;
    uDropPt = Math.floor(Math.random() * 20) + 5;
    uDropPN = Math.floor(Math.random() * 3) + 0;
    minageXP = Math.floor(Math.random() * 2800) + 2500;
    };
 if(uHache === 72){
    uDropSapin = Math.floor(Math.random() * 2600000) + 2000000;
    uDropBouleau = Math.floor(Math.random() * 400000) + 300000;
    uDropChene = Math.floor(Math.random() * 800) + 680;
    uDropCab = Math.floor(Math.random() * 10) + 0;
    uDropXP = Math.floor(Math.random() * 3200) + 2700;
   };
if(uForeuse === 73){
  pPierre = 120000000
  pAcier = 1000000
  pBS = 9000000
  pFer = 850000
  pBBl = 752000
  pGold = 45000
  pP = 3500
  pBC = 3400
  pDiam = 1000
  pPluto = 80
  pBCab = 70
  pPN = 7
}
if(uHache === 73){
  hBS = 55000000
  hPierre = 500000000
  hAcier = 30000000
  hFer = 20000000
  hBBl = 18000000
  hGold = 150000
  hP = 7000
  hBC = 6700
  hDiam = 5000
  hPluto = 120
  hBCab = 70
  hPN = 12
  }
  if(uForeuse === 73){
    uDropPierre = Math.floor(Math.random() * 15000000) + 14000000;
    uDropAcier = Math.floor(Math.random() * 1200000) + 1000000;
    uDropFer = Math.floor(Math.random() * 780000) + 640000;
    uDropOr = Math.floor(Math.random() * 28500) + 24500;
    uDropPla = Math.floor(Math.random() * 850) + 720;
    uDropD = Math.floor(Math.random() * 435) + 385;
    uDropPt = Math.floor(Math.random() * 25) + 6;
    uDropPN = Math.floor(Math.random() * 4) + 0;
    minageXP = Math.floor(Math.random() * 3400) + 3200;
    };
 if(uHache === 73){
    uDropSapin = Math.floor(Math.random() * 15600000) + 15000000;
    uDropBouleau = Math.floor(Math.random() * 1400000) + 1300000;
    uDropChene = Math.floor(Math.random() * 2200) + 1600;
    uDropCab = Math.floor(Math.random() * 11) + 0;
    uDropXP = Math.floor(Math.random() * 5000) + 4500;
   };
if(uForeuse === 74){
  pPierre = 200000000
  pAcier = 1500000
  pBS = 15000000
  pFer = 1200000
  pBBl = 1000000
  pGold = 50000
  pP = 4000
  pBC = 3800
  pDiam = 1200
  pPluto = 100
  pBCab = 70
  pPN = 10
}
if(uForeuse === 74){
  uDropPierre = Math.floor(Math.random() * 17000000) + 16000000;
  uDropAcier = Math.floor(Math.random() * 1500000) + 1200000;
  uDropFer = Math.floor(Math.random() * 830000) + 770000;
  uDropOr = Math.floor(Math.random() * 28500) + 24500;
  uDropPla = Math.floor(Math.random() * 890) + 820;
  uDropD = Math.floor(Math.random() * 500) + 445;
  uDropPt = Math.floor(Math.random() * 30) + 7;
  uDropPN = Math.floor(Math.random() * 7) + 0;
  minageXP = Math.floor(Math.random() * 3600) + 3400;
  };
if(uForeuse === 75){
  pPierre = 300000000
  pAcier = 10000000
  pBS = 20000000
  pFer = 1850000
  pBBl = 1758000
  pGold = 55000
  pP = 4500
  pBC = 4000
  pDiam = 1450
  pPluto = 130
  pBCab = 70
  pPN = 15
}
if(uForeuse === 75){
  uDropPierre = Math.floor(Math.random() * 28000000) + 26000000;
  uDropAcier = Math.floor(Math.random() * 1800000) + 1600000;
  uDropFer = Math.floor(Math.random() * 850000) + 790000;
  uDropOr = Math.floor(Math.random() * 30500) + 25500;
  uDropPla = Math.floor(Math.random() * 950) + 720;
  uDropD = Math.floor(Math.random() * 515) + 455;
  uDropPt = Math.floor(Math.random() * 35) + 7;
  uDropPN = Math.floor(Math.random() * 8) + 0;
  minageXP = Math.floor(Math.random() * 3700) + 3600;
  };
if(uForeuse === 76){
  pPierre = 500000000
  pAcier = 20000000
  pBS = 30000000
  pFer = 5850000
  pBBl = 2800000
  pGold = 75000
  pP = 5500
  pBC = 4000
  pDiam = 1950
  pPluto = 160
  pBCab = 70
  pPN = 20
}
if(uForeuse === 76){
  uDropPierre = Math.floor(Math.random() * 33000000) + 29000000;
  uDropAcier = Math.floor(Math.random() * 1900000) + 1800000;
  uDropFer = Math.floor(Math.random() * 890000) + 820000;
  uDropOr = Math.floor(Math.random() * 36500) + 29500;
  uDropPla = Math.floor(Math.random() * 1000) + 840;
  uDropD = Math.floor(Math.random() * 565) + 495;
  uDropPt = Math.floor(Math.random() * 40) + 9;
  uDropPN = Math.floor(Math.random() * 8) + 0;
  minageXP = Math.floor(Math.random() * 3900) + 3700;
  };
if(uForeuse === 77){
  pPierre = 800000000
  pAcier = 35000000
  pBS = 45000000
  pFer = 9500000
  pBBl = 3200000
  pGold = 95000
  pP = 7500
  pBC = 6000
  pDiam = 2500
  pPluto = 200
  pBCab = 75
  pPN = 27
}
if(uForeuse === 77){
  uDropPierre = Math.floor(Math.random() * 39000000) + 36000000;
  uDropAcier = Math.floor(Math.random() * 2300000) + 2100000;
  uDropFer = Math.floor(Math.random() * 950000) + 880000;
  uDropOr = Math.floor(Math.random() * 38500) + 34500;
  uDropPla = Math.floor(Math.random() * 1100) + 900;
  uDropD = Math.floor(Math.random() * 645) + 525;
  uDropPt = Math.floor(Math.random() * 45) + 11;
  uDropPN = Math.floor(Math.random() * 9) + 0;
  minageXP = Math.floor(Math.random() * 4400) + 4300;
  };
if(uForeuse === 78){
  pPierre = 1000000000
  pAcier = 45000000
  pBS = 80000000
  pFer = 25000000
  pBBl = 5000000
  pGold = 205000
  pP = 9500
  pBC = 7500
  pDiam = 4500
  pPluto = 400
  pBCab = 80
  pPN = 35
}
if(uForeuse === 78){
  uDropPierre = Math.floor(Math.random() * 55000000) + 46000000;
  uDropAcier = Math.floor(Math.random() * 2800000) + 2500000;
  uDropFer = Math.floor(Math.random() * 1690000) + 1580000;
  uDropOr = Math.floor(Math.random() * 39500) + 35500;
  uDropPla = Math.floor(Math.random() * 1300) + 1000;
  uDropD = Math.floor(Math.random() * 675) + 555;
  uDropPt = Math.floor(Math.random() * 50) + 12;
  uDropPN = Math.floor(Math.random() * 10) + 0;
  minageXP = Math.floor(Math.random() * 4700) + 4400;
  };
if(uForeuse === 79){
  pPierre = 2000000000
  pAcier = 65000000
  pBS = 250000000
  pFer = 50000000
  pBBl = 20000000
  pGold = 5800000
  pP = 15000
  pBC = 13600
  pDiam = 9800
  pPluto = 860
  pBCab = 100
  pPN = 50
}
if(uForeuse === 79){
  uDropPierre = Math.floor(Math.random() * 75000000) + 73000000;
  uDropAcier = Math.floor(Math.random() * 3800000) + 3500000;
  uDropFer = Math.floor(Math.random() * 1990000) + 1880000;
  uDropOr = Math.floor(Math.random() * 55500) + 45500;
  uDropPla = Math.floor(Math.random() * 1500) + 1100;
  uDropD = Math.floor(Math.random() * 775) + 655;
  uDropPt = Math.floor(Math.random() * 60) + 14;
  uDropPN = Math.floor(Math.random() * 12) + 0;
  minageXP = Math.floor(Math.random() * 4900) + 4800;
  };
 
if(uHache === 74){
  hBS = 1000000000
  hPierre = 5000000000
  hAcier = 80000000
  hFer = 60000000
  hBBl = 58000000
  hGold = 8000000
  hP = 18000
  hBC = 16000
  hDiam = 10000
  hPluto = 1200
  hBCab = 1100
  hPN = 50
  }
  if(uHache === 74){
    uDropSapin = Math.floor(Math.random() * 80600000) + 75000000;
    uDropBouleau = Math.floor(Math.random() * 5600000) + 3700000;
    uDropChene = Math.floor(Math.random() * 2400) + 1800;
    uDropCab = Math.floor(Math.random() * 12) + 0;
    uDropXP = Math.floor(Math.random() * 7000) + 6500;
   };
   let multifinalhache= 1
   let multifinalforeuse = 1
if(uForeuse === 100){
  multifinalforeuse = 3
}
if(uHache === 100){
  multifinalhache = 3
}
   if(uForeuse >= 80){
    uDropPierre = (Math.floor(Math.random() * 75000000) + 73000000) * (1+((0.15* (uForeuse - 78))/1.3)) * multifinalforeuse
    uDropAcier =(Math.floor(Math.random() * 3800000) + 3500000) * (1+((0.15* (uForeuse - 78))/1.3))* multifinalforeuse
    uDropFer = (Math.floor(Math.random() * 1990000) + 1880000) * (1+((0.15* (uForeuse - 78))/1.3))* multifinalforeuse
    uDropOr = (Math.floor(Math.random() * 60500) + 55500) * (1+((0.15* (uForeuse - 78))/1.3))* multifinalforeuse
    uDropPla = (Math.floor(Math.random() * 1500) + 1100) * (1+((0.15* (uForeuse - 78))/1.3))* multifinalforeuse
    uDropD = (Math.floor(Math.random() * 775) + 655) * (1+((0.15* (uForeuse - 78))/1.3))* multifinalforeuse
    uDropPt = (Math.floor(Math.random() * 60) + 14) * (1+((0.15* (uForeuse - 78))/1.3))* multifinalforeuse
    uDropPN = (Math.floor(Math.random() * 12) + 0) * (1+((0.15* (uForeuse - 78))/1.3))* multifinalforeuse
    minageXP = (Math.floor(Math.random() * (4900 + 30*(uForeuse-79))) + (4800 +(20*uForeuse-79))) 
    };
    let multiplicatorhache = (1.15*(2*uHache-73)) * 1+((1/(101-uHache))*uHache)
if(uHache >= 75){
  hBS = Math.trunc(1000000000 *multiplicatorhache) 
  hPierre = Math.trunc(4000000000*multiplicatorhache)
  hAcier = Math.trunc(50000000*multiplicatorhache)
  hFer = Math.trunc(40000000*multiplicatorhache) 
  hBBl = Math.trunc(37000000*multiplicatorhache) 
  hGold = Math.trunc(2500000*multiplicatorhache) 
  hP = Math.trunc(12000*multiplicatorhache) 
  hBC = Math.trunc(10000*multiplicatorhache)
  hDiam = Math.trunc(7500*multiplicatorhache)
  hPluto = Math.trunc(900*multiplicatorhache) 
  hBCab = Math.trunc(75*multiplicatorhache)
  hPN = Math.trunc(35*multiplicatorhache) 
  hRx = Math.trunc(10000 *multiplicatorhache)
  }
  let multiplicatorforeuse = (1.13*(3*uForeuse-78)) * 1+((1/(103-uForeuse))*uForeuse)
  if(uForeuse >= 80){
    pPierre = Math.trunc(2500000000*multiplicatorforeuse) 
    pAcier = Math.trunc(27000000 *multiplicatorforeuse)
    pBS = Math.trunc(270000000*multiplicatorforeuse)
    pFer = Math.trunc(25000000*multiplicatorforeuse)
    pBBl = Math.trunc(25000000*multiplicatorforeuse)
    pGold = Math.trunc(2500000*multiplicatorforeuse)
    pP = Math.trunc(10000*multiplicatorforeuse)
    pBC = Math.trunc(9500*multiplicatorforeuse)
    pDiam = Math.trunc(6000*multiplicatorforeuse)
    pPluto = Math.trunc(650*multiplicatorforeuse)
    pBCab = Math.trunc(70*multiplicatorforeuse)
    pPN = Math.trunc(40*multiplicatorforeuse)
    pRx = Math.trunc(10500*multiplicatorforeuse)
    };
  if(uHache >= 75){
    uDropSapin = (Math.floor(Math.random() * 80600000) + 75000000) *(1+((0.135* (uHache - 74))/1.3)) *multifinalhache
    uDropBouleau = (Math.floor(Math.random() * 5600000) + 3700000) *(1+((0.135* (uHache - 74))/1.3))*multifinalhache
    uDropChene = (Math.floor(Math.random() * 2400) + 1800) * (1+((0.135* (uHache - 74))/1.3))* multifinalhache
    uDropCab = (Math.floor(Math.random() * 12) + 0) * (1+((0.135* (uHache - 73))/1.3))* multifinalhache
    uDropXP = (Math.floor(Math.random() * (7000 + 30*(uHache-74))) + (6500 + 20*(uHache-74)))
   };


   let fprestigepierre = 0
let fprestigeacier = 0
let fprestigediam = 0
let fprestigepla = 0
let fprestigepluto = 0
let fprestigerx = 0
let fprestigefer = 0
let fprestigepn = 0
let fprestigeor = 0
let fprestigebs = 0
let fprestigebc = 0
let fprestigebbl = 0
let fprestigegw = 0

let hprestigepierre = 0
let hprestigeacier = 0
let hprestigediam = 0
let hprestigepla = 0
let hprestigepluto = 0
let hprestigerx = 0
let hprestigefer = 0
let hprestigepn = 0
let hprestigeor = 0
let hprestigebs = 0
let hprestigebc = 0
let hprestigebbl = 0
let hprestigegw = 0


if(uetoilef >= 0) {
  fprestigepierre = 10000000000 * (1+((0.5+ uetoilef/4) + uetoilef*etoilef))
   fprestigeacier = 100000000 * (1+((0.5+ uetoilef/4) + uetoilef*etoilef))
   fprestigebs = 1000000000 * (1+((0.5+ uetoilef/4) + uetoilef*etoilef))
   fprestigefer = 100000000* (1+((0.5+ uetoilef/4) + uetoilef*etoilef))
   fprestigebbl = 100000000* (1+((0.5+ uetoilef/4) + uetoilef*etoilef))
   fprestigeor = 10000000* (1+((0.5+ uetoilef/4) + uetoilef*etoilef))
   fprestigepla = 40000* (1+((0.5+ uetoilef/4) + uetoilef*etoilef))
   fprestigebc = 36000* (1+((0.5+ uetoilef/4) + uetoilef*etoilef))
   fprestigediam = 24000* (1+((0.5+ uetoilef/4) + uetoilef*etoilef))
   fprestigepluto = 2650* (1+((0.5+ uetoilef/4) + uetoilef*etoilef))
   fprestigegw = 2400* (1+((0.5+ uetoilef/4) + uetoilef*etoilef))
   fprestigepn = 299* (1+((0.5+ uetoilef/4) + uetoilef*etoilef))
   fprestigerx = 28750* (1+((0.5+ uetoilef/4) + uetoilef*etoilef))
   };
if(uetoileh >= 0){
  hprestigepierre = 8000000000* (1+((0.5+ uetoileh/4) + uetoileh*etoileh))
  hprestigeacier = 1000000000* (1+((0.5+ uetoileh/4) + uetoileh*etoileh))
  hprestigebs = 3500000000* (1+((0.5+ uetoileh/4) + uetoileh*etoileh))
  hprestigefer = 120000000* (1+((0.5+ uetoileh/4) + uetoileh*etoileh))
  hprestigebbl = 100000000* (1+((0.5+ uetoileh/4) + uetoileh*etoileh))
  hprestigeor = 15000000* (1+((0.5+ uetoileh/4) + uetoileh*etoileh))
  hprestigepla = 30000* (1+((0.5+ uetoileh/4) + uetoileh*etoileh))
  hprestigebc = 25000* (1+((0.5+ uetoileh/4) + uetoileh*etoileh))
  hprestigediam = 20000* (1+((0.5+ uetoileh/4) + uetoileh*etoileh))
  hprestigepluto = 2200* (1+((0.5+ uetoileh/4) + uetoileh*etoileh))
  hprestigegw = 2000* (1+((0.5+ uetoileh/4) + uetoileh*etoileh))
  hprestigepn = 200* (1+((0.5+ uetoileh/4) + uetoileh*etoileh))
  hprestigerx = 300* (1+((0.5+ uetoileh/4) + uetoileh*etoileh))
  }
  

    if(uEpee === 1) {
      NkPierre = 10000
      };
      if(uBouclier === 1) {
        MkBS = 8000
        };
        if(uEpee === 2) {
          NkPierre = 50000
          }; 
          if(uBouclier === 2) {
            MkBS = 50000
            };
            if(uEpee === 3) {
              NkPierre = 150000

              }; 
              if(uBouclier === 3) {
                MkBS = 150000
                };
                if(uEpee === 4) {
                  NkPierre = 500000
    
                  }; 
                  if(uBouclier === 4) {
                    MkBS = 500000
                    };
                    if(uEpee === 5) {
                      NkPierre = 2000000
        
                      }; 
                      if(uBouclier === 5) {
                        MkBS = 2000000
                        };
                        if(uEpee === 6) {
                          NkPierre = 5000000
            
                          }; 
                          if(uBouclier === 6) {
                            MkBS = 5000000
                            };
                            if(uEpee === 7) {
                              NkPierre = 15000000
                
                              }; 
                              if(uBouclier === 7) {
                                MkBS = 15000000
                                };
                                if(uEpee === 8) {
                                  NkPierre = 50000000
                    
                                  }; 
                                  if(uBouclier === 8) {
                                    MkBS = 50000000
                                    };
                                    if(uEpee === 9) {
                                      NkPierre = 82000000
                                      NkAcier = 5000000
                                      NkFer = 3000000
                                      NkOr = 68000
                                      NkPla = 2200
                                      NkDi = 700
                                      NkPluto = 20
                                      NkPN = 8
                                      NkRx = 500
                                      }; 
                                      if(uBouclier === 9) {
                                        MkBS = 98000000
                                        MkBbl = 5000000
                                        MkBC = 2500
                                        MkGW = 7
                                        MkRx = 500
                                        };
 
                                        if(uEpee >= 10) {
                                          NkPierre = 100000000 * Math.pow(2, uEpee-9)
                                          NkAcier = 5000000 * Math.pow(2, uEpee-9)
                                          NkFer = 3000000 * Math.pow(2, uEpee-9)
                                          NkOr = 68000 * Math.pow(2, uEpee-9)
                                          NkPla = 2200 * Math.pow(2, uEpee-9)
                                          NkDi = 700 * Math.pow(2, uEpee-9)
                                          NkPluto = 20 * Math.pow(2, uEpee-9)
                                          NkPN = 5 * Math.pow(2, uEpee-9)
                                          NkRx = 500 * Math.pow(2, uEpee-9)
                                        }
                                        if(uBouclier >= 10) {
                                          MkBS = 98000000 * Math.pow(2, uBouclier-9)
                                          MkBbl = 5000000 * Math.pow(2, uBouclier-9)
                                          MkBC = 2500 * Math.pow(2, uBouclier-9)
                                          MkGW = 7 * Math.pow(2, uBouclier-9)
                                          MkRx = 500 * Math.pow(2, uBouclier-9)
                                          };
                                         

    if(uLooting === 0) {
      lPierre = 1000
      lAcier = 50
      lBS = 700
      lBoostOre = 1.05
      lBoostWood = 1.05
      };
      if(uLooting === 1) {
        lPierre = 5000
        lAcier = 300
        lBS = 1200
        lFer = 25
        lBbl = 200
        lBoostOre = 1.10
        lBoostWood = 1.10
        };
    if(uXPBoost === 0) {
      xPierre = 50
      xAcier = 5
      xBS = 15
      xBoostXP = 1.05
      };
    if(uXPBoost === 1) {
      xPierre = 200
      xAcier = 20
      xBS = 100
      xBoostXP = 1.10
      };
      if(uXPBoost === 2) {
        hPierre = 500
        hAcier = 50
        xBS = 350
        xBoostXP = 1.15
        };
        if(uXPBoost === 3) {
          xPierre = 500
          xAcier = 50
          xBS = 350
          xBbl = 195
          xBoostXP = 1.20
          };
          if(uXPBoost === 4) {
            xPierre = 1500
            xAcier = 150
            xBS = 950
            xBbl = 400
            xFer = 12
            xBoostXP = 1.25
            }; 
            if(uXPBoost === 5) {
              xPierre = 5000
              xAcier = 680
              xBS = 2500
              xBbl = 800
              xFer = 56
              xBoostXP = 1.30
              };
              if(uXPBoost === 6) {
                xPierre = 15000
                xAcier = 1280
                xBS = 6500
                xBbl = 1200
                xFer = 110
                xOr = 15
                xBoostXP = 1.35
                }; 
                if(uXPBoost === 7) {
                  xPierre = 25000
                  xAcier = 2680
                  xBS = 12500
                  xBbl = 2600
                  xFer = 270
                  xOr = 35
                  xPla = 5
                  xBoostXP = 1.40
                  };  
                  if(uLooting === 2) {
                    lPierre = 10000
                    lAcier = 1000
                    lBS = 6300
                    lBbl = 2000
                    lFer = 250
                    lOr = 30
                    lPla = 8
                    lBoostOre = 1.15
                    lBoostWood = 1.15
                    }; 
                  if(uXPBoost === 8) {
                    xPierre = 32000
                    xAcier = 3680
                    xBS = 16500
                    xBbl = 4600
                    xFer = 400
                    xOr = 100
                    xPla = 25
                    xBC = 8
                    xBoostXP = 1.45
                    }; 
                    if(uXPBoost === 9) {
                      xPierre = 39000
                      xAcier = 5080
                      xBS = 20000
                      xBbl = 6600
                      xFer = 800
                      xOr = 300
                      xPla = 65
                      xBC = 60
                      xDi = 10
                      xPluto = 5
                      xPN = 1
                      xGW = 1
                      xBoostXP = 1.50
                      };  
                      if(uLooting === 3) {
                        lPierre = 50000
                        lAcier = 8000
                        lBS = 33000
                        lBbl = 10000
                        lFer = 1000
                        lOr = 280
                        lPla = 30
                        lBC = 20
                        lDi = 15
                        lPluto = 8
                        lPN = 1
                        lGW = 1
                        lRx = 1000
                        lBoostOre = 1.20
                        lBoostWood = 1.20
                        }; 
                      if(uXPBoost === 10){
                        xBS = 200000
                        xPierre = 800000
                        xAcier = 10000
                        xFer = 8000
                        xBbl = 7800
                        xOr = 500
                        xPla = 22
                        xBC = 20
                        xDi = 15
                        xPluto = 8
                        xGW = 2
                        xPN = 1
                        xRx = 50
                        xBoostXP = 1.58
                        }  
                        if(uXPBoost === 11){
                          xBS = 300000
                          xPierre = 900000
                          xAcier = 20000
                          xFer = 9000
                          xBbl = 8700
                          xOr = 600
                          xPla = 32
                          xBC = 30
                          xDi = 25
                          xPluto = 9
                          xGW = 3
                          xPN = 2
                          xRx = 100
                          xBoostXP = 1.66

                          } 
                          if(uLooting === 4) {
                            lPierre = 1000000
                            lAcier = 45000
                            lBS = 600000
                            lFer = 10000
                            lBbl = 9300
                            lOr = 800
                            lPla = 60
                            lBC = 55
                            lDi = 20
                            lPluto = 12
                            lPN = 1
                            lGW = 3
                            lRx = 5000
                            lBoostOre = 1.25
                            lBoostWood = 1.25
                            }; 
if(uXPBoost === 12){
 xBS = 400000
 xPierre = 1000000
 xAcier = 30000
 xFer = 10000
 xBbl = 9700
 xOr = 700
 xPla = 45
  xBC = 40
 xDi = 34
 xPluto = 11
 xGW = 4
 xPN = 3
xRx = 200
xBoostXP = 1.72
  
 } 
 if(uXPBoost === 13){
  xBS = 600000
  xPierre = 1200000
  xAcier = 50000
  xFer = 30000
  xBbl = 12000
  xOr = 900
  xPla = 60
  xBC = 65
  xDi = 53
  xPluto = 22
  xGW = 6
  xPN = 4
 xRx = 300
 xBoostXP = 1.80
   
  } 
  if(uXPBoost === 14){
    xBS = 800000
    xPierre = 1500000
    xAcier = 70000
    xFer = 50000
    xBbl = 32000
    xOr = 1200
    xPla = 80
    xBC = 75
    xDi = 67
    xPluto = 34
    xGW = 8
    xPN = 5
   xRx = 500
   xBoostXP = 1.88
     
    } 
    if(uXPBoost === 15){
      xBS = 900000
      xPierre = 1700000
      xAcier = 80000
      xFer = 60000
      xBbl = 48000
      xOr = 1600
      xPla = 90
      xBC = 85
      xDi = 77
      xPluto = 44
      xGW = 10
      xPN = 6
     xRx = 700
     xBoostXP = 1.96
       
      } 
      if(uXPBoost === 16){
        xBS = 1100000
        xPierre = 2000000
        xAcier = 100000
        xFer = 80000
        xBbl = 58000
        xOr = 2600
        xPla = 110
        xBC = 105
        xDi = 88
        xPluto = 55
        xGW = 12
        xPN = 7
       xRx = 1000
       xBoostXP = 2.06
         
        } 
        if(uXPBoost === 17){
          xBS = 1400000
          xPierre = 2700000
          xAcier = 150000
          xFer = 100000
          xBbl = 63000
          xOr = 5600
          xPla = 150
          xBC = 135
          xDi = 111
          xPluto = 62
          xGW = 15
          xPN = 10
         xRx = 2000
         xBoostXP = 2.16
           
          } 
          if(uLooting === 5) {
            lPierre = 3000000
            lBS = 1500000
            lAcier = 300000
            lFer = 180000
            lBbl = 99999
            lOr = 7000
            lPla = 125
            lBC = 110
            lDi = 99
            lPluto = 35
            lPN = 15
            lGW = 20
            lRx = 10000
            lBoostOre = 1.30
            lBoostWood = 1.30
            }; 
          if(uXPBoost === 18){
            xBS = 1700000
            xPierre = 3400000
            xAcier = 330000
            xFer = 150000
            xBbl = 69000
            xOr = 7500
            xPla = 230
            xBC = 155
            xDi = 131
            xPluto = 66
            xGW = 17
            xPN = 12
           xRx = 2500
           xBoostXP = 2.26
             
            } 
            if(uXPBoost === 19){
              xBS = 1900000
              xPierre = 3600000
              xAcier = 350000
              xFer = 160000
              xBbl = 71000
              xOr = 8200
              xPla = 300
              xBC = 175
              xDi = 150
              xPluto = 73
              xGW = 19
              xPN = 14
             xRx = 3000
             xBoostXP = 2.36
               
              }
              if(uXPBoost === 20){
                xBS = 2200000
                xPierre = 4400000
                xAcier = 450000
                xFer = 290000
                xBbl = 77000
                xOr = 9200
                xPla = 350
                xBC = 195
                xDi = 170
                xPluto = 80
                xGW = 20
                xPN = 16
               xRx = 5000
               xBoostXP = 2.46
                 
                } 
                if(uXPBoost === 21){
                  xBS = 3000000
                  xPierre = 6200000
                  xAcier = 650000
                  xFer = 280000
                  xBbl = 83000
                  xOr = 12000
                  xPla = 500
                  xBC = 255
                  xDi = 220
                  xPluto = 92
                  xGW = 22
                  xPN = 17
                 xRx = 7000
                 xBoostXP = 2.56
                   
                  } 
                  if(uXPBoost === 22){
                    xBS = 5000000
                    xPierre = 10000000
                    xAcier = 900000
                    xFer = 390000
                    xBbl = 130000
                    xOr = 16000
                    xPla = 650
                    xBC = 310
                    xDi = 250
                    xPluto = 99
                    xGW = 24
                    xPN = 19
                   xRx = 7500
                   xBoostXP = 2.66
                     
                    } 
                    if(uXPBoost === 23){
                      xBS = 10000000
                      xPierre = 20000000
                      xAcier = 1200000
                      xFer = 600000
                      xBbl = 300000
                      xOr = 22000
                      xPla = 850
                      xBC = 440
                      xDi = 330
                      xPluto = 110
                      xGW = 26
                      xPN = 22
                     xRx = 9000
                     xBoostXP = 2.76
                       
                      } 
                      if(uXPBoost === 24){
                        xBS = 15000000
                        xPierre = 25000000
                        xAcier = 1600000
                        xFer = 750000
                        xBbl = 350000
                        xOr = 30000
                        xPla = 1050
                        xBC = 485
                        xDi = 350
                        xPluto = 125
                        xGW = 28
                        xPN = 24
                       xRx = 12000
                       xBoostXP = 2.89
                         
                        }
                        if(uLooting === 6) {
                          lPierre = 30000000
                          lBS = 15000000
                          lAcier = 1800000
                          lFer = 820000
                          lBbl = 400000
                          lOr = 35000
                          lPla = 1250
                          lBC = 500
                          lDi = 400
                          lPluto = 130
                          lPN = 30
                          lGW = 35
                          lRx = 25000
                          lBoostOre = 1.40
                          lBoostWood = 1.40
                          }; 
                        if(uXPBoost === 25){
                          xBS = 25000000
                          xPierre = 35000000
                          xAcier = 2600000
                          xFer = 850000
                          xBbl = 450000
                          xOr = 40000
                          xPla = 1250
                          xBC = 685
                          xDi = 550
                          xPluto = 165
                          xGW = 31
                          xPN = 27
                         xRx = 15000
                         xBoostXP = 3.02
                           
                          }
                          if(uXPBoost === 26){
                            xBS = 35000000
                            xPierre = 45000000
                            xAcier = 3600000
                            xFer = 1000000
                            xBbl = 600000
                            xOr = 50000
                            xPla = 1450
                            xBC = 790
                            xDi = 650
                            xPluto = 185
                            xGW = 34
                            xPN = 30
                           xRx = 18000
                           xBoostXP = 3.15
                             
                            }
                            if(uXPBoost === 27){
                              xBS = 37000000
                              xPierre = 47000000
                              xAcier = 3700000
                              xFer = 1500000
                              xBbl = 650000
                              xOr = 54000
                              xPla = 1500
                              xBC = 810
                              xDi = 675
                              xPluto = 195
                              xGW = 36
                              xPN = 32
                             xRx = 22000
                             xBoostXP = 3.28
                               
                              }
                              if(uLooting === 7) {
                                lPierre = 50000000
                                lBS = 40000000
                                lAcier = 4000000
                                lFer = 1800000
                                lBbl = 700000
                                lOr = 70000
                                lPla = 1750
                                lBC = 900
                                lDi = 750
                                lPluto = 200
                                lPN = 50
                                lGW = 60
                                lRx = 50000
                                lBoostOre = 1.50
                                lBoostWood = 1.50
                                }; 
                              if(uXPBoost === 28){
                                xBS = 50000000
                                xPierre = 75000000
                                xAcier = 5000000
                                xFer = 3000000
                                xBbl = 850000
                                xOr = 64000
                                xPla = 1800
                                xBC = 900
                                xDi = 775
                                xPluto = 220
                                xGW = 38
                                xPN = 34
                               xRx = 25000
                               xBoostXP = 3.41
                                 
                                }
                                if(uXPBoost === 29){
                                  xBS = 60000000
                                  xPierre = 85000000
                                  xAcier = 6000000
                                  xFer = 4000000
                                  xBbl = 950000
                                  xOr = 74000
                                  xPla = 2100
                                  xBC = 1000
                                  xDi = 855
                                  xPluto = 250
                                  xGW = 42
                                  xPN = 38
                                 xRx = 30000
                                 xBoostXP = 3.54
                                   
                                  }
                                  if(uXPBoost === 30){
                                    xBS = 70000000
                                    xPierre = 90000000
                                    xAcier = 7000000
                                    xFer = 5000000
                                    xBbl = 1400000
                                    xOr = 86000
                                    xPla = 2300
                                    xBC = 1200
                                    xDi = 930
                                    xPluto = 270
                                    xGW = 45
                                    xPN = 40
                                   xRx = 50000
                                   xBoostXP = 3.67
                                     
                                    }
                                    if(uXPBoost === 31){
                                      xBS = 90000000
                                      xPierre = 120000000
                                      xAcier = 9000000
                                      xFer = 7000000
                                      xBbl = 3400000
                                      xOr = 126000
                                      xPla = 3600
                                      xBC = 2400
                                      xDi = 1300
                                      xPluto = 300
                                      xGW = 50
                                      xPN = 45
                                     xRx = 60000
                                     xBoostXP = 3.80
                                       
                                      }
                                      if(uXPBoost === 32){
                                        xBS = 110000000
                                        xPierre = 150000000
                                        xAcier = 11000000
                                        xFer = 9000000
                                        xBbl = 5600000
                                        xOr = 188000
                                        xPla = 4200
                                        xBC = 3400
                                        xDi = 1600
                                        xPluto = 325
                                        xGW = 55
                                        xPN = 50
                                       xRx = 75000
                                       xBoostXP = 3.93
                                         
                                        }
                                        if(uXPBoost === 33){
                                          xBS = 150000000
                                          xPierre = 200000000
                                          xAcier = 15000000
                                          xFer = 13000000
                                          xBbl = 7200000
                                          xOr = 250000
                                          xPla = 5200
                                          xBC = 4400
                                          xDi = 2200
                                          xPluto = 375
                                          xGW = 60
                                          xPN = 55
                                         xRx = 85000
                                         xBoostXP = 4.08
                                           
                                          }
                                          if(uXPBoost === 34){
                                            xBS = 200000000
                                            xPierre = 300000000
                                            xAcier = 20000000
                                            xFer = 17000000
                                            xBbl = 12000000
                                            xOr = 500000
                                            xPla = 6000
                                            xBC = 5000
                                            xDi = 3000
                                            xPluto = 420
                                            xGW = 75
                                            xPN = 65
                                           xRx = 100000
                                           xBoostXP = 4.23
                                             
                                            }
                                            if(uXPBoost === 35){
                                              xBS = 300000000
                                              xPierre = 500000000
                                              xAcier = 30000000
                                              xFer = 25000000
                                              xBbl = 18000000
                                              xOr = 800000
                                              xPla = 8000
                                              xBC = 6200
                                              xDi = 4200
                                              xPluto = 480
                                              xGW = 80
                                              xPN = 75
                                             xRx = 120000
                                             xBoostXP = 4.38
                                               
                                              }
                                              if(uXPBoost === 36){
                                                xBS = 500000000
                                                xPierre = 750000000
                                                xAcier = 50000000
                                                xFer = 40000000
                                                xBbl = 32000000
                                                xOr = 1200000
                                                xPla = 10000
                                                xBC = 7500
                                                xDi = 5300
                                                xPluto = 550
                                                xGW = 90
                                                xPN = 85
                                               xRx = 150000
                                               xBoostXP = 4.53
                                                 
                                                }
                                                if(uLooting === 8) {
                                                  lPierre = 800000000
                                                  lBS = 500000000
                                                  lAcier = 45000000
                                                  lFer = 35000000
                                                  lBbl = 30000000
                                                  lOr = 1000000
                                                  lPla = 9999
                                                  lBC = 5500
                                                  lDi = 5000
                                                  lPluto = 499
                                                  lPN = 100
                                                  lGW = 110
                                                  lRx = 75000
                                                  lBoostOre = 1.60
                                                  lBoostWood = 1.60
                                                  }; 
                                                if(uXPBoost === 37){
                                                  xBS = 700000000
                                                  xPierre = 1000000000
                                                  xAcier = 80000000
                                                  xFer = 60000000
                                                  xBbl = 44000000
                                                  xOr = 3400000
                                                  xPla = 12000
                                                  xBC = 8500
                                                  xDi = 6300
                                                  xPluto = 650
                                                  xGW = 100
                                                  xPN = 90
                                                 xRx = 180000
                                                 xBoostXP = 4.68
                                                   
                                                  }
                                                  if(uXPBoost === 38){
                                                    xBS = 1000000000
                                                    xPierre = 5000000000
                                                    xAcier = 150000000
                                                    xFer = 100000000
                                                    xBbl = 75000000
                                                    xOr = 10000000
                                                    xPla = 15000
                                                    xBC = 9200
                                                    xDi = 7300
                                                    xPluto = 750
                                                    xGW = 120*2
                                                    xPN = 100*2
                                                   xRx = 200000
                                                   xBoostXP = 4.88
                                                     
                                                    }
                                                    if(uXPBoost === 39){
                                                      xBS = 5000000000
                                                      xPierre = 10000000000
                                                      xAcier = 350000000
                                                      xFer = 250000000
                                                      xBbl = 150000000
                                                      xOr = 50000000
                                                      xPla = 18000
                                                      xBC = 11000
                                                      xDi = 8500
                                                      xPluto = 950
                                                      xGW = 130*4
                                                      xPN = 120*4
                                                     xRx = 250000
                                                     xBoostXP = 5.02
                                                       
                                                      }
                                                      if(uXPBoost === 40){
                                                        xBS = 15000000000
                                                        xPierre = 20000000000
                                                        xAcier = 650000000
                                                        xFer = 350000000
                                                        xBbl = 250000000
                                                        xOr = 75000000
                                                        xPla = 23000
                                                        xBC = 15000
                                                        xDi = 10500
                                                        xPluto = 1250
                                                        xGW = 160*5
                                                        xPN = 130*5
                                                       xRx = 350000
                                                       xBoostXP = 5.22
                                                         
                                                        }
                                                        if(uLooting === 9) {
                                                          lPierre = 15000000000
                                                          lBS = 10000000000
                                                          lAcier = 450000000
                                                          lFer = 350000000
                                                          lBbl = 150000000
                                                          lOr = 50000000
                                                          lPla = 15000
                                                          lBC = 12000
                                                          lDi = 8000
                                                          lPluto = 1000
                                                          lPN = 150
                                                          lGW = 200
                                                          lRx = 100000
                                                          lBoostOre = 1.70
                                                          lBoostWood = 1.70
                                                          }; 
                                                        if(uXPBoost === 41){
                                                          xBS = 27000000000
                                                          xPierre = 35000000000
                                                          xAcier = 780000000
                                                          xFer = 480000000
                                                          xBbl = 350000000
                                                          xOr = 95000000
                                                          xPla = 29000
                                                          xBC = 21000
                                                          xDi = 12800
                                                          xPluto = 1500
                                                          xGW = 190*6
                                                          xPN = 140*6
                                                         xRx = 500000
                                                         xBoostXP = 5.42
                                                           
                                                          }
                                                          if(uXPBoost === 42){
                                                            xBS = 70000000000
                                                            xPierre = 95000000000
                                                            xAcier = 1000000000
                                                            xFer = 780000000
                                                            xBbl = 500000000
                                                            xOr = 150000000
                                                            xPla = 33000
                                                            xBC = 26000
                                                            xDi = 16000
                                                            xPluto = 1800
                                                            xGW = 220*8
                                                            xPN = 160*8
                                                           xRx = 800000
                                                           xBoostXP = 5.62
                                                             
                                                            }
                                                            //
                                                            //  MkBS = 98000000 * Math.pow(2, uBouclier-9)
                                                             // MkBbl = 5000000 * Math.pow(2, uBouclier-9)
                                                            ///  MkBC = 2500 * Math.pow(2, uBouclier-9)
                                                             // MkGW = 7 * Math.pow(2, uBouclier-9)
                                                            //  MkRx 500 * Math.pow(2, uBouclier-9)//
                                                            //NkPierre = 100000000 * Math.pow(2, uEpee-9)
                                                           // NkAcier = 5000000 * Math.pow(2, uEpee-9)
                                                           // NkFer = 3000000 * Math.pow(2, uEpee-9)
                                                           // NkOr = 68000 * Math.pow(2, uEpee-9)
                                                          // NkPla = 2200 * Math.pow(2, uEpee-9)
                                                            //NkDi = 700 * Math.pow(2, uEpee-9)
                                                            //NkPluto = 20 * Math.pow(2, uEpee-9)
                                                            //NkPN = 5 * Math.pow(2, uEpee-9)
                                                            //NkRx = 500 * Math.pow(2, uEpee-9)
                                                           
                                                            if(uLooting >= 10) {
                                                              lPierre = 100000000 * Math.pow(2.5, uLooting-9)
                                                              lBS = 98000000 * Math.pow(2.5, uLooting-9)
                                                              lAcier = 5000000 * Math.pow(2.5, uLooting-9)
                                                              lFer = 3000000* Math.pow(2.5, uLooting-9)
                                                              lBbl = 5000000* Math.pow(2.5, uLooting-9)
                                                              lOr = 68000* Math.pow(2.5, uLooting-9)
                                                              lPla = 2200* Math.pow(2.5, uLooting-9)
                                                              lBC = 2500* Math.pow(2.5, uLooting-9)
                                                              lDi = 700* Math.pow(2.5, uLooting-9)
                                                              lPluto = 20* Math.pow(2.5, uLooting-9)
                                                              lPN = 20* Math.pow(2.5, uLooting-9)
                                                              lGW = 10* Math.pow(2.5, uLooting-9)
                                                              lRx = 500* Math.pow(2.5, uLooting-9)
                                                              lBoostOre = 1.85+((uLooting*2-9)/10)
                                                              lBoostWood = 1.85+((uLooting*2-9)/10)
                                                              }; 
                                                            if(uXPBoost === 43){
                                                              xBS = 100000000000
                                                              xPierre = 150000000000
                                                              xAcier = 3000000000
                                                              xFer = 1000000000
                                                              xBbl = 800000000
                                                              xOr = 380000000
                                                              xPla = 390000
                                                              xBC = 330000
                                                              xDi = 230000
                                                              xPluto = 24000
                                                              xGW = 250*10
                                                              xPN = 180*10
                                                             xRx = 1500000
                                                             xBoostXP = 5.82
                                                               
                                                              }
                                                             
                                                              if(uXPBoost === 44){
                                                                xBS = 200000000000
                                                                xPierre = 350000000000
                                                                xAcier = 10000000000
                                                                xFer = 5000000000
                                                                xBbl = 2200000000
                                                                xOr = 800000000
                                                                xPla = 500000
                                                                xBC = 430000
                                                                xDi = 300000
                                                                xPluto = 32000
                                                                xGW = 320*20
                                                                xPN = 220*20
                                                               xRx = 2500000
                                                               xBoostXP = 6.02
                                                                 
                                                                }
                                                               
                                                                if(uXPBoost === 45){
                                                                  xBS = 500000000000
                                                                  xPierre = 800000000000
                                                                  xAcier = 30000000000
                                                                  xFer = 15000000000
                                                                  xBbl = 10000000000
                                                                  xOr = 5000000000
                                                                  xPla = 700000
                                                                  xBC = 580000
                                                                  xDi = 420000
                                                                  xPluto = 44000
                                                                  xGW = 380*25
                                                                  xPN = 260*25
                                                                 xRx = 5000000
                                                                 xBoostXP = 6.52
                                                                   
                                                                  }
                                                                
                                                                   
                                                                     
                                                                  if(uXPBoost === 46){
                                                                    xBS = 1000000000000
                                                                    xPierre = 1500000000000
                                                                    xAcier = 80000000000
                                                                    xFer = 50000000000
                                                                    xBbl = 30000000000
                                                                    xOr = 10000000000
                                                                    xPla = 999999
                                                                    xBC = 780000
                                                                    xDi = 600000
                                                                    xPluto = 5500
                                                                    xGW = 500*45
                                                                    xPN = 300*45
                                                                   xRx = 8000000
                                                                   xBoostXP = 7.02
                                                                     
                                                                    }
                                                                   
                                                                    if(uXPBoost === 47){
                                                                      xBS = 2000000000000/2
                                                                      xPierre = 3500000000000/2
                                                                      xAcier = 1500000000000/2
                                                                      xFer = 120000000000/2
                                                                      xBbl = 90000000000/2
                                                                      xOr = 30000000000/2
                                                                      xPla = 1200000
                                                                      xBC = 1000000
                                                                      xDi = 800000
                                                                      xPluto = 70000
                                                                      xGW = 600*45
                                                                      xPN = 500*45
                                                                     xRx = 10000000
                                                                     xBoostXP = 7.52
                                                                       
                                                                      }
                                                                     
                                                                      if(uXPBoost === 48){
                                                                        xBS = 4000000000000
                                                                        xPierre = 5000000000000
                                                                        xAcier = 3500000000000
                                                                        xFer = 250000000000
                                                                        xBbl = 180000000000
                                                                        xOr = 60000000000
                                                                        xPla = 18000000
                                                                        xBC = 14000000
                                                                        xDi = 10000000
                                                                        xPluto = 840000
                                                                        xGW = 800*45
                                                                        xPN = 700*45
                                                                       xRx = 20000000
                                                                       xBoostXP = 8.02
                                                                         
                                                                        };
                                                                      
                                                                   

                                                                        if(uXPBoost === 49){
                                                                          xBS = 10000000000000
                                                                          xPierre = 15000000000000
                                                                          xAcier = 1000000000000
                                                                          xFer = 800000000000
                                                                          xBbl = 500000000000
                                                                          xOr = 200000000000
                                                                          xPla = 30000000
                                                                          xBC = 25000000
                                                                          xDi = 18000000
                                                                          xPluto = 1500000
                                                                          xGW = 5000*45
                                                                          xPN = 2500*45
                                                                         xRx = 20000000
                                                                         xBoostXP = 8.52
                                                                           
                                                                          }
 
                                                                            if(uLooting === 20) {
                                                                              lBoostOre = 5.5
                                                                              lBoostWood = 5.5
                                                                              };
                                                                              if(uXPBoost === 50){
                                                                               xBoostXP = 9
                                                                                 
                                                                                }
                                                                            if(uTimerReduc === 0) {
                                                                              TiGWood = 10
                                                                              TiPN = 10 
                                                                              TiPo = 8
                                                                              TiRx = 500
                                                                              CollecteTime = 16200000
                                                                              
                                                                              };
                                                                              if(uTimerReduc === 1) {
                                                                                TiGWood = 25
                                                                                TiPN = 25 
                                                                                TiPo = 50
                                                                                TiRx = 1200
                                                                                CollecteTime = 16000000
                                                                                
                                                                                };
                                                                                if(uTimerReduc === 2) {
                                                                                  TiGWood = 50
                                                                                  TiPN = 50
                                                                                  TiPo = 100
                                                                                  TiRx = 5000
                                                                                  CollecteTime = 15800000
                                                                                  
                                                                                  };
                                                                                  if(uTimerReduc === 3) {
                                                                                    TiGWood = 100
                                                                                    TiPN = 100
                                                                                    TiPo = 200
                                                                                    TiRx = 10000
                                                                                    CollecteTime = 15600000
                                                                                    
                                                                                    };
                                                                                    if(uTimerReduc === 4) {
                                                                                      TiGWood = 200
                                                                                      TiPN = 200
                                                                                      TiPo = 300
                                                                                      TiRx = 25000
                                                                                      CollecteTime = 15400000
                                                                                      
                                                                                      };
                                                                                      if(uTimerReduc === 5) {
                                                                                        TiGWood = 500
                                                                                        TiPN = 500
                                                                                        TiPo = 500
                                                                                        TiRx = 100000
                                                                                        CollecteTime = 15200000                                                                     
                                                                                        };
                                                                                        if(uTimerReduc === 6) {
                                                                                          TiGWood = 800
                                                                                          TiPN = 800
                                                                                          TiPo = 750
                                                                                          TiRx = 300000
                                                                                          CollecteTime = 15000000
                                                                                          
                                                                                          };
                                                                                          if(uTimerReduc === 7) {
                                                                                            TiGWood = 1500
                                                                                            TiPN = 1500
                                                                                            TiPo = 900
                                                                                            TiRx = 700000
                                                                                            CollecteTime = 14800000
                                                                                            
                                                                                            };
                                                                                            if(uTimerReduc === 8) {
                                                                                              TiGWood = 3500
                                                                                              TiPN = 3500
                                                                                              TiPo = 1000
                                                                                              TiRx = 1500000
                                                                                              CollecteTime = 14600000
                                                                                              
                                                                                              };
                                                                                              if(uTimerReduc === 9) {
                                                                                                TiGWood = 10000
                                                                                                TiPN = 10000
                                                                                                TiPo = 5000
                                                                                                TiRx = 20000000
                                                                                                CollecteTime = 14400000
                                                                                                
                                                                                                };
                                                                                                if(uTimerReduc >= 10) {
                                                                                                  CollecteTime = 14000000
                                                                                                  
                
                                                                                                };


let foPi = 0
let foAc = 0
let foFe = 0
let foOr = 0
let foPla = 0
let foDi = 0
let foPlu = 0
let foPN = 0
let foBS = 0
let foBbl = 0
let foBC = 0
let foGW = 0

if(uforge >= 0) {
  foPi = 100000000 * Math.pow(10, 1+uforge)
  foAc = 5000000 * Math.pow(10, 1+uforge)
  foFe = 3000000 * Math.pow(10, 1+uforge)
  foOr = 70000 * Math.pow(10, 1+uforge)
  foPla = 2500 * Math.pow(10, 1+uforge)
  foDi = 800 * Math.pow(10, 1+uforge)
  foPlu = 22 * Math.pow(10, 1+uforge)
  foPN = 4 * Math.pow(7, 1+uforge)
  foBS = 100000000 * Math.pow(10, 1+uforge)
  foBbl = 6000000 * Math.pow(10, 1+uforge)
  foBC = 3000 * Math.pow(10, 1+uforge)
  foGW = 7 * Math.pow(7, 1+uforge)
}

if(uatelier === 0){
  AtPi = 15000
  AtBS = 15000
  AtRx = 15
  Atnecessaire = 0
}
if(uatelier === 1){
  AtPi = 75000
  AtBS = 65000
  AtRx = 35
  Atnecessaire = 5
}
if(uatelier === 2){
  AtPi = 295000
  AtBS = 275000
  AtRx = 80
  Atnecessaire = 15
}
if(uatelier === 3){
  AtPi = 1000000
  AtBS = 800000
  AtRx = 150
  Atnecessaire = 30
}
if(uatelier === 4){
  AtPi = 5000000
  AtAcier = 325000
  AtBS = 4500000
  AtBbl = 450000
  AtRx = 350
  Atnecessaire = 75
}
if(uatelier === 5){
  AtPi = 50000000
  AtAcier = 4000000
  AtFer = 2500000
  AtBS = 45000000
  AtBbl = 6000000
  AtRx = 750
  Atnecessaire = 150
}
if(uatelier === 6){
  AtPi = 50000000
  AtAcier = 4000000
  AtFer = 2500000
  AtBS = 45000000
  AtBbl = 6000000
  AtRx = 1750
  Atnecessaire = 300
}
if(uatelier === 7){
  AtPi = 500000000
  AtAcier = 40000000
  AtFer = 25000000
  AtPN = 500
  AtBS = 450000000
  AtBbl = 60000000
  AtBC = 20000
  AtGW = 1000
  AtRx = 7500
  Atnecessaire = 650
}
if(uatelier === 8){
  AtPi = 5000000000
  AtAcier = 400000000
  AtFer = 250000000
  AtPN = 1000
  AtBS = 4500000000
  AtBbl = 600000000
  AtBC = 200000
  AtGW = 2500
  AtRx = 75000
  Atnecessaire = 1500
}
if(uatelier === 9){
  AtPi = 500000000000
  AtAcier = 40000000000
  AtFer = 25000000000
  AtPN = 5000
  AtBS = 450000000000
  AtBbl = 60000000000
  AtBC = 20000000
  AtGW = 7500
  AtRx = 7500000
  Atnecessaire = 3000
}
let Rxmin = 0.6 * (nivactuel/2) + uLooting + uXPBoost + uTimerReduc
let Rxmax = 1.5 * (nivactuel/2) + uLooting + uXPBoost + uTimerReduc
let RxDrop = Math.floor(Math.random() * Rxmax) + Rxmin;
let xniv = uXPBoost + 1                                                                          
let univ = uForeuse + 1
let vniv = uHache + 1
let lniv = uLooting + 1
let Tniv = uTimerReduc + 1
let vP = ""
let vA = ""
let vBS = ""
let vFe = ""
let vBBl = ""
let vGo = ""
let vPl = ""
let vBC = ""
let vDi = ""
let vPt = ""
let vBca = ""
let vPN = ""
let vRx = ""
let mP = ""
let mA = ""
let mBS = ""
let mFe = ""
let mBBl = ""
let mGo = ""
let mPl = ""
let mBC = ""
let mDi = ""
let mPt = ""
let mBca = ""
let mPN = ""
let mRx = ""
let cP = ""
let cA = ""
let cBS = ""
let cFe = ""
let cBBl = ""
let cGo = ""
let cPl = ""
let cBC = ""
let cDi = ""
let cPt = ""
let cBca = ""
let cPN = ""
let cRx = ""
let wP = ""
let wA = ""
let wBS = ""
let wFe = ""
let wBBl = ""
let wGo = ""
let wPl = ""
let wBC = ""
let wDi = ""
let wPt = ""
let wBca = ""
let wPN = ""
let wRx = ""
let CtBca = ""
let CtPN = ""
let CtRx = ""
let CtPo = ""
let mPP = uPierre * 100 / pPierre
let mAP = uAcier * 100 / pAcier
let mFP = uFer * 100 / pFer
let mBBLP = uBoisdeBouleau * 100 / pBBl
let mOP = uOr * 100 / pGold
let mPLP = uPlatine * 100 / pP
let mBCP= uBoisdeChêne * 100 / pBC
let mDP = uDiamant * 100 / pDiam
let mPTP = uPlutonium * 100 / pPluto
let mBCABP = uBoisDoré * 100 / pBCab
let mPNP = uPierreNoire * 100 / pPN
let mBSP = uBoisdeSapin * 100 / pBS
let mRXP = uRxCoins * 100 / pRx
let hPP = uPierre * 100 / hPierre
let hAP = uAcier * 100 / hAcier
let hFP = uFer * 100 / hFer
let hBBLP = uBoisdeBouleau * 100 / hBBl
let hOP = uOr * 100 / hGold
let hPLP = uPlatine * 100 / hP
let hBCP= uBoisdeChêne * 100 / hBC
let hDP = uDiamant * 100 / hDiam
let hPTP = uPlutonium * 100 / hPluto
let hBCABP = uBoisDoré * 100 / hBCab
let hPNP = uPierreNoire * 100 / hPN
let hBSP = uBoisdeSapin * 100 / hBS
let hRXP = uRxCoins * 100 / hRx
let cPP = uPierre * 100 / xPierre
let cAP = uAcier * 100 / xAcier
let cFP = uFer * 100 / xFer
let cBBLP = uBoisdeBouleau * 100 / xBbl
let cOP = uOr * 100 / xOr
let cPLP = uPlatine * 100 / xPla
let cBCP= uBoisdeChêne * 100 / xBC
let cDP = uDiamant * 100 / xDi
let cPTP = uPlutonium * 100 / xPluto
let cBCABP = uBoisDoré * 100 / xGW
let cPNP = uPierreNoire * 100 / xPN
let cBSP = uBoisdeSapin * 100 / xBS
let cRXP = uRxCoins * 100 / xRx
let bRx = uRxCoins * 100 / SORx
let bPo = uPieceor * 100 / SOPO
let nPP = uPierre * 100 / lPierre
let nAP = uAcier * 100 / lAcier
let nFP = uFer * 100 / lFer
let nBBLP = uBoisdeBouleau * 100 / lBbl
let nOP = uOr * 100 / lOr
let nPLP = uPlatine * 100 / lPla
let nBCP= uBoisdeChêne * 100 / lBC
let nDP = uDiamant * 100 / lDi
let nPTP = uPlutonium * 100 / lPluto
let nBCABP = uBoisDoré * 100 / lGW
let nPNP = uPierreNoire * 100 / lPN
let nBSP = uBoisdeSapin * 100 / lBS
let nRXP = uRxCoins * 100 / lRx
let TpPNP = uPierreNoire * 100 / TiPN
let TpBCABP = uBoisDoré * 100 / TiGWood
let TpRxP = uRxCoins * 100 / TiRx
let TpPoP = uPieceor * 100 / TiPo

let GkPP = uPierre * 100 / NkPierre
let GkAP = uAcier * 100 / NkAcier
let GkFP = uFer * 100 / NkFer
let GkOP = uOr * 100 / NkOr
let GkPLP = uPlatine * 100 / NkPla
let GkDP = uDiamant * 100 / NkDi
let GkPTP = uPlutonium * 100 / NkPluto
let GkPNP = uPierreNoire * 100 / NkPN
let GkRXP = uRxCoins * 100 / NkRx

let MaoPi = uPierre * 100 / AtPi
let MaoAcier = uAcier * 100 / AtAcier
let MaoFer = uFer * 100 / AtFer
let MaoBS = uBoisdeSapin * 100 / AtBS
let MaoBbl = uBoisdeBouleau * 100 / AtBbl
let MaoBC = uBoisdeChêne * 100 / AtBC
let MaoPN = uPierreNoire * 100 / AtPN
let MaoGW = uBoisDoré * 100 / AtGW
let MaoRx = uRxCoins * 100 / AtRx
let MaoParchemin = utotal_parchemin * 100 / Atnecessaire


let VaoPi = uPierre * 100 / foPi
let VaoAcier = uAcier * 100 / foAc
let VaoFer = uFer * 100 / foFe
let VaoGold = uOr * 100 / foOr
let VaoDiam = uDiamant * 100 / foDi
let VaoPlatine = uPlatine * 100 / foPla
let VaoPluto = uPlutonium * 100 / foPlu
let VaoPN = uPierreNoire * 100 / foPN
let VaoBS = uBoisdeSapin * 100 / foBS
let VaoBbl = uBoisdeBouleau * 100 / foBbl
let VaoBC = uBoisdeChêne * 100 / foBC
let VaoGW = uBoisDoré * 100 / foGW

let PkBSP = uBoisdeSapin * 100 / MkBS
let PkBBLP = uBoisdeBouleau * 100 / MkBbl
let PkBCP = uBoisdeChêne * 100 / MkBC
let PkBCABP = uBoisDoré * 100 / MkGW
let PkRXP = uRxCoins * 100 / MkRx


let gP = ""
let gA = ""
let gF = ""
let gBBL = ""
let gO = ""
let gPL = ""
let gBC = ""
let gD = ""
let gPT = ""
let gBCAB = ""
let gPNP = ""
let gBS = ""
let jP = ""
let jA = ""
let jF = ""
let jBBL = ""
let jO = ""
let jPL = ""
let jBC = ""
let jD = ""
let jPT = ""
let jBCAB = ""
let jPNP = ""
let jBS = ""
let qP = ""
let qA = ""
let qF = ""
let qBBL = ""
let qO = ""
let qPL = ""
let qBC = ""
let qD = ""
let qPT = ""
let qBCAB = ""
let qPNP = ""
let qBS = ""
let qRX = ""
let WP = ""
let WA = ""
let WF = ""
let WBBL = ""
let WO = ""
let WPL = ""
let WBC = ""
let WD = ""
let WPT = ""
let WBCAB = ""
let WPNP = ""
let WBS = ""
let WRX = ""
let KRX = ""
let KBCAB = ""
let KPO = ""
let KPN = ""
if(cBBLP > 100){
  cBBLP = 100
}
if(cPTP > 100){
  cPTP = 100
}
if(cBSP > 100){
  cBSP = 100
}
if(cBCABP > 100){
  cBCABP = 100
}
if(cPNP > 100){
  cPNP = 100
}
if(cOP > 100){
  cOP = 100
}
if(cPLP > 100){
  cPLP = 100
}
if(cBCP > 100){
  cBCP = 100
}
if(cDP > 100){
  cDP = 100
}
if(cPP > 100){
  cPP = 100
}
if(cAP > 100){
  cAP = 100
}
if(cFP > 100){
  cFP = 100
}
if(cRXP > 100){
  cRXP = 100
}
if(mBBLP > 100){
  mBBLP = 100
}
if(mPTP > 100){
  mPTP = 100
}
if(mBSP > 100){
  mBSP = 100
}
if(mBCABP > 100){
  mBCABP = 100
}
if(mPNP > 100){
  mPNP = 100
}
if(mOP > 100){
  mOP = 100
}
if(mPLP > 100){
  mPLP = 100
}
if(mBCP > 100){
  mBCP = 100
}
if(mDP > 100){
  mDP = 100
}
if(mPP > 100){
  mPP = 100
}
if(mAP > 100){
  mAP = 100
}
if(mFP > 100){
  mFP = 100
}
if(mRXP > 100){
  mRXP = 100
}
if(hBBLP > 100){
  hBBLP = 100
}
if(hPTP > 100){
  hPTP = 100
}
if(hBSP > 100){
  hBSP = 100
}
if(hBCABP > 100){
  hBCABP = 100
}
if(hPNP > 100){
  hPNP = 100
}
if(hOP > 100){
  hOP = 100
}
if(hPLP > 100){
  hPLP = 100
}
if(hBCP > 100){
  hBCP = 100
}
if(hDP > 100){
  hDP = 100
}
if(hPP > 100){
  hPP = 100
}
if(hAP > 100){
  hAP = 100
}
if(hFP > 100){
  hFP = 100
}
if(bPo > 100){
  bPo = 100
}
if(bRx > 100){
  bRx = 100
}
if(hRXP > 100){
  hRXP = 100
}
if(nBBLP > 100){
  nBBLP = 100
}
if(nPTP > 100){
  nPTP = 100
}
if(nBSP > 100){
  nBSP = 100
}
if(nBCABP > 100){
  nBCABP = 100
}
if(nPNP > 100){
  nPNP = 100
}
if(nOP > 100){
  nOP = 100
}
if(nPLP > 100){
  nPLP = 100
}
if(nBCP > 100){
  nBCP = 100
}
if(nDP > 100){
  nDP = 100
}
if(nPP > 100){
  nPP = 100
}
if(nAP > 100){
  nAP = 100
}
if(nFP > 100){
  nFP = 100
}
if(nRXP > 100){
  nRXP = 100
}
if(TpPNP > 100){
  TpPNP = 100
}
if(TpBCABP > 100){
  TpBCABP = 100
}
if(TpRxP > 100){
  TpRxP = 100
}
if(TpPoP > 100){
  TpPoP = 100
}

if(GkPP > 100){
  GkPP = 100
}
if(GkAP > 100){
  GkAP = 100
}
if(GkFP > 100){
  GkFP = 100
}
if(GkOP > 100){
  GkOP = 100
}

if(GkPLP > 100){
  GkPLP = 100
}
if(GkDP > 100){
  GkDP = 100
}
if(GkPTP > 100){
  GkPTP = 100
}
if(GkPNP > 100){
  GkPNP = 100
}
if(GkRXP > 100){
  GkRXP = 100
}
if(PkBSP > 100){
  PkBSP = 100
}
if(PkBBLP > 100){
  PkBBLP = 100
}
if(PkBCP > 100){
  PkBCP = 100
}
if(PkBCABP > 100){
  PkBCABP = 100
}
if(PkRXP > 100){
  PkRXP = 100
}

if(MaoPi > 100){
  MaoPi = 100
}
if(MaoFer > 100){
  MaoFer = 100
}
if(MaoAcier > 100){
  MaoAcier = 100
}
if(MaoBS > 100){
  MaoBS = 100
}
if(MaoBC > 100){
  MaoBC = 100
}
if(MaoBbl > 100){
  MaoBbl = 100
}
if(MaoGW > 100){
  MaoGW = 100
}
if(MaoPN > 100){
  MaoPN = 100
}
if(MaoRx > 100){
  MaoRx = 100
}
if(MaoParchemin > 100){
  MaoParchemin = 100
}


if(VaoPi > 100){
  VaoPi = 100
}
if(VaoFer > 100){
  VaoFer = 100
}
if(VaoAcier > 100){
  VaoAcier = 100
}
if(VaoGold > 100){
  VaoGold = 100
}
if(VaoPlatine > 100){
  VaoPlatine = 100
}
if(VaoDiam > 100){
  VaoDiam = 100
}
if(VaoPluto > 100){
  VaoPluto = 100
}

if(VaoBS > 100){
  VaoBS = 100
}
if(VaoBC > 100){
  VaoBC = 100
}
if(VaoBbl > 100){
  VaoBbl = 100
}
if(VaoGW > 100){
  VaoGW = 100
}
if(VaoPN > 100){
  VaoPN = 100
}
let PPi = ""
let PPa = ""
let PPf = ""
let PPo = ""
let PPl = ""
let PPd = ""
let PPt = ""
let PPn = ""
let PBs = ""
let PBc = ""
let PBca = ""
let PBBl = ""
let QPi = ""
let QPa = ""
let QPf = ""
let QPo = ""
let QPl = ""
let QPd = ""
let QPt = ""
let QPn = ""
let QBs = ""
let QBc = ""
let QBca = ""
let QBBl = ""
let SPi = ""
let SPa = ""
let SPf = ""
let SPo = ""
let SPl = ""
let SPd = ""
let SPt = ""
let SPn = ""
let SBs = ""
let SBc = ""
let SBca = ""
let SBBl = ""
let SRX = ""
let APi = ""
let APa = ""
let APf = ""
let APo = ""
let APl = ""
let APd = ""
let APt = ""
let APn = ""
let ABs = ""
let ABc = ""
let ABca = ""
let ABBl = ""
let ARX = ""
let RRX = ""
let RPN = ""
let RBCAB = ""
let RPO = ""

let CitPi = ""
let ExoPi = ""
let RuPi = ""
let CitA = ""
let ExoA = ""
let RuA = ""
let CitFe = ""
let ExoFe = ""
let RuFe = ""
let CitO = ""
let ExoO = ""
let RuO = ""
let CitPl = ""
let ExoPl = ""
let RuPl = ""
let CitDi = ""
let ExoDi = ""
let RuDi = ""
let CitPt = ""
let ExoPt = ""
let RuPt = ""
let CitPn = ""
let ExoPn = ""
let RuPn = ""
let CitRx = ""
let ExoRx = ""
let RuRx = ""



let KitPi = ""
let KitAcier = ""
let KitFer = ""
let KitPN = ""
let KitBS = ""
let KitBbl = ""
let KitBC = ""
let KitGW = ""
let KitRx = ""
let KitParchemin = ""
let XioPi = ""
let XioAcier = ""
let XioFer = ""
let XioPN = ""
let XioBS = ""
let XioBbl = ""
let XioBC = ""
let XioGW = ""
let XioRx = ""
let XioParchemin = ""
let KyoPi = ""
let KyoAcier = ""
let KyoFer = ""
let KyoPN = ""
let KyoRx = ""
let KyoBS = ""
let KyoBbl = ""
let KyoBC = ""
let KyoGW = ""
let KyoParchemin = ""
let SitBS = ""
let OxoBS = ""
let ReBS = ""
let SitBBL = ""
let OxoBBL = ""
let ReBBL = ""
let SitBC = ""
let OxoBC = ""
let ReBC = ""
let SitGW = ""
let OxoGW = ""
let ReGW = ""
let SitRx = ""
let OxoRx = ""
let ReRx = ""
let SomPi = ""
let BloPi = ""
let RloPi = ""
let SomFe = ""
let BloFe = ""
let RloFe = ""
let SomAc = ""
let BloAc = ""
let RloAc = ""
let SomOr = ""
let BloOr = ""
let RloOr = ""
let SomPla = ""
let BloPla = ""
let RloPla = ""
let SomPlu = ""
let BloPlu = ""
let RloPlu = ""
let SomDi = ""
let BloDi = ""
let RloDi = ""
let SomPN = ""
let BloPN = ""
let RloPN = ""
let SomBS = ""
let BloBS = ""
let RloBS = ""
let SomBC = ""
let BloBC = ""
let RloBC = ""
let SomBbl = ""
let BloBbl = ""
let RloBbl = ""
let SomGW = ""
let BloGW = ""
let RloGW = ""


if(uforge >= 0) {
  SomPi = `\n${emotepierre} ~ Pierres: `
  BloPi = `(${Math.trunc(VaoPi)}%)`
  RloPi = `${millify(foPi, 1)}`
  SomAc = `\n${emoteacier} ~ Acier: `
  BloAc = `(${Math.trunc(VaoAcier)}%)`
  RloAc = `${millify(foAc, 1)}`

  SomFe = `\n${emotefer} ~ Fer: `
  BloFe = `(${Math.trunc(VaoFer)}%)`
  RloFe = `${millify(foFe, 1)}`

  SomOr = `\n${emoteor} ~ Or: `
  BloOr = `(${Math.trunc(VaoGold)}%)`
  RloOr = `${millify(foOr, 1)}`

  SomPla= `\n${emoteplatine} ~ Platine: `
  BloPla = `(${Math.trunc(VaoPlatine)}%)`
  RloPla = `${millify(foPla, 1)}`
  SomPlu= `\n${emotepluto} ~ Plutonium: `
  BloPlu = `(${Math.trunc(VaoPluto)}%)`
  RloPlu = `${millify(foPlu, 1)}`
  SomDi= `\n${emotediamant} ~ Diamant: `
  BloDi = `(${Math.trunc(VaoDiam)}%)`
  RloDi = `${millify(foDi, 1)}`
  SomPN= `\n${emotePN} ~ Pierres noire: `
  BloPN = `(${Math.trunc(VaoPN)}%)`
  RloPN = `${millify(foPN, 1)}`
  SomBS = `\n${emotebs} ~ Bois de sapin: `
  BloBS = `(${Math.trunc(VaoBS)}%)`
  RloBS = `${millify(foBS, 1)}`
  SomBC = `\n${emotebc} ~ Bois de chêne: `
  BloBC = `(${Math.trunc(VaoBC)}%)`
  RloBC = `${millify(foBC, 1)}`
  
  SomBbl = `\n${emotebbl} ~ Bois de bouleau: `
  BloBbl = `(${Math.trunc(VaoBC)}%)`
  RloBbl = `${millify(foBC, 1)}`
  SomGW = `\n${emotegwood} ~ Bois doré: `
  BloGW = `(${Math.trunc(VaoGW)}%)`
  RloGW = `${millify(foGW, 1)}`
  

}
if(uatelier >= 0){
  KitPi = `\n${emotepierre} ~ Pierres: `
  KyoPi = `(${Math.trunc(MaoPi)}%)`
  XioPi = `${millify(AtPi, 1)}`

  KitBS = `\n${emotebs} ~ Bois de sapin: `
  KyoBS = `(${Math.trunc(MaoBS)}%)`
  XioBS = `${millify(AtBS, 1)}`

  KitRx = `\n${RXemote} ~ RxCoins: `
  KyoRx = `(${Math.trunc(MaoRx)}%)`
  XioRx = `${millify(AtRx, 1)}`
}
if(uatelier > 0){
  KitParchemin = `\n${emoteparcheminvierge} ~ Parchemins totaux nécessaires: `
  KyoParchemin = `(${Math.trunc(MaoParchemin)}%)`
  XioParchemin = `${millify(Atnecessaire, 1)}`
}
if(uatelier >= 4){
  KitAcier = `\n${emoteacier} ~ Acier: `
  KyoAcier = `(${Math.trunc(MaoAcier)}%)`
  XioAcier = `${millify(AtAcier, 1)}`
  KitBbl = `\n${emotebbl} ~ Bois de bouleau: `
  KyoBbl = `(${Math.trunc(MaoBbl)}%)`
  XioBbl = `${millify(AtBbl, 1)}`

}
if(uatelier >= 5){
  KitFer = `\n${emotefer} ~ Fer: `
  KyoFer = `(${Math.trunc(MaoFer)}%)`
  XioFer = `${millify(AtFer, 1)}`
}
if(uatelier >= 7){
  KitBC = `\n${emotebc} ~ Bois de chêne: `
  KyoBC = `(${Math.trunc(MaoBC)}%)`
  XioBC = `${millify(AtBC, 1)}`
  KitGW = `\n${emotegwood} ~ Bois doré: `
  KyoGW = `(${Math.trunc(MaoGW)}%)`
  XioGW = `${millify(AtGW, 1)}`
  KitPN = `\n${emotePN} ~ Pierres noires: `
  KyoPN = `(${Math.trunc(MaoPN)}%)`
  XioPN = `${millify(AtPN, 1)}`
}
if(uEpee > 0){
  CitPi = `\n${emotepierre} ~ Pierres: `
  ExoPi = `(${Math.trunc(GkPP)}%)`
  RuPi = `${millify(NkPierre, 1)}`
}
if(uBouclier > 0){
  SitBS = `\n${emotebs} ~ Bois de sapin: `
  OxoBS = `(${Math.trunc(PkBSP)}%)`
  ReBS = `${millify(MkBS, 1)}`
}
if(uBouclier >= 9){
  SitBBL = `\n${emotebbl} ~ Bois de bouleau: `
  OxoBBL = `(${Math.trunc(PkBBLP)}%)`
  ReBBL = `${millify(MkBbl, 1)}`
  SitBC = `\n${emotebc} ~ Bois de chêne: `
  OxoBC = `(${Math.trunc(PkBCP)}%)`
  ReBC = `${millify(MkBC, 1)}`
  SitGW = `\n${emotegwood} ~ Bois doré: `
  OxoGW = `(${Math.trunc(PkBCABP)}%)`
  ReGW = `${millify(MkGW, 1)}`
  SitRx = `\n${RXemote} ~ RxCoins: `
  OxoRx = `(${Math.trunc(PkRXP)}%)`
  ReRx = `${millify(MkRx, 1)}`
}
if(uEpee >= 9){
  CitA = `\n${emoteacier} ~ Aciers: `
  ExoA = `(${Math.trunc(GkAP)}%)`
  RuA = `${millify(NkAcier, 1)}`
  CitFe = `\n${emotefer} ~ Fers: `
  ExoFe = `(${Math.trunc(GkFP)}%)`
  RuFe = `${millify(NkFer, 1)}`
  CitO = `\n${emoteor} ~ Or: `
  ExoO = `(${Math.trunc(GkOP)}%)`
  RuO = `${millify(NkOr, 1)}`
  CitPl = `\n${emoteplatine} ~ Platines: `
  ExoPl = `(${Math.trunc(GkPLP)}%)`
  RuPl = `${millify(NkPla, 1)}`
  CitDi = `\n${emotediamant} ~ Diamants: `
  ExoDi = `(${Math.trunc(GkDP)}%)`
  RuDi = `${millify(NkDi, 1)}`
  CitPt = `\n${emotepluto} ~ Plutoniums: `
  ExoPt = `(${Math.trunc(GkPTP)}%)`
  RuPt = `${millify(NkPluto, 1)}`
  CitPn = `\n${emotePN} ~ Pierres noires: `
  ExoPn = `(${Math.trunc(GkPNP)}%)`
  RuPn = `${millify(NkPN, 1)}`
  CitRx = `\n${RXemote} ~ RxCoins: `
  ExoRx = `(${Math.trunc(GkRXP)}%)`
  RuRx = `${millify(NkRx, 1)}`
}

if(uTimerReduc >= 0){
  CtBca = `\n${emotegwood} ~ Bois doré: `
  KBCAB = `(${Math.trunc(TpBCABP)}%)`
  RBCAB = `${millify(TiGWood, 1)}`
  CtPN = `\n${emotePN} ~ Pierres Noires: `
  KPN = `(${Math.trunc(TpPNP)}%)`
  RPN = `${millify(TiPN, 1)}`
  CtPo = `\n${POemote} ~ Pièces d'Or: `
  KPO = `(${Math.trunc(TpPoP)}%)`
  RPO = `${millify(TiPo, 1)}`
  CtRx = `\n${RXemote} ~ RxCoins: `
  KRX = `(${Math.trunc(TpRxP)}%)`
  RRX = `${millify(TiRx, 1)}`
}
let bsPo = ""
let BsPo = ""
let AsPo = ""
let bsRx = ""
let BsRx = ""
let AsRx = ""
let jRXP = ""
if(ubag >= 0){
  bsPo = `\n${POemote} ~ Pièces d'Or: `
  BsPo = `(${Math.trunc(bPo)}%)`
  AsPo = `${millify(SOPO, 1)}`
  bsRx = `\n${RXemote} ~ RxCoins: `
  BsRx = `(${Math.trunc(bRx)}%)`
  AsRx = `${millify(SORx, 1)}`

}

let BoostXPT = boostxpniveau + xBoostXP
if(uLooting >= 0){
  wP = `\n${emotepierre} ~ Pierres: `
  WP = `(${Math.trunc(nPP)}%)`
  APi = `${millify(Math.trunc(lPierre), 1)}`
  wA = `\n${emoteacier} ~ Aciers: `
  WA = `(${Math.trunc(nAP)}%)`
  APa = `${millify(Math.trunc(lAcier), 1)}`
  wBS = `\n${emotebs} ~ Bois de Sapin: `
  WBS = `(${Math.trunc(nBSP)}%)`
  ABs = `${millify(Math.trunc(lBS), 1)}`
}
if(uLooting >= 1){
  wFe = `\n${emotefer} ~ Fers: `
  WF = `(${Math.trunc(nFP)}%)`
  APf = `${millify(Math.trunc(lFer), 1)}`
  wBBl = `\n${emotebbl} ~ Bois de Bouleau: `
  WBBL = `(${Math.trunc(nBBLP)}%)`
  ABBl = `${millify(Math.trunc(lBbl), 1)}`

}
if(uLooting >= 2){
  wGo = `\n${emoteor} ~ Or: `
  WO = `(${Math.trunc(nOP)}%)`
  APo = `${millify(Math.trunc(lOr), 1)}`
  wPl = `\n${emoteplatine} ~ Platines: `
  WPL = `(${Math.trunc(nPLP)}%)`
  APl = `${millify(Math.trunc(lPla), 1)}`

}
if(uLooting >= 3){
  wBC = `\n${emotebc} ~ Bois de Chêne: `
  WBC = `(${Math.trunc(nBCP)}%)`
  ABc = `${millify(Math.trunc(lBC), 1)}`
  wDi = `\n${emotediamant} ~ Diamants: `
  WD = `(${Math.trunc(nDP)}%)`
  APd = `${millify(Math.trunc(lDi), 1)}`  
  wPt = `\n${emotepluto} ~ Plutoniums: `
  WPT = `(${Math.trunc(nPTP)}%)`
  APt = `${millify(Math.trunc(lPluto), 1)}`
  wPN = `\n${emotePN} ~ Pierres Noires: `
  WPNP = `(${Math.trunc(nPNP)}%)`
  APn = `${millify(Math.trunc(lPN), 1)}`
  wBca = `\n${emotegwood} ~ Bois doré: `
  WBCAB = `(${Math.trunc(nBCABP)}%)`
  ABca = `${millify(Math.trunc(lGW), 1)}`
  wRx = `\n${RXemote} ~ RxCoins: `
  WRX = `(${Math.trunc(nRXP)}%)`
  ARX = `${millify(lRx, 1)}`
}
if(uXPBoost >= 0){
  cP = `\n${emotepierre} ~ Pierres: `
  qP = `(${Math.trunc(cPP)}%)`
  SPi = `${millify(Math.trunc(xPierre), 1)}`
  cA = `\n${emoteacier} ~ Aciers: `
  qA = `(${Math.trunc(cAP)}%)`
  SPa = `${millify(Math.trunc(xAcier), 1)}`
  cBS = `\n${emotebs} ~ Bois de Sapin: `
  qBS = `(${Math.trunc(cBSP)}%)`
  SBs = `${millify(Math.trunc(xBS), 1)}`
}
if(uXPBoost >= 3){
  cBBl = `\n${emotebbl} ~ Bois de Bouleau: `
  qBBL = `(${Math.trunc(cBBLP)}%)`
  SBBl = `${millify(Math.trunc(xBbl), 1)}`

}
if(uXPBoost >= 4){
  cFe = `\n${emotefer} ~ Fers: `
  qF = `(${Math.trunc(cFP)}%)`
  SPf = `${millify(Math.trunc(xFer), 1)}`

}
if(uXPBoost >= 6){
  cGo = `\n${emoteor} ~ Or: `
  qO = `(${Math.trunc(cOP)}%)`
  SPo = `${millify(Math.trunc(xOr), 1)}`

}
if(uXPBoost >= 7){
  cPl = `\n${emoteplatine} ~ Platines: `
  qPL = `(${Math.trunc(cPLP)}%)`
  SPl = `${millify(Math.trunc(xPla), 1)}`

}
if(uXPBoost >= 8){
  cBC = `\n${emotebc} ~ Bois de Chêne: `
  qBC = `(${Math.trunc(cBCP)}%)`
  SBc = `${millify(Math.trunc(xBC), 1)}`

}
if(uXPBoost >= 9){
  cDi = `\n${emotediamant} ~ Diamants: `
  qD = `(${Math.trunc(cDP)}%)`
  SPd = `${millify(Math.trunc(xDi), 1)}`
  cPt = `\n${emotepluto} ~ Plutoniums: `
  qPT = `(${Math.trunc(cPTP)}%)`
  SPt = `${millify(Math.trunc(xPluto), 1)}`
  cPN = `\n${emotePN} ~ Pierres Noires: `
  qPNP = `(${Math.trunc(cPNP)}%)`
  SPn = `${millify(Math.trunc(xPN), 1)}`
  cBca = `\n${emotegwood} ~ Bois doré: `
  qBCAB = `(${Math.trunc(cBCABP)}%)`
  SBca = `${millify(Math.trunc(xGW), 1)}`

}
if(uXPBoost >= 10){
  cRx = `\n${RXemote} ~ RxCoins: `
  qRX = `(${Math.trunc(cRXP)}%)`
  SRX = `${millify(xRx, 1)}`

}
if(uForeuse >= 1){
  mP = `\n${emotepierre} ~ Pierres: `
  gP = `(${Math.trunc(mPP)}%)`
  PPi = `${millify(pPierre, 1)}`
}
if(uHache >= 1){
  vBS = `\n${emotebs} ~ Bois de Sapin: `
  jBS = `(${Math.trunc(hBSP)}%)`
  QBs = `${millify(hBS, 1)}`
}
if(uHache >= 5){
  vP = `\n${emotepierre} ~ Pierres: `
  jP = `(${Math.trunc(hPP)}%)`
  QPi = `${millify(hPierre, 1)}`
}
if(uForeuse >= 7){
  mA = `\n${emoteacier} ~ Aciers: `
  gA = `(${Math.trunc(mAP)}%)`
  PPa = `${millify(pAcier, 1)}`
}
if(uHache >= 10){
  vA = `\n${emoteacier} ~ Aciers: `
  jA = `(${Math.trunc(hAP)}%)`
  QPa = `${millify(hAcier, 1)}`
}
if(uForeuse >= 10){
  mBS = `\n${emotebs} ~ Bois de sapin: `
  gBS = `(${Math.trunc(mBSP)}%)`
  PBs = `${millify(pBS, 1)}`
}
if(uForeuse >= 14){
  mFe = `\n${emotefer} ~ Fers: `
  gF = `(${Math.trunc(mFP)}%)`
  PPf = `${millify(pFer, 1)}`
}
if(uHache >= 15){
  vFe = `\n${emotefer} ~ Fers: `
  jF = `(${Math.trunc(hFP)}%)`
  QPf = `${millify(hFer, 1)}`
}
if(uHache >= 20){
  vBBl = `\n${emotebbl} ~ Bois de bouleau: `
  jBBL = `(${Math.trunc(hBBLP)}%)`
  QBBl = `${millify(hBBl, 1)}`
}
if(uForeuse >= 20){
  mBBl = `\n${emotebbl} ~ Bois de bouleau: `
  gBBL = `(${Math.trunc(mBBLP)}%)`
  PBBl = `${millify(pBBl, 1)}`
}
if(uForeuse >= 25){
  mGo = `\n${emoteor} ~ Or: `
  gO = `(${Math.trunc(mOP)}%)`
  PPo = `${millify(pGold, 1)}`
}
if(uHache >= 25){
  vGo = `\n${emoteor} ~ Or: `
  jO = `(${Math.trunc(hOP)}%)`
  QPo = `${millify(hGold, 1)}`
}
if(uForeuse >= 35){
  mPl = `\n${emoteplatine} ~ Platine: `
  gPL = `(${Math.trunc(mPLP)}%)`
  PPl = `${millify(pP, 1)}`
}
if(uHache >= 35){
  vPl = `\n${emoteplatine} ~ Platine: `
  jPL = `(${Math.trunc(hPLP)}%)`
  QPl = `${millify(hP, 1)}`
}
if(uForeuse >= 41){
  mBC = `\n${emotebc} ~ Bois de chêne: `
  gBC = `(${Math.trunc(mBCP)}%)`
  PBc = `${millify(pBC, 1)}`
}
if(uForeuse >= 44){
  mDi = `\n${emotediamant} ~ Diamants: `
  gD = `(${Math.trunc(mDP)}%)`
  PPd = `${millify(pDiam, 1)}`
}
if(uHache >= 47){
  vBC = `\n${emotebc} ~ Bois de chêne: `
  jBC = `(${Math.trunc(hBCP)}%)`
  QBc = `${millify(hBC, 1)}`
  vDi = `\n${emotediamant} ~ Diamants: `
  jD = `(${Math.trunc(hDP)}%)`
  QPd = `${millify(hDiam, 1)}`
}
if(uForeuse >= 65){
  mPt = `\n${emotepluto} ~ Plutoniums: `
  mBca = `\n${emotegwood} ~ Bois doré: `
  gPT = `(${Math.trunc(mPTP)}%)`
  gBCAB = `(${Math.trunc(mBCABP)}%)`
  PPt = `${millify(pPluto, 1)}`
  PBca = `${millify(pBCab, 1)}`
}
if(uHache >= 65){
  vPt = `\n${emotepluto} ~ Plutoniums: `
  vBca = `\n${emotegwood} ~ Bois doré: `
  jPT = `(${Math.trunc(hPTP)}%)`
  jBCAB = `(${Math.trunc(hBCABP)}%)`
  QPt = `${millify(hPluto, 1)}`
  QBca = `${millify(hBCab, 1)}`
}
if(uForeuse >= 70){
  mPN = `\n${emotePN} ~ Pierres noires: `
  gPNP = `(${Math.trunc(mPNP)}%)`
  PPn = `${millify(pPN, 1)}`
}
if(uHache >= 70){
  vPN = `\n${emotePN} ~ Pierres noires: `
  jPNP = `(${Math.trunc(hPNP)}%)`
  QPn = `${millify(hPN, 1)}`
}
let gRXP = ""
let PRx = ""
if(uForeuse >= 80) {
  mRx = `\n${RXemote} ~ RxCoins: `
  gRXP = `(${Math.trunc(mRXP)}%)`
  PRx = `${millify(pRx, 1)}`
}
if(uHache >= 75) {
  vRx = `\n${RXemote} ~ RxCoins:`
  jRXP = `(${Math.trunc(hRXP)}%)`
  QRx = `${millify(hRx, 1)}`
}
let emoteetoile = ""

if(uetoilef === 1) {
   emoteetoile = ":zap:"
   };
if(uetoilef === 2) {
   emoteetoile = ":dizzy:"
};
if(uetoilef === 3) {
   emoteetoile = ":sparkles:"
   };
if(uetoilef === 4) {
   emoteetoile = ":star:"
   };
if(uetoilef === 5) {
   emoteetoile = ":star2:"
   };
if(uetoilef === 6) {
   emoteetoile = ":boom:"
   };
let hemoteetoile = ""


 if(uetoileh === 1) {
    hemoteetoile = ":zap:"
    };
 if(uetoileh === 2) {
    hemoteetoile = ":dizzy:"
 };
 if(uetoileh === 3) {
    hemoteetoile = ":sparkles:"
    };
 if(uetoileh === 4) {
    hemoteetoile = ":star:"
    };
 if(uetoileh === 5) {
    hemoteetoile = ":star2:"
    };
 if(uetoileh === 6) {
    hemoteetoile = ":boom:"
    };
let placemax = 1 + (2*ubag*(ubag/2))
let mniv = uEpee + 1
let knid = uBouclier + 1
if(
  includesRealy(message, `!upgrade atelier`) ||
  includesRealy(message, `!up atelier`) ||
  includesRealy(message, `!upg atelier`) ||
  includesRealy(message, `!upgrade Atelier`) ||
  includesRealy(message, `!up Atelier`) ||
  includesRealy(message, `!upg Atelier`) ||
  includesRealy(message, `!upgrade ATELIER`) ||
  includesRealy(message, `!up ATELIER`) ||
  includesRealy(message, `!upg ATELIER`) 


) {
   if(uatelier >= 10) message.channel.send("Batiment maxé");
   if(uatelier < 10 && uclassen > 0) {
   message.channel.send(`:house: | Votre **Atelier** est niveau ${uatelier}.\nPour l'améliorer au niveau ${uatelier+1} il te faut:\n${KitPi}${XioPi} ${KyoPi}${KitAcier}${XioAcier} ${KyoAcier}${KitBS}${XioBS} ${KyoBS}${KitFer}${XioFer} ${KyoFer}${KitBbl}${XioBbl} ${KyoBbl}${KitBC}${XioBC} ${KyoBC}${KitGW}${XioGW} ${KyoGW}${KitPN}${XioPN} ${KyoPN}${KitRx}${XioRx} ${KyoRx} ${KitParchemin}${XioParchemin} ${KyoParchemin}`)
   message.channel.send(`Ecris **!uc Atelier** pour améliorer ce batiment`);
   }
};
if(
  includesRealy(message, `!upgrade forge`) ||
  includesRealy(message, `!up forge`) ||
  includesRealy(message, `!upg forge`) ||
  includesRealy(message, `!upgrade Forge`) ||
  includesRealy(message, `!up Forge`) ||
  includesRealy(message, `!upg Forge`) ||
  includesRealy(message, `!upgrade FORGE`) ||
  includesRealy(message, `!up FORGE`) ||
  includesRealy(message, `!upg FORGE`) 


) {
   if(uforge >= 5) message.channel.send("Batiment maxé");
   if(uforge < 5 && uclassen > 0) {
   message.channel.send(`:hammer_pick: | Votre **Forge** est niveau ${uforge}.\nPour l'améliorer au niveau ${uforge+1} il te faut:${SomPi}${RloPi} ${BloPi}${SomAc}${RloAc} ${BloAc}${SomFe}${RloFe} ${BloFe}${SomOr}${RloOr} ${BloOr}${SomPla}${RloPla} ${BloPla}${SomDi}${RloDi} ${BloDi}${SomPlu}${RloPlu} ${BloPlu}${SomPN}${RloPN} ${BloPN} ${SomBS}${RloBS} ${BloBS} ${SomBbl}${RloBbl} ${BloBbl} ${SomBC}${RloBC} ${BloBC}${SomGW}${RloGW} ${BloGW}`)
   message.channel.send(`Ecris **!uc Forge** pour améliorer ce batiment`);
   }
};
    if(
      includesRealy(message, `!upgrade ${asw}`) ||
      includesRealy(message, `!up ${asw}`) ||
      includesRealy(message, `!upg ${asw}`) ||
      includesRealy(message, `!upgrade ${aswmaj}`) ||
      includesRealy(message, `!up ${aswmaj}`) ||
      includesRealy(message, `!upg ${aswmaj}`) ||
      includesRealy(message, `!upgrade ${Sname}`) ||
      includesRealy(message, `!up ${Sname}`) ||
      includesRealy(message, `!upg ${Sname}`) 
    
    
    ) {
       if(uEpee >= 25) message.channel.send("Objet maxé");
       if(uEpee < 25 && uclassen > 0) {
       message.channel.send(`${semote} | Votre **${Sname}** est niveau ${uEpee}.\nPour l'améliorer au niveau ${mniv} il te faut:${CitPi}${RuPi} ${ExoPi}${CitA}${RuA} ${ExoA}${CitFe}${RuFe} ${ExoFe}${CitO}${RuO} ${ExoO}${CitPl}${RuPl} ${ExoPl}${CitDi}${RuDi} ${ExoDi}${CitPt}${RuPt} ${ExoPt}${CitPn}${RuPn} ${ExoPn}${CitRx}${RuRx} ${ExoRx}`)
       message.channel.send(`Ecris **!uc ${Sname}** pour améliorer cet objet`);
       }
    };
    if(
      includesRealy(message, `!upgrade ${ash}`) ||
      includesRealy(message, `!up ${ash}`) ||
      includesRealy(message, `!upg ${ash}`) ||
      includesRealy(message, `!upgrade ${ashmaj}`) ||
      includesRealy(message, `!up ${ashmaj}`) ||
      includesRealy(message, `!upg ${ashmaj}`) ||
      includesRealy(message, `!upgrade ${Bname}`) ||
      includesRealy(message, `!up ${Bname}`) ||
      includesRealy(message, `!upg ${Bname}`) 
    
    
    ) {
       if(uBouclier >= 25) message.channel.send("Objet maxé");
       if(uBouclier < 25 && uclassen > 0) {
       message.channel.send(`${shemote} | Votre **${Bname}** est niveau ${uBouclier}.\nPour l'améliorer au niveau ${knid} il te faut:${SitBS}${ReBS} ${OxoBS}${SitBBL}${ReBBL} ${OxoBBL}${SitBC}${ReBC} ${OxoBC}${SitGW}${ReGW} ${OxoGW}${SitRx}${ReRx} ${OxoRx}`)
       message.channel.send(`Ecris **!uc ${Bname}** pour améliorer cet objet`);
       }
    };



    if(message.content === "!up sac" || message.content === "!upgrade sac" || message.content === "!up bag" || message.content === "!upgrade bag") {
       if(ubag >= 10) message.channel.send("Objet maxé");
       if(ubag < 10 && uclassen > 0) {
       message.channel.send(`${bagemote} | Votre **Sac** est niveau ${ubag}.\nPour l'améliorer au niveau ${ubag+1} il te faut:${bsPo}${AsPo} ${BsPo}${bsRx}${AsRx} ${BsRx}`)
       message.channel.send(`Ecris **!uc Sac** pour améliorer cet objet`);
       }
    }

    if(
      includesRealy(message, `!upgrade Looting`) ||
      includesRealy(message, `!up Looting`) ||
      includesRealy(message, `!up looting`) ||
      includesRealy(message, `!upg looting`) ||
      includesRealy(message, `!upgrade looting`) ||
      includesRealy(message, `!up Lo`) ||
      includesRealy(message, `!upg Lo`) ||
      includesRealy(message, `!upgrade Lo`) ||
      includesRealy(message, `!up lo`) ||
      includesRealy(message, `!upg lo`) ||
      includesRealy(message, `!upgrade l`) ||
      includesRealy(message, `!upg Looting`)
    
     ) {
       if(uLooting >= 20) message.channel.send("Objet maxé");
       if(uLooting < 20 && uclassen > 0) {
       message.channel.send(`${emotelooting} | Votre **Looting** est niveau ${uLooting}.\nPour l'améliorer au niveau ${lniv} il te faut:${wP}${APi} ${WP}${wA}${APa} ${WA}${wBS}${ABs} ${WBS}${wFe}${APf} ${WF}${wBBl}${ABBl} ${WBBL}${wGo}${APo} ${WO}${wPl}${APl} ${WPL}${wBC}${ABc} ${WBC}${wDi}${APd} ${WD}${wBca}${ABca} ${WBCAB}${wPt}${APt} ${WPT}${wPN}${APn} ${WPNP}${wRx}${ARX} ${WRX}`)
       message.channel.send(`Ecris **!uc Looting** pour améliorer cet objet`);
       }
    }
    if(
      includesRealy(message, `!upgrade TimerReduc`) ||
      includesRealy(message, `!up TimerReduc`) ||
      includesRealy(message, `!up timerreduc`) ||
      includesRealy(message, `!upgrade T`) ||
      includesRealy(message, `!up T`) ||
      includesRealy(message, `!up t`) ||
      includesRealy(message, `!upgrade t`) ||
      includesRealy(message, `!upg timerreduc`) ||
      includesRealy(message, `!upgrade Timerreduc`) ||
      includesRealy(message, `!upg Timerreduc`)
    
     ) {
       if(uTimerReduc >= 10) message.channel.send("Objet maxé");
       if(uTimerReduc < 10 && uclassen > 0) {
       message.channel.send(`${emotetimer} | Votre **TimerReduc** est niveau ${uTimerReduc}.\nPour l'améliorer au niveau ${Tniv} il te faut:${CtBca}${RBCAB} ${KBCAB}${CtPN}${RPN} ${KPN}${CtPo}${RPO} ${KPO}${CtRx}${RRX} ${KRX}`)
       message.channel.send(`Ecris **!uc TimerReduc** pour améliorer cet objet`);
       }
    }
if(
  includesRealy(message, `!upgrade ${Fname}`) ||
  includesRealy(message, `!up ${Fname}`) ||
  includesRealy(message, `!upg ${Fname}`) ||
  includesRealy(message, `!upgrade ${afo}`) ||
  includesRealy(message, `!up ${afo}`) ||
  includesRealy(message, `!upg ${afo}`) ||
  includesRealy(message, `!upgrade ${afomaj}`) ||
  includesRealy(message, `!up ${afomaj}`) ||
  includesRealy(message, `!upg ${afomaj}`)


 ) {
   if(uForeuse >= 100) message.channel.send("Objet maxé");
   if(uForeuse < 100 && uclassen > 0) {
   message.channel.send(`${femote} | Votre **${Fname}** est niveau ${uForeuse}.\nPour l'améliorer au niveau ${univ} il te faut:${mP}${PPi} ${gP}${mA}${PPa} ${gA}${mBS}${PBs} ${gBS}${mFe}${PPf} ${gF}${mBBl}${PBBl} ${gBBL}${mGo}${PPo} ${gO}${mPl}${PPl} ${gPL}${mBC}${PBc} ${gBC}${mDi}${PPd} ${gD}${mBca}${PBca} ${gBCAB}${mPt}${PPt} ${gPT}${mPN}${PPn} ${gPNP}${mRx}${PRx} ${gRXP}`)
   message.channel.send(`Ecris **!uc ${Fname}** pour améliorer cet objet`);
   }
}
if(
  includesRealy(message, `!upgrade ${Hname}`) ||
  includesRealy(message, `!up ${Hname}`) ||
  includesRealy(message, `!upg ${Hname}`) ||
  includesRealy(message, `!upgrade ${ahamaj}`) ||
  includesRealy(message, `!up ${ahamaj}`) ||
  includesRealy(message, `!upg ${ahamaj}`) ||
  includesRealy(message, `!upgrade ${aha}`) ||
  includesRealy(message, `!up ${aha}`) ||
  includesRealy(message, `!upg ${aha}`) 


) {
   if(uHache >= 100) message.channel.send("Objet maxé");
   if(uHache < 100 && uclassen > 0) {
   message.channel.send(`${hemote} | Votre **${Hname}** est niveau ${uHache}.\nPour l'améliorer au niveau ${vniv} il te faut:${vA}${QPa} ${jA}${vBS}${QBs} ${jBS}${vP}${QPi} ${jP}${vFe}${QPf} ${jF}${vBBl}${QBBl} ${jBBL}${vGo}${QPo} ${jO}${vPl}${QPl} ${jPL}${vBC}${QBc} ${jBC}${vDi}${QPd} ${jD}${vBca}${QBca} ${jBCAB}${vPt}${QPt} ${jPT}${vPN}${QPn} ${jPNP}${vRx}${QRx} ${jRXP}`)
   message.channel.send(`Ecris **!uc ${Hname}** pour améliorer cet objet`);
   }
};
if(
  includesRealy(message, `!upgrade XPBoost`) ||
  includesRealy(message, `!up XPBoost`) ||
  includesRealy(message, `!up xpboost`) ||
  includesRealy(message, `!upgrade x`) ||
  includesRealy(message, `!upgrade X`) ||
  includesRealy(message, `!up X`) ||
  includesRealy(message, `!up x`) ||
  includesRealy(message, `!upgrade xpboost`) ||
  includesRealy(message, `!upg x`) ||
  includesRealy(message, `!upg X`) ||
  includesRealy(message, `!upg xpboost`) ||
  includesRealy(message, `!upg XPBoost`)
) {
   if(uXPBoost >= 50) message.channel.send("Objet maxé");
   if(uXPBoost < 50 && uclassen > 0) {
   message.channel.send(`${emotexpboost} | Votre **XPBoost** est niveau ${uXPBoost}.\nPour l'améliorer au niveau ${xniv} il te faut:${cP}${SPi} ${qP}${cA}${SPa} ${qA}${cBS}${SBs} ${qBS}${cFe}${SPf} ${qF}${cBBl}${SBBl} ${qBBL}${cGo}${SPo} ${qO}${cPl}${SPl} ${qPL}${cBC}${SBc} ${qBC}${cDi}${SPd} ${qD}${cBca}${SBca} ${qBCAB}${cPt}${SPt} ${qPT}${cPN}${SPn} ${qPNP}${cRx}${SRX} ${qRX}`)
   message.channel.send(`Ecris **!uc XPBoost** pour améliorer cet objet`);
   }
};

let number = 10;
let number2 = 15
let pnumber = 1000
let pnumber2 = 2500

if(message.content === "!uc sac" || message.content === "!uc bag"){
 if(ubag >= 10) return message.channel.send("Niveau maximal atteint.");
 if(uclassen === 0) return message.channel.send("--> !classe");
 if(uRxCoins < SORx || uPieceor < SOPO ) return message.channel.send(`a`)
 if(ubag < 10 && uRxCoins >= SORx && uPieceor >= SOPO  && uclassen > 0)
 Pieceor[message.author.id] = {
   Pieceor: uPieceor - SOPO
 };

 RxCoins[message.author.id] = {
   RxCoins: uRxCoins - SORx
 };

 
 xp[message.author.id] = {
   xp: xpactuel + (8000*(1+ubag))
   };
   bag[message.author.id] = {
      bag: ubag + 1
    };
 fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
   if (err) console.log(err)
 });
 fs.writeFile("./RxCoins.json", JSON.stringify(RxCoins), (err) => {
   if (err) console.log(err)
 });
 fs.writeFile("./experience.json", JSON.stringify(xp), (err) => {
  if (err) console.log(err)
    });
    fs.writeFile("./bag.json", JSON.stringify(bag), (err) => {
      if (err) console.log(err)
    });

message.channel.send(`${message.author.username}, ton objet Sac ${bagemote} a été amélioré au niveau **${ubag+1}**\nNote: Pour utiliser le sac, faites ${trucbizarre}!sac${trucbizarre}`)
}
if( 
  includesRealy(message, `!uc at`) ||
  includesRealy(message, `!uc AT`) ||
  includesRealy(message, `!uc At`)

){
 if(uatelier >= 10) return message.channel.send("Niveau maximal atteint.");
 if(uclassen === 0) return message.channel.send("--> !classe");
 if(uRxCoins < AtRx || uPierre < AtPi || uAcier < AtAcier || uFer < AtFer || uPierreNoire < AtPN || uBoisdeSapin < AtBS || uBoisdeBouleau < AtBbl || uBoisdeChêne < AtBC || uBoisDoré < AtGW || utotal_parchemin < Atnecessaire) return message.channel.send(`Pour améliorer l'atelier :house: au niveau ${uatelier+1} il te faut:${KitPi}${XioPi} ${KyoPi}${KitAcier}${XioAcier} ${KyoAcier}${KitBS}${XioBS} ${KyoBS}${KitFer}${XioFer} ${KyoFer}${KitBbl}${XioBbl} ${KyoBbl}${KitBC}${XioBC} ${KyoBC}${KitGW}${XioGW} ${KyoGW}${KitPN}${XioPN} ${KyoPN}${KitRx}${XioRx} ${KyoRx} ${KitParchemin}${XioParchemin} ${KyoParchemin}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
 if(uatelier < 10 && uRxCoins >= AtRx && uPierre >= AtPi  && uAcier >= AtAcier && uFer >= AtFer && uPierreNoire >= AtPN && uBoisdeSapin >= AtBS && uBoisdeBouleau >= AtBbl && uBoisdeChêne >= AtBC && uBoisDoré >= AtGW && utotal_parchemin >= Atnecessaire && uclassen > 0)
 Pierre[message.author.id] = {
  Pierre: uPierre - AtPi
  };
  Acier[message.author.id] = {
    Acier: uAcier - AtAcier
  };
  Fer[message.author.id] = {
    Fer: uFer - AtFer
  };
  PierreNoire[message.author.id] = {
    PierreNoire: uPierreNoire - AtPN
  };
  BoisdeSapin[message.author.id] = {
    BoisdeSapin: uBoisdeSapin - AtBS
  };
  BoisdeBouleau[message.author.id] = {
    BoisdeBouleau: uBoisdeBouleau - AtBbl
  };
  BoisdeChêne[message.author.id] = {
    BoisdeChêne: uBoisdeChêne - AtBC
  };
  BoisDoré[message.author.id] = {
    BoisDoré: uBoisDoré - AtGW
  };
 RxCoins[message.author.id] = {
   RxCoins: uRxCoins - AtRx
 };

 
    xp[message.author.id] = {
        xp: xpactuel + (6000*(1+uatelier))
     };

   atelier[message.author.id] = {
      atelier: uatelier + 1
    };
    fs.writeFile("./Pierre.json", JSON.stringify(Pierre), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./Acier.json", JSON.stringify(Acier), (err) => {
      if (err) console.log(err)
    });
   fs.writeFile("./Fer.json", JSON.stringify(Fer), (err) => {
    if (err) console.log(err)
   });
   fs.writeFile("./PierreNoire.json", JSON.stringify(PierreNoire), (err) => {
    if (err) console.log(err)
   });
   fs.writeFile("./BoisdeBouleau.json", JSON.stringify(BoisdeBouleau), (err) => {
    if (err) console.log(err)
  });
  
  fs.writeFile("./BoisdeSapin.json", JSON.stringify(BoisdeSapin), (err) => {
  if (err) console.log(err)
  });
  
   fs.writeFile("./BoisdeChêne.json", JSON.stringify(BoisdeChêne), (err) => {
    if (err) console.log(err)
  });
  fs.writeFile("./BoisDoré.json", JSON.stringify(BoisDoré), (err) => {
    if (err) console.log(err)
  });
 fs.writeFile("./RxCoins.json", JSON.stringify(RxCoins), (err) => {
   if (err) console.log(err)
 });
 fs.writeFile("./experience.json", JSON.stringify(xp), (err) => {
  if (err) console.log(err)
    });
    fs.writeFile("./atelier.json", JSON.stringify(atelier), (err) => {
      if (err) console.log(err)
    });

message.channel.send(`${message.author.username}, tu as bien amélioré ton Atelier :house: au niveau **${uatelier+1}**`)
}
if( 
  includesRealy(message, `!uc forge`) ||
  includesRealy(message, `!uc FORGE`) ||
  includesRealy(message, `!uc Forge`)

){
 if(uforge >= 5) return message.channel.send("Niveau maximal atteint.");
 if(uclassen === 0) return message.channel.send("--> !classe");
 if(uPierre < foPi || uAcier < foAc || uFer < foFe || uOr < foOr || uPlatine < foPla || uDiamant < foDi || uPlutonium < foPlu || uPierreNoire < foPN || uBoisdeSapin < foBS || uBoisdeBouleau < foBbl || uBoisdeChêne < foBC || uBoisDoré < foGW) return message.channel.send(`Pour améliorer la Forge :hammer_pick: au niveau ${uforge+1} il te faut:\n${SomPi}${RloPi} ${BloPi}${SomAc}${RloAc} ${BloAc}${SomFe}${RloFe} ${BloFe}${SomOr}${RloOr} ${BloOr}${SomPla}${RloPla} ${BloPla}${SomDi}${RloDi} ${BloDi}${SomPlu}${RloPlu} ${BloPlu}${SomPN}${RloPN} ${BloPN} ${SomBS}${RloBS} ${BloBS} ${SomBbl}${RloBbl} ${BloBbl} ${SomBC}${RloBC} ${BloBC}${SomGW}${RloGW} ${BloGW}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
 if(uforge < 5  && uPierre >= foPi  && uAcier >= foAc && uFer >= foFe &&  uOr >= foOr &&  uPlatine >= foPla &&  uDiamant >= foDi &&  uPlutonium >= foPlu && uPierreNoire >= foPN && uBoisdeSapin >= foBS && uBoisdeBouleau >= foBbl && uBoisdeChêne >= foBC && uBoisDoré >= foGW && uclassen > 0)
 Pierre[message.author.id] = {
  Pierre: uPierre - foPi
  };
  Acier[message.author.id] = {
    Acier: uAcier - foAc
  };
  Fer[message.author.id] = {
    Fer: uFer - foFe
  };
  Or[message.author.id] = {
    Or: uOr - foOr
  };
  Platine[message.author.id] = {
    Platine: uPlatine - foPla
  };
  Diamant[message.author.id] = {
    Diamant: uDiamant - foDi
  };
  Plutonium[message.author.id] = {
    Plutonium: uPlutonium - foPlu
  };
  PierreNoire[message.author.id] = {
    PierreNoire: uPierreNoire - foPN
  };
  BoisdeSapin[message.author.id] = {
    BoisdeSapin: uBoisdeSapin - foBS
  };
  BoisdeBouleau[message.author.id] = {
    BoisdeBouleau: uBoisdeBouleau - foBbl
  };
  BoisdeChêne[message.author.id] = {
    BoisdeChêne: uBoisdeChêne - foBC
  };
  BoisDoré[message.author.id] = {
    BoisDoré: uBoisDoré - foGW
  };


 
 xp[message.author.id] = {
   xp: xpactuel + (75000*(1+uforge))

   };
   forge[message.author.id] = {
      forge: uforge + 1
    };
    fs.writeFile("./Pierre.json", JSON.stringify(Pierre), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./Acier.json", JSON.stringify(Acier), (err) => {
      if (err) console.log(err)
    });
   fs.writeFile("./Fer.json", JSON.stringify(Fer), (err) => {
    if (err) console.log(err)
   });
   fs.writeFile("./Or.json", JSON.stringify(Or), (err) => {
    if (err) console.log(err)
   });
   fs.writeFile("./Platine.json", JSON.stringify(Platine), (err) => {
    if (err) console.log(err)
   });
   fs.writeFile("./Diamant.json", JSON.stringify(Diamant), (err) => {
    if (err) console.log(err)
   });
   fs.writeFile("./Plutonium.json", JSON.stringify(Plutonium), (err) => {
    if (err) console.log(err)
   });

   fs.writeFile("./PierreNoire.json", JSON.stringify(PierreNoire), (err) => {
    if (err) console.log(err)
   });
   fs.writeFile("./BoisdeBouleau.json", JSON.stringify(BoisdeBouleau), (err) => {
    if (err) console.log(err)
  });
  
  fs.writeFile("./BoisdeSapin.json", JSON.stringify(BoisdeSapin), (err) => {
  if (err) console.log(err)
  });
  
   fs.writeFile("./BoisdeChêne.json", JSON.stringify(BoisdeChêne), (err) => {
    if (err) console.log(err)
  });
  fs.writeFile("./BoisDoré.json", JSON.stringify(BoisDoré), (err) => {
    if (err) console.log(err)
  });
 fs.writeFile("./RxCoins.json", JSON.stringify(RxCoins), (err) => {
   if (err) console.log(err)
 });
 fs.writeFile("./experience.json", JSON.stringify(xp), (err) => {
  if (err) console.log(err)
    });
    fs.writeFile("./forge.json", JSON.stringify(forge), (err) => {
      if (err) console.log(err)
    });

message.channel.send(`${message.author.username}, tu as bien amélioré ta Forge :hammer_pick: au niveau **${uforge+1}**`)
}

if( 
  includesRealy(message, `!uc ${asw}`) ||
  includesRealy(message, `!uc ${aswmaj}`) ||
  includesRealy(message, `!uc ${Sname}`)

){
 if(uEpee >= 25) return message.channel.send("Niveau maximal atteint.");
 if(uclassen === 0) return message.channel.send("--> !classe");
 if(uPierre < NkPierre) return message.channel.send(`Pour améliorer l'objet ${Sname} ${semote} au niveau ${uEpee+1} il te faut:${CitPi}${RuPi} ${ExoPi}${CitA}${RuA} ${ExoA}${CitFe}${RuFe} ${ExoFe}${CitO}${RuO} ${ExoO}${CitPl}${RuPl} ${ExoPl}${CitDi}${RuDi} ${ExoDi}${CitPt}${RuPt} ${ExoPt}${CitPn}${RuPn} ${ExoPn}${CitRx}${RuRx} ${ExoRx}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
 if(uAcier < NkAcier) return message.channel.send(`Pour améliorer l'objet ${Sname} ${semote} au niveau ${uEpee+1} il te faut:${CitPi}${RuPi} ${ExoPi}${CitA}${RuA} ${ExoA}${CitFe}${RuFe} ${ExoFe}${CitO}${RuO} ${ExoO}${CitPl}${RuPl} ${ExoPl}${CitDi}${RuDi} ${ExoDi}${CitPt}${RuPt} ${ExoPt}${CitPn}${RuPn} ${ExoPn}${CitRx}${RuRx} ${ExoRx}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
 if(uFer < NkFer) return message.channel.send(`Pour améliorer l'objet ${Sname} ${semote} au niveau ${uEpee+1} il te faut:${CitPi}${RuPi} ${ExoPi}${CitA}${RuA} ${ExoA}${CitFe}${RuFe} ${ExoFe}${CitO}${RuO} ${ExoO}${CitPl}${RuPl} ${ExoPl}${CitDi}${RuDi} ${ExoDi}${CitPt}${RuPt} ${ExoPt}${CitPn}${RuPn} ${ExoPn}${CitRx}${RuRx} ${ExoRx}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
 if(uOr < NkOr) return message.channel.send(`Pour améliorer l'objet ${Sname} ${semote} au niveau ${uEpee+1} il te faut:${CitPi}${RuPi} ${ExoPi}${CitA}${RuA} ${ExoA}${CitFe}${RuFe} ${ExoFe}${CitO}${RuO} ${ExoO}${CitPl}${RuPl} ${ExoPl}${CitDi}${RuDi} ${ExoDi}${CitPt}${RuPt} ${ExoPt}${CitPn}${RuPn} ${ExoPn}${CitRx}${RuRx} ${ExoRx}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
 if(uPlatine < NkPla) return message.channel.send(`Pour améliorer l'objet ${Sname} ${semote} au niveau ${uEpee+1} il te faut:${CitPi}${RuPi} ${ExoPi}${CitA}${RuA} ${ExoA}${CitFe}${RuFe} ${ExoFe}${CitO}${RuO} ${ExoO}${CitPl}${RuPl} ${ExoPl}${CitDi}${RuDi} ${ExoDi}${CitPt}${RuPt} ${ExoPt}${CitPn}${RuPn} ${ExoPn}${CitRx}${RuRx} ${ExoRx}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
 if(uDiamant < NkDi) return message.channel.send(`Pour améliorer l'objet ${Sname} ${semote} au niveau ${uEpee+1} il te faut:${CitPi}${RuPi} ${ExoPi}${CitA}${RuA} ${ExoA}${CitFe}${RuFe} ${ExoFe}${CitO}${RuO} ${ExoO}${CitPl}${RuPl} ${ExoPl}${CitDi}${RuDi} ${ExoDi}${CitPt}${RuPt} ${ExoPt}${CitPn}${RuPn} ${ExoPn}${CitRx}${RuRx} ${ExoRx}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
 if(uPlutonium < NkPluto) return message.channel.send(`Pour améliorer l'objet ${Sname} ${semote} au niveau ${uEpee+1} il te faut:${CitPi}${RuPi} ${ExoPi}${CitA}${RuA} ${ExoA}${CitFe}${RuFe} ${ExoFe}${CitO}${RuO} ${ExoO}${CitPl}${RuPl} ${ExoPl}${CitDi}${RuDi} ${ExoDi}${CitPt}${RuPt} ${ExoPt}${CitPn}${RuPn} ${ExoPn}${CitRx}${RuRx} ${ExoRx}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
 if(uPierreNoire < NkPN) return message.channel.send(`Pour améliorer l'objet ${Sname} ${semote} au niveau ${uEpee+1} il te faut:${CitPi}${RuPi} ${ExoPi}${CitA}${RuA} ${ExoA}${CitFe}${RuFe} ${ExoFe}${CitO}${RuO} ${ExoO}${CitPl}${RuPl} ${ExoPl}${CitDi}${RuDi} ${ExoDi}${CitPt}${RuPt} ${ExoPt}${CitPn}${RuPn} ${ExoPn}${CitRx}${RuRx} ${ExoRx}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
 if(uRxCoins < NkRx) return message.channel.send(`Pour améliorer l'objet ${Sname} ${semote} au niveau ${uEpee+1} il te faut:${CitPi}${RuPi} ${ExoPi}${CitA}${RuA} ${ExoA}${CitFe}${RuFe} ${ExoFe}${CitO}${RuO} ${ExoO}${CitPl}${RuPl} ${ExoPl}${CitDi}${RuDi} ${ExoDi}${CitPt}${RuPt} ${ExoPt}${CitPn}${RuPn} ${ExoPn}${CitRx}${RuRx} ${ExoRx}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
 if(uEpee < 25 && uPierre >= NkPierre && uAcier >= NkAcier && uFer >= NkFer && uOr >= NkOr && uPlatine >= NkPla && uDiamant >= NkDi && uPlutonium >= NkPluto && uPierreNoire >= NkPN && uRxCoins >= NkRx && uclassen > 0)
 Pierre[message.author.id] = {
   Pierre: uPierre - NkPierre
 };

 Acier[message.author.id] = {
   Acier: uAcier - NkAcier
 };

 Fer[message.author.id] = {
   Fer: uFer - NkFer
 };
 Or[message.author.id] = {
   Or: uOr - NkOr
 };
 Platine[message.author.id] = {
   Platine: uPlatine - NkPla
 };
 Diamant[message.author.id] = {
   Diamant: uDiamant - NkDi
 };
 Plutonium[message.author.id] = {
   Plutonium: uPlutonium - NkPluto
 };
 PierreNoire[message.author.id] = {
   PierreNoire: uPierreNoire - NkPN
 };
 RxCoins[message.author.id] = {
   RxCoins: uRxCoins - NkRx
 };
 Epee[message.author.id] = {
   Epee: uEpee + 1
 };

 xp[message.author.id] = {
   xp: xpactuel + (uEpee * 1000 * 3)
 };

 fs.writeFile("./Pierre.json", JSON.stringify(Pierre), (err) => {
   if (err) console.log(err)
 });
 fs.writeFile("./Acier.json", JSON.stringify(Acier), (err) => {
   if (err) console.log(err)
 });
fs.writeFile("./Fer.json", JSON.stringify(Fer), (err) => {
 if (err) console.log(err)
});
fs.writeFile("./Or.json", JSON.stringify(Or), (err) => {
 if (err) console.log(err)
});
fs.writeFile("./Platine.json", JSON.stringify(Platine), (err) => {
 if (err) console.log(err)
});
fs.writeFile("./Diamant.json", JSON.stringify(Diamant), (err) => {
 if (err) console.log(err)
});
fs.writeFile("./Plutonium.json", JSON.stringify(Plutonium), (err) => {
 if (err) console.log(err)
});
fs.writeFile("./PierreNoire.json", JSON.stringify(PierreNoire), (err) => {
 if (err) console.log(err)
});
fs.writeFile("./RxCoins.json", JSON.stringify(RxCoins), (err) => {
 if (err) console.log(err)
});
fs.writeFile("./Epee.json", JSON.stringify(Epee), (err) => {
 if(err) console.log(err)
});
fs.writeFile("./Pvmax.json", JSON.stringify(Pvmax), (err) => {
  if(err) console.log(err)
 });
 fs.writeFile("./Atk.json", JSON.stringify(Atk), (err) => {
  if(err) console.log(err)
 });
message.channel.send(`${message.author.username}, ton objet ${Sname} ${semote} a été amélioré au niveau **${uEpee+1}**`)
}


if( 
  includesRealy(message, `!uc ${ash}`) ||
  includesRealy(message, `!uc ${ashmaj}`) ||
  includesRealy(message, `!uc ${Bname}`)

){
 if(uBouclier >= 25) return message.channel.send("Niveau maximal atteint.");
 if(uclassen === 0) return message.channel.send("--> !classe");
 if(uBoisdeSapin < MkBS) return message.channel.send(`Pour améliorer l'objet ${Bname} ${shemote} au niveau ${uBouclier+1} il te faut:${SitBS}${ReBS} ${OxoBS}${SitBBL}${ReBBL} ${OxoBBL}${SitBC}${ReBC} ${OxoBC}${SitGW}${ReGW} ${OxoGW}${SitRx}${ReRx} ${OxoRx}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
 if(uBoisdeBouleau < MkBbl) return message.channel.send(`Pour améliorer l'objet ${Bname} ${shemote} au niveau ${uBouclier+1} il te faut:${SitBS}${ReBS} ${OxoBS}${SitBBL}${ReBBL} ${OxoBBL}${SitBC}${ReBC} ${OxoBC}${SitGW}${ReGW} ${OxoGW}${SitRx}${ReRx} ${OxoRx}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
 if(uBoisdeChêne < MkBC) return message.channel.send(`Pour améliorer l'objet ${Bname} ${shemote} au niveau ${uBouclier+1} il te faut:${SitBS}${ReBS} ${OxoBS}${SitBBL}${ReBBL} ${OxoBBL}${SitBC}${ReBC} ${OxoBC}${SitGW}${ReGW} ${OxoGW}${SitRx}${ReRx} ${OxoRx}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
 if(uBoisDoré < MkGW) return message.channel.send(`Pour améliorer l'objet ${Bname} ${shemote} au niveau ${uBouclier+1} il te faut:${SitBS}${ReBS} ${OxoBS}${SitBBL}${ReBBL} ${OxoBBL}${SitBC}${ReBC} ${OxoBC}${SitGW}${ReGW} ${OxoGW}${SitRx}${ReRx} ${OxoRx}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
 if(uRxCoins < MkRx) return message.channel.send(`Pour améliorer l'objet ${Bname} ${shemote} au niveau ${uBouclier+1} il te faut:${SitBS}${ReBS} ${OxoBS}${SitBBL}${ReBBL} ${OxoBBL}${SitBC}${ReBC} ${OxoBC}${SitGW}${ReGW} ${OxoGW}${SitRx}${ReRx} ${OxoRx}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
 if(uBouclier < 25 && uBoisdeSapin >= MkBS && uBoisdeBouleau >= MkBbl && uBoisdeChêne >= MkBC && uBoisDoré >= MkGW && uRxCoins >= MkRx && uclassen > 0)


 BoisdeSapin[message.author.id] = {
  BoisdeSapin: uBoisdeSapin - MkBS
 };
 BoisdeBouleau[message.author.id] = {
  BoisdeBouleau: uBoisdeBouleau - MkBbl
 };
 BoisdeChêne[message.author.id] = {
  BoisdeChêne: uBoisdeChêne - MkBC
 };
 BoisDoré[message.author.id] = {
  BoisDoré: uBoisDoré - MkGW
 };


 RxCoins[message.author.id] = {
   RxCoins: uRxCoins - MkRx
 };
 Bouclier[message.author.id] = {
   Bouclier: uBouclier + 1
 };


 xp[message.author.id] = {
   xp: xpactuel + (uBouclier * 1000 * 3)
 };

 fs.writeFile("./BoisdeBouleau.json", JSON.stringify(BoisdeBouleau), (err) => {
  if (err) console.log(err)
});

fs.writeFile("./BoisdeSapin.json", JSON.stringify(BoisdeSapin), (err) => {
if (err) console.log(err)
});

 fs.writeFile("./BoisdeChêne.json", JSON.stringify(BoisdeChêne), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./BoisDoré.json", JSON.stringify(BoisDoré), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./RxCoins.json", JSON.stringify(RxCoins), (err) => {
 if (err) console.log(err)
});
fs.writeFile("./Def.json", JSON.stringify(Def), (err) => {
  if (err) console.log(err)
 });
 fs.writeFile("./Pvmax.json", JSON.stringify(Pvmax), (err) => {
  if (err) console.log(err)
 });
fs.writeFile("./Bouclier.json", JSON.stringify(Bouclier), (err) => {
 if(err) console.log(err)
});

message.channel.send(`${message.author.username}, ton objet ${Bname} ${shemote} a été amélioré au niveau **${uBouclier+1}**`)
} 
 

if( 
   includesRealy(message, `!uc lo`) ||
   includesRealy(message, `!uc Lo`)

){
  if(uLooting >= 20) return message.channel.send("Niveau maximal atteint.");
  if(uclassen === 0) return message.channel.send("--> !classe");
  if(uPierre < lPierre) return message.channel.send(`Pour améliorer l'objet Looting ${emotelooting} au niveau ${uLooting+1} il te faut:${wP}${APi} ${WP}${wA}${APa} ${WA}${wBS}${ABs} ${WBS}${wFe}${APf} ${WF}${wBBl}${ABBl} ${WBBL}${wGo}${APo} ${WO}${wPl}${APl} ${WPL}${wBC}${ABc} ${WBC}${wDi}${APd} ${WD}${wBca}${ABca} ${WBCAB}${wPt}${APt} ${WPT}${wPN}${APn} ${WPNP}${wRx}${ARX} ${WRX}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uAcier < lAcier) return message.channel.send(`Pour améliorer l'objet Looting ${emotelooting} au niveau ${uLooting+1} il te faut:${wP}${APi} ${WP}${wA}${APa} ${WA}${wBS}${ABs} ${WBS}${wFe}${APf} ${WF}${wBBl}${ABBl} ${WBBL}${wGo}${APo} ${WO}${wPl}${APl} ${WPL}${wBC}${ABc} ${WBC}${wDi}${APd} ${WD}${wBca}${ABca} ${WBCAB}${wPt}${APt} ${WPT}${wPN}${APn} ${WPNP}${wRx}${ARX} ${WRX}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uBoisdeSapin < lBS) return message.channel.send(`Pour améliorer l'objet Looting ${emotelooting} au niveau ${uLooting+1} il te faut:${wP}${APi} ${WP}${wA}${APa} ${WA}${wBS}${ABs} ${WBS}${wFe}${APf} ${WF}${wBBl}${ABBl} ${WBBL}${wGo}${APo} ${WO}${wPl}${APl} ${WPL}${wBC}${ABc} ${WBC}${wDi}${APd} ${WD}${wBca}${ABca} ${WBCAB}${wPt}${APt} ${WPT}${wPN}${APn} ${WPNP}${wRx}${ARX} ${WRX}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uFer < lFer) return message.channel.send(`Pour améliorer l'objet Looting ${emotelooting} au niveau ${uLooting+1} il te faut:${wP}${APi} ${WP}${wA}${APa} ${WA}${wBS}${ABs} ${WBS}${wFe}${APf} ${WF}${wBBl}${ABBl} ${WBBL}${wGo}${APo} ${WO}${wPl}${APl} ${WPL}${wBC}${ABc} ${WBC}${wDi}${APd} ${WD}${wBca}${ABca} ${WBCAB}${wPt}${APt} ${WPT}${wPN}${APn} ${WPNP}${wRx}${ARX} ${WRX}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uBoisdeBouleau < lBbl) return message.channel.send(`Pour améliorer l'objet Looting ${emotelooting} au niveau ${uLooting+1} il te faut:${wP}${APi} ${WP}${wA}${APa} ${WA}${wBS}${ABs} ${WBS}${wFe}${APf} ${WF}${wBBl}${ABBl} ${WBBL}${wGo}${APo} ${WO}${wPl}${APl} ${WPL}${wBC}${ABc} ${WBC}${wDi}${APd} ${WD}${wBca}${ABca} ${WBCAB}${wPt}${APt} ${WPT}${wPN}${APn} ${WPNP}${wRx}${ARX} ${WRX}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uOr < lOr) return message.channel.send(`Pour améliorer l'objet Looting ${emotelooting} au niveau ${uLooting+1} il te faut:${wP}${APi} ${WP}${wA}${APa} ${WA}${wBS}${ABs} ${WBS}${wFe}${APf} ${WF}${wBBl}${ABBl} ${WBBL}${wGo}${APo} ${WO}${wPl}${APl} ${WPL}${wBC}${ABc} ${WBC}${wDi}${APd} ${WD}${wBca}${ABca} ${WBCAB}${wPt}${APt} ${WPT}${wPN}${APn} ${WPNP}${wRx}${ARX} ${WRX}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uPlatine < lPla) return message.channel.send(`Pour améliorer l'objet Looting ${emotelooting} au niveau ${uLooting+1} il te faut:${wP}${APi} ${WP}${wA}${APa} ${WA}${wBS}${ABs} ${WBS}${wFe}${APf} ${WF}${wBBl}${ABBl} ${WBBL}${wGo}${APo} ${WO}${wPl}${APl} ${WPL}${wBC}${ABc} ${WBC}${wDi}${APd} ${WD}${wBca}${ABca} ${WBCAB}${wPt}${APt} ${WPT}${wPN}${APn} ${WPNP}${wRx}${ARX} ${WRX}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uBoisdeChêne < lBC) return message.channel.send(`Pour améliorer l'objet Looting ${emotelooting} au niveau ${uLooting+1} il te faut:${wP}${APi} ${WP}${wA}${APa} ${WA}${wBS}${ABs} ${WBS}${wFe}${APf} ${WF}${wBBl}${ABBl} ${WBBL}${wGo}${APo} ${WO}${wPl}${APl} ${WPL}${wBC}${ABc} ${WBC}${wDi}${APd} ${WD}${wBca}${ABca} ${WBCAB}${wPt}${APt} ${WPT}${wPN}${APn} ${WPNP}${wRx}${ARX} ${WRX}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uDiamant < lDi) return message.channel.send(`Pour améliorer l'objet Looting ${emotelooting} au niveau ${uLooting+1} il te faut:${wP}${APi} ${WP}${wA}${APa} ${WA}${wBS}${ABs} ${WBS}${wFe}${APf} ${WF}${wBBl}${ABBl} ${WBBL}${wGo}${APo} ${WO}${wPl}${APl} ${WPL}${wBC}${ABc} ${WBC}${wDi}${APd} ${WD}${wBca}${ABca} ${WBCAB}${wPt}${APt} ${WPT}${wPN}${APn} ${WPNP}${wRx}${ARX} ${WRX}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uPlutonium < lPluto) return message.channel.send(`Pour améliorer l'objet Looting ${emotelooting} au niveau ${uLooting+1} il te faut:${wP}${APi} ${WP}${wA}${APa} ${WA}${wBS}${ABs} ${WBS}${wFe}${APf} ${WF}${wBBl}${ABBl} ${WBBL}${wGo}${APo} ${WO}${wPl}${APl} ${WPL}${wBC}${ABc} ${WBC}${wDi}${APd} ${WD}${wBca}${ABca} ${WBCAB}${wPt}${APt} ${WPT}${wPN}${APn} ${WPNP}${wRx}${ARX} ${WRX}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uPierreNoire < lPN) return message.channel.send(`Pour améliorer l'objet Looting ${emotelooting} au niveau ${uLooting+1} il te faut:${wP}${APi} ${WP}${wA}${APa} ${WA}${wBS}${ABs} ${WBS}${wFe}${APf} ${WF}${wBBl}${ABBl} ${WBBL}${wGo}${APo} ${WO}${wPl}${APl} ${WPL}${wBC}${ABc} ${WBC}${wDi}${APd} ${WD}${wBca}${ABca} ${WBCAB}${wPt}${APt} ${WPT}${wPN}${APn} ${WPNP}${wRx}${ARX} ${WRX}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uBoisDoré < lGW) return message.channel.send(`Pour améliorer l'objet Looting ${emotelooting} au niveau ${uLooting+1} il te faut:${wP}${APi} ${WP}${wA}${APa} ${WA}${wBS}${ABs} ${WBS}${wFe}${APf} ${WF}${wBBl}${ABBl} ${WBBL}${wGo}${APo} ${WO}${wPl}${APl} ${WPL}${wBC}${ABc} ${WBC}${wDi}${APd} ${WD}${wBca}${ABca} ${WBCAB}${wPt}${APt} ${WPT}${wPN}${APn} ${WPNP}${wRx}${ARX} ${WRX}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uRxCoins < lRx) return message.channel.send(`Pour améliorer l'objet Looting ${emotelooting} au niveau ${uLooting+1} il te faut:${wP}${APi} ${WP}${wA}${APa} ${WA}${wBS}${ABs} ${WBS}${wFe}${APf} ${WF}${wBBl}${ABBl} ${WBBL}${wGo}${APo} ${WO}${wPl}${APl} ${WPL}${wBC}${ABc} ${WBC}${wDi}${APd} ${WD}${wBca}${ABca} ${WBCAB}${wPt}${APt} ${WPT}${wPN}${APn} ${WPNP}${wRx}${ARX} ${WRX}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uLooting < 20 && uPierre >= lPierre && uAcier >= lAcier && uFer >= lFer && uOr >= lOr && uPlatine >= lPla && uDiamant >= lDi && uPlutonium >= lPluto && uPierreNoire >= lPN && uBoisdeSapin > lBS && uBoisdeBouleau >= lBbl && uBoisdeChêne >= lBC && uBoisDoré >= lGW && uRxCoins >= lRx && uclassen > 0)
  Pierre[message.author.id] = {
    Pierre: uPierre - lPierre
  };
  BoisdeSapin[message.author.id] = {
    BoisdeSapin: uBoisdeSapin - lBS
  };
  Acier[message.author.id] = {
    Acier: uAcier - lAcier
  };
  BoisdeBouleau[message.author.id] = {
    BoisdeBouleau: uBoisdeBouleau - lBbl
  };
  Fer[message.author.id] = {
    Fer: uFer - lFer
  };
  Or[message.author.id] = {
    Or: uOr - lOr
  };
  Platine[message.author.id] = {
    Platine: uPlatine - lPla
  };
  Diamant[message.author.id] = {
    Diamant: uDiamant - lDi
  };
  Plutonium[message.author.id] = {
    Plutonium: uPlutonium - lPluto
  };
  PierreNoire[message.author.id] = {
    PierreNoire: uPierreNoire - lPN
  };
  BoisdeChêne[message.author.id] = {
    BoisdeChêne: uBoisdeChêne - lBC
  };
  BoisDoré[message.author.id] = {
    BoisDoré: uBoisDoré - lGW
  };
  RxCoins[message.author.id] = {
    RxCoins: uRxCoins - lRx
  };
  Looting[message.author.id] = {
    Looting: uLooting + 1
  };


  xp[message.author.id] = {
    xp: xpactuel + (uLooting * 1000)

  };
 
  fs.writeFile("./Pierre.json", JSON.stringify(Pierre), (err) => {
    if (err) console.log(err)
  });
  fs.writeFile("./Acier.json", JSON.stringify(Acier), (err) => {
    if (err) console.log(err)
  });
  fs.writeFile("./BoisdeBouleau.json", JSON.stringify(BoisdeBouleau), (err) => {
    if (err) console.log(err)
  });
fs.writeFile("./BoisdeSapin.json", JSON.stringify(BoisdeSapin), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./Fer.json", JSON.stringify(Fer), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./Or.json", JSON.stringify(Or), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./Platine.json", JSON.stringify(Platine), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./Diamant.json", JSON.stringify(Diamant), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./Plutonium.json", JSON.stringify(Plutonium), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./PierreNoire.json", JSON.stringify(PierreNoire), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./BoisdeChêne.json", JSON.stringify(BoisdeChêne), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./BoisDoré.json", JSON.stringify(BoisDoré), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./RxCoins.json", JSON.stringify(RxCoins), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./Looting.json", JSON.stringify(Looting), (err) => {
  if(err) console.log(err)
});

message.channel.send(`${message.author.username}, ton objet Looting ${emotelooting} a été amélioré au niveau **${uLooting+1}**`)
}
if(  
  includesRealy(message, `!uc t`) ||
  includesRealy(message, `!uc T`)

){
  if(uTimerReduc >= 10) return message.channel.send("Niveau maximal atteint.");
  if(uclassen === 0) return message.channel.send("--> !classe");
  if(uPierreNoire < TiPN) return message.channel.send(`Pour améliorer l'objet TimerReduc ${emotetimer} au niveau ${uTimerReduc+1} il te faut:${CtBca}${RBCAB} ${KBCAB}${CtPN}${RPN} ${KPN}${CtPo}${RPO} ${KPO}${CtRx}${RRX} ${KRX}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uBoisDoré < TiGWood) return message.channel.send(`Pour améliorer l'objet TimerReduc ${emotetimer} au niveau ${uTimerReduc+1} il te faut:${CtBca}${RBCAB} ${KBCAB}${CtPN}${RPN} ${KPN}${CtPo}${RPO} ${KPO}${CtRx}${RRX} ${KRX}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uRxCoins < TiRx) return message.channel.send(`Pour améliorer l'objet TimerReduc ${emotetimer} au niveau ${uTimerReduc+1} il te faut:${CtBca}${RBCAB} ${KBCAB}${CtPN}${RPN} ${KPN}${CtPo}${RPO} ${KPO}${CtRx}${RRX} ${KRX}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uPieceor < TiPo) return message.channel.send(`Pour améliorer l'objet TimerReduc ${emotetimer} au niveau ${uTimerReduc+1} il te faut:${CtBca}${RBCAB} ${KBCAB}${CtPN}${RPN} ${KPN}${CtPo}${RPO} ${KPO}${CtRx}${RRX} ${KRX}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uTimerReduc < 10 && uPierreNoire >= TiPN && uBoisDoré >= TiGWood && uRxCoins >= TiRx && uPieceor >= TiPo && uclassen > 0)

  PierreNoire[message.author.id] = {
    PierreNoire: uPierreNoire - TiPN
  };

  BoisDoré[message.author.id] = {
    BoisDoré: uBoisDoré - TiGWood
  };
  RxCoins[message.author.id] = {
    RxCoins: uRxCoins - TiRx
  };
  TimerReduc[message.author.id] = {
    TimerReduc: uTimerReduc + 1
  };
  Pieceor[message.author.id] = {
    Pieceor: uPieceor - TiPo
  };

  xp[message.author.id] = {
    xp: xpactuel + (uTimerReduc * 10000 + (uLooting * 2))

  };
 
  fs.writeFile("./Pierre.json", JSON.stringify(Pierre), (err) => {
    if (err) console.log(err)
  });
  fs.writeFile("./Acier.json", JSON.stringify(Acier), (err) => {
    if (err) console.log(err)
  });
  fs.writeFile("./BoisdeBouleau.json", JSON.stringify(BoisdeBouleau), (err) => {
    if (err) console.log(err)
  });
fs.writeFile("./BoisdeSapin.json", JSON.stringify(BoisdeSapin), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./Fer.json", JSON.stringify(Fer), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./Or.json", JSON.stringify(Or), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./Platine.json", JSON.stringify(Platine), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./Diamant.json", JSON.stringify(Diamant), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./Plutonium.json", JSON.stringify(Plutonium), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./PierreNoire.json", JSON.stringify(PierreNoire), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./BoisdeChêne.json", JSON.stringify(BoisdeChêne), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./BoisDoré.json", JSON.stringify(BoisDoré), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./RxCoins.json", JSON.stringify(RxCoins), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./TimerReduc.json", JSON.stringify(TimerReduc), (err) => {
  if(err) console.log(err)
});

message.channel.send(`${message.author.username}, ton objet TimerReduc ${emotetimer} a été amélioré au niveau **${uTimerReduc+1}**`)
}
if(  
  includesRealy(message, `!uc x`) ||
  includesRealy(message, `!uc X`)

){
  if(uXPBoost >= 50) return message.channel.send("Niveau maximal atteint.");
  if(uclassen === 0) return message.channel.send("--> !classe");
  if(uPierre < xPierre) return message.channel.send(`Pour améliorer l'objet XPBoost ${emotexpboost} au niveau ${uXPBoost+1} il te faut:${cP}${SPi} ${qP}${cA}${SPa} ${qA}${cBS}${SBs} ${qBS}${cFe}${SPf} ${qF}${cBBl}${SBBl} ${qBBL}${cGo}${SPo} ${qO}${cPl}${SPl} ${qPL}${cBC}${SBc} ${qBC}${cDi}${SPd} ${qD}${cBca}${SBca} ${qBCAB}${cPt}${SPt} ${qPT}${cPN}${SPn} ${qPNP}${cRx}${SRX} ${qRX}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uAcier < xAcier) return message.channel.send(`Pour améliorer l'objet XPBoost ${emotexpboost} au niveau ${uXPBoost+1} il te faut:${cP}${SPi} ${qP}${cA}${SPa} ${qA}${cBS}${SBs} ${qBS}${cFe}${SPf} ${qF}${cBBl}${SBBl} ${qBBL}${cGo}${SPo} ${qO}${cPl}${SPl} ${qPL}${cBC}${SBc} ${qBC}${cDi}${SPd} ${qD}${cBca}${SBca} ${qBCAB}${cPt}${SPt} ${qPT}${cPN}${SPn} ${qPNP}${cRx}${SRX} ${qRX}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uBoisdeSapin < xBS) return message.channel.send(`Pour améliorer l'objet XPBoost ${emotexpboost} au niveau ${uXPBoost+1} il te faut:${cP}${SPi} ${qP}${cA}${SPa} ${qA}${cBS}${SBs} ${qBS}${cFe}${SPf} ${qF}${cBBl}${SBBl} ${qBBL}${cGo}${SPo} ${qO}${cPl}${SPl} ${qPL}${cBC}${SBc} ${qBC}${cDi}${SPd} ${qD}${cBca}${SBca} ${qBCAB}${cPt}${SPt} ${qPT}${cPN}${SPn} ${qPNP}${cRx}${SRX} ${qRX}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uFer < xFer) return message.channel.send(`Pour améliorer l'objet XPBoost ${emotexpboost} au niveau ${uXPBoost+1} il te faut:${cP}${SPi} ${qP}${cA}${SPa} ${qA}${cBS}${SBs} ${qBS}${cFe}${SPf} ${qF}${cBBl}${SBBl} ${qBBL}${cGo}${SPo} ${qO}${cPl}${SPl} ${qPL}${cBC}${SBc} ${qBC}${cDi}${SPd} ${qD}${cBca}${SBca} ${qBCAB}${cPt}${SPt} ${qPT}${cPN}${SPn} ${qPNP}${cRx}${SRX} ${qRX}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uBoisdeBouleau < xBbl) return message.channel.send(`Pour améliorer l'objet XPBoost ${emotexpboost} au niveau ${uXPBoost+1} il te faut:${cP}${SPi} ${qP}${cA}${SPa} ${qA}${cBS}${SBs} ${qBS}${cFe}${SPf} ${qF}${cBBl}${SBBl} ${qBBL}${cGo}${SPo} ${qO}${cPl}${SPl} ${qPL}${cBC}${SBc} ${qBC}${cDi}${SPd} ${qD}${cBca}${SBca} ${qBCAB}${cPt}${SPt} ${qPT}${cPN}${SPn} ${qPNP}${cRx}${SRX} ${qRX}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uOr < xOr) return message.channel.send(`Pour améliorer l'objet XPBoost ${emotexpboost} au niveau ${uXPBoost+1} il te faut:${cP}${SPi} ${qP}${cA}${SPa} ${qA}${cBS}${SBs} ${qBS}${cFe}${SPf} ${qF}${cBBl}${SBBl} ${qBBL}${cGo}${SPo} ${qO}${cPl}${SPl} ${qPL}${cBC}${SBc} ${qBC}${cDi}${SPd} ${qD}${cBca}${SBca} ${qBCAB}${cPt}${SPt} ${qPT}${cPN}${SPn} ${qPNP}${cRx}${SRX} ${qRX}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uPlatine < xPla) return message.channel.send(`Pour améliorer l'objet XPBoost ${emotexpboost} au niveau ${uXPBoost+1} il te faut:${cP}${SPi} ${qP}${cA}${SPa} ${qA}${cBS}${SBs} ${qBS}${cFe}${SPf} ${qF}${cBBl}${SBBl} ${qBBL}${cGo}${SPo} ${qO}${cPl}${SPl} ${qPL}${cBC}${SBc} ${qBC}${cDi}${SPd} ${qD}${cBca}${SBca} ${qBCAB}${cPt}${SPt} ${qPT}${cPN}${SPn} ${qPNP}${cRx}${SRX} ${qRX}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uBoisdeChêne < xBC) return message.channel.send(`Pour améliorer l'objet XPBoost ${emotexpboost} au niveau ${uXPBoost+1} il te faut:${cP}${SPi} ${qP}${cA}${SPa} ${qA}${cBS}${SBs} ${qBS}${cFe}${SPf} ${qF}${cBBl}${SBBl} ${qBBL}${cGo}${SPo} ${qO}${cPl}${SPl} ${qPL}${cBC}${SBc} ${qBC}${cDi}${SPd} ${qD}${cBca}${SBca} ${qBCAB}${cPt}${SPt} ${qPT}${cPN}${SPn} ${qPNP}${cRx}${SRX} ${qRX}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uDiamant < xDi) return message.channel.send(`Pour améliorer l'objet XPBoost ${emotexpboost} au niveau ${uXPBoost+1} il te faut:${cP}${SPi} ${qP}${cA}${SPa} ${qA}${cBS}${SBs} ${qBS}${cFe}${SPf} ${qF}${cBBl}${SBBl} ${qBBL}${cGo}${SPo} ${qO}${cPl}${SPl} ${qPL}${cBC}${SBc} ${qBC}${cDi}${SPd} ${qD}${cBca}${SBca} ${qBCAB}${cPt}${SPt} ${qPT}${cPN}${SPn} ${qPNP}${cRx}${SRX} ${qRX}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uPlutonium < xPluto) return message.channel.send(`Pour améliorer l'objet XPBoost ${emotexpboost} au niveau ${uXPBoost+1} il te faut:${cP}${SPi} ${qP}${cA}${SPa} ${qA}${cBS}${SBs} ${qBS}${cFe}${SPf} ${qF}${cBBl}${SBBl} ${qBBL}${cGo}${SPo} ${qO}${cPl}${SPl} ${qPL}${cBC}${SBc} ${qBC}${cDi}${SPd} ${qD}${cBca}${SBca} ${qBCAB}${cPt}${SPt} ${qPT}${cPN}${SPn} ${qPNP}${cRx}${SRX} ${qRX}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uPierreNoire < xPN) return message.channel.send(`Pour améliorer l'objet XPBoost ${emotexpboost} au niveau ${uXPBoost+1} il te faut:${cP}${SPi} ${qP}${cA}${SPa} ${qA}${cBS}${SBs} ${qBS}${cFe}${SPf} ${qF}${cBBl}${SBBl} ${qBBL}${cGo}${SPo} ${qO}${cPl}${SPl} ${qPL}${cBC}${SBc} ${qBC}${cDi}${SPd} ${qD}${cBca}${SBca} ${qBCAB}${cPt}${SPt} ${qPT}${cPN}${SPn} ${qPNP}${cRx}${SRX} ${qRX}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uBoisDoré < xGW) return message.channel.send(`Pour améliorer l'objet XPBoost ${emotexpboost} au niveau ${uXPBoost+1} il te faut:${cP}${SPi} ${qP}${cA}${SPa} ${qA}${cBS}${SBs} ${qBS}${cFe}${SPf} ${qF}${cBBl}${SBBl} ${qBBL}${cGo}${SPo} ${qO}${cPl}${SPl} ${qPL}${cBC}${SBc} ${qBC}${cDi}${SPd} ${qD}${cBca}${SBca} ${qBCAB}${cPt}${SPt} ${qPT}${cPN}${SPn} ${qPNP}${cRx}${SRX} ${qRX}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uRxCoins < xRx) return message.channel.send(`Pour améliorer l'objet XPBoost ${emotexpboost} au niveau ${uXPBoost+1} il te faut:${cP}${SPi} ${qP}${cA}${SPa} ${qA}${cBS}${SBs} ${qBS}${cFe}${SPf} ${qF}${cBBl}${SBBl} ${qBBL}${cGo}${SPo} ${qO}${cPl}${SPl} ${qPL}${cBC}${SBc} ${qBC}${cDi}${SPd} ${qD}${cBca}${SBca} ${qBCAB}${cPt}${SPt} ${qPT}${cPN}${SPn} ${qPNP}${cRx}${SRX} ${qRX}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uXPBoost < 50 && uPierre >= xPierre && uAcier >= xAcier && uFer >= xFer && uOr >= xOr && uPlatine >= xPla && uDiamant >= xDi && uPlutonium >= xPluto && uPierreNoire >= xPN && uBoisdeSapin > xBS && uBoisdeBouleau >= xBbl && uBoisdeChêne >= xBC && uBoisDoré >= xGW && uRxCoins >= xRx && uclassen > 0)
  Pierre[message.author.id] = {
    Pierre: uPierre - xPierre
  };
  BoisdeSapin[message.author.id] = {
    BoisdeSapin: uBoisdeSapin - xBS
  };
  Acier[message.author.id] = {
    Acier: uAcier - xAcier
  };
  BoisdeBouleau[message.author.id] = {
    BoisdeBouleau: uBoisdeBouleau - xBbl
  };
  Fer[message.author.id] = {
    Fer: uFer - xFer
  };
  Or[message.author.id] = {
    Or: uOr - xOr
  };
  Platine[message.author.id] = {
    Platine: uPlatine - xPla
  };
  Diamant[message.author.id] = {
    Diamant: uDiamant - xDi
  };
  Plutonium[message.author.id] = {
    Plutonium: uPlutonium - xPluto
  };
  PierreNoire[message.author.id] = {
    PierreNoire: uPierreNoire - xPN
  };
  BoisdeChêne[message.author.id] = {
    BoisdeChêne: uBoisdeChêne - xBC
  };
  BoisDoré[message.author.id] = {
    BoisDoré: uBoisDoré - xGW
  };
  RxCoins[message.author.id] = {
    RxCoins: uRxCoins - xRx
  };
  XPBoost[message.author.id] = {
    XPBoost: uXPBoost + 1
  };

  xp[message.author.id] = {
    xp: xpactuel + ((uXPBoost + 5) * BoostXPT)

  };
 
  fs.writeFile("./Pierre.json", JSON.stringify(Pierre), (err) => {
    if (err) console.log(err)
  });
  fs.writeFile("./Acier.json", JSON.stringify(Acier), (err) => {
    if (err) console.log(err)
  });
  fs.writeFile("./BoisdeBouleau.json", JSON.stringify(BoisdeBouleau), (err) => {
    if (err) console.log(err)
  });
fs.writeFile("./BoisdeSapin.json", JSON.stringify(BoisdeSapin), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./Fer.json", JSON.stringify(Fer), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./Or.json", JSON.stringify(Or), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./Platine.json", JSON.stringify(Platine), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./Diamant.json", JSON.stringify(Diamant), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./Plutonium.json", JSON.stringify(Plutonium), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./PierreNoire.json", JSON.stringify(PierreNoire), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./BoisdeChêne.json", JSON.stringify(BoisdeChêne), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./BoisDoré.json", JSON.stringify(BoisDoré), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./RxCoins.json", JSON.stringify(RxCoins), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./XPBoost.json", JSON.stringify(XPBoost), (err) => {
  if(err) console.log(err)
});

message.channel.send(`${message.author.username}, ton objet XPBoost ${emotexpboost} a été amélioré au niveau **${uXPBoost+1}**`)
}
if(  
  includesRealy(message, `!uc ${afo}`) ||
  includesRealy(message, `!uc ${afomaj}`)

){
  if(uForeuse >= 100) return message.channel.send("Niveau maximal atteint.");
  if(uclassen === 0) return message.channel.send("--> !classe");
  if(uPierre < pPierre) return message.channel.send(`Pour améliorer l'objet ${Fname} ${femote} au niveau ${uForeuse+1} il te faut:${mP}${PPi} ${gP}${mA}${PPa} ${gA}${mBS}${PBs} ${gBS}${mFe}${PPf} ${gF}${mBBl}${PBBl} ${gBBL}${mGo}${PPo} ${gO}${mPl}${PPl} ${gPL}${mBC}${PBc} ${gBC}${mDi}${PPd} ${gD}${mBca}${PBca} ${gBCAB}${mPt}${PPt} ${gPT}${mPN}${PPn} ${gPNP}${mRx}${PRx} ${gRXP}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uAcier < pAcier) return message.channel.send(`Pour améliorer l'objet ${Fname} ${femote} au niveau ${uForeuse+1} il te faut:${mP}${PPi} ${gP}${mA}${PPa} ${gA}${mBS}${PBs} ${gBS}${mFe}${PPf} ${gF}${mBBl}${PBBl} ${gBBL}${mGo}${PPo} ${gO}${mPl}${PPl} ${gPL}${mBC}${PBc} ${gBC}${mDi}${PPd} ${gD}${mBca}${PBca} ${gBCAB}${mPt}${PPt} ${gPT}${mPN}${PPn} ${gPNP}${mRx}${PRx} ${gRXP}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uBoisdeSapin < pBS) return message.channel.send(`Pour améliorer l'objet ${Fname} ${femote} au niveau ${uForeuse+1} il te faut:${mP}${PPi} ${gP}${mA}${PPa} ${gA}${mBS}${PBs} ${gBS}${mFe}${PPf} ${gF}${mBBl}${PBBl} ${gBBL}${mGo}${PPo} ${gO}${mPl}${PPl} ${gPL}${mBC}${PBc} ${gBC}${mDi}${PPd} ${gD}${mBca}${PBca} ${gBCAB}${mPt}${PPt} ${gPT}${mPN}${PPn} ${gPNP}${mRx}${PRx} ${gRXP}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uFer < pFer) return message.channel.send(`Pour améliorer l'objet ${Fname} ${femote} au niveau ${uForeuse+1} il te faut:${mP}${PPi} ${gP}${mA}${PPa} ${gA}${mBS}${PBs} ${gBS}${mFe}${PPf} ${gF}${mBBl}${PBBl} ${gBBL}${mGo}${PPo} ${gO}${mPl}${PPl} ${gPL}${mBC}${PBc} ${gBC}${mDi}${PPd} ${gD}${mBca}${PBca} ${gBCAB}${mPt}${PPt} ${gPT}${mPN}${PPn} ${gPNP}${mRx}${PRx} ${gRXP}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uBoisdeBouleau < pBBl) return message.channel.send(`Pour améliorer l'objet ${Fname} ${femote} au niveau ${uForeuse+1} il te faut:${mP}${PPi} ${gP}${mA}${PPa} ${gA}${mBS}${PBs} ${gBS}${mFe}${PPf} ${gF}${mBBl}${PBBl} ${gBBL}${mGo}${PPo} ${gO}${mPl}${PPl} ${gPL}${mBC}${PBc} ${gBC}${mDi}${PPd} ${gD}${mBca}${PBca} ${gBCAB}${mPt}${PPt} ${gPT}${mPN}${PPn} ${gPNP}${mRx}${PRx} ${gRXP}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uOr < pGold) return message.channel.send(`Pour améliorer l'objet ${Fname} ${femote} au niveau ${uForeuse+1} il te faut:${mP}${PPi} ${gP}${mA}${PPa} ${gA}${mBS}${PBs} ${gBS}${mFe}${PPf} ${gF}${mBBl}${PBBl} ${gBBL}${mGo}${PPo} ${gO}${mPl}${PPl} ${gPL}${mBC}${PBc} ${gBC}${mDi}${PPd} ${gD}${mBca}${PBca} ${gBCAB}${mPt}${PPt} ${gPT}${mPN}${PPn} ${gPNP}${mRx}${PRx} ${gRXP}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uPlatine < pP) return message.channel.send(`Pour améliorer l'objet ${Fname} ${femote} au niveau ${uForeuse+1} il te faut:${mP}${PPi} ${gP}${mA}${PPa} ${gA}${mBS}${PBs} ${gBS}${mFe}${PPf} ${gF}${mBBl}${PBBl} ${gBBL}${mGo}${PPo} ${gO}${mPl}${PPl} ${gPL}${mBC}${PBc} ${gBC}${mDi}${PPd} ${gD}${mBca}${PBca} ${gBCAB}${mPt}${PPt} ${gPT}${mPN}${PPn} ${gPNP}${mRx}${PRx} ${gRXP}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uBoisdeChêne < pBC) return message.channel.send(`Pour améliorer l'objet ${Fname} ${femote} au niveau ${uForeuse+1} il te faut:${mP}${PPi} ${gP}${mA}${PPa} ${gA}${mBS}${PBs} ${gBS}${mFe}${PPf} ${gF}${mBBl}${PBBl} ${gBBL}${mGo}${PPo} ${gO}${mPl}${PPl} ${gPL}${mBC}${PBc} ${gBC}${mDi}${PPd} ${gD}${mBca}${PBca} ${gBCAB}${mPt}${PPt} ${gPT}${mPN}${PPn} ${gPNP}${mRx}${PRx} ${gRXP}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uDiamant < pDiam) return message.channel.send(`Pour améliorer l'objet ${Fname} ${femote} au niveau ${uForeuse+1} il te faut:${mP}${PPi} ${gP}${mA}${PPa} ${gA}${mBS}${PBs} ${gBS}${mFe}${PPf} ${gF}${mBBl}${PBBl} ${gBBL}${mGo}${PPo} ${gO}${mPl}${PPl} ${gPL}${mBC}${PBc} ${gBC}${mDi}${PPd} ${gD}${mBca}${PBca} ${gBCAB}${mPt}${PPt} ${gPT}${mPN}${PPn} ${gPNP}${mRx}${PRx} ${gRXP}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uPlutonium < pPluto) return message.channel.send(`Pour améliorer l'objet ${Fname} ${femote} au niveau ${uForeuse+1} il te faut:${mP}${PPi} ${gP}${mA}${PPa} ${gA}${mBS}${PBs} ${gBS}${mFe}${PPf} ${gF}${mBBl}${PBBl} ${gBBL}${mGo}${PPo} ${gO}${mPl}${PPl} ${gPL}${mBC}${PBc} ${gBC}${mDi}${PPd} ${gD}${mBca}${PBca} ${gBCAB}${mPt}${PPt} ${gPT}${mPN}${PPn} ${gPNP}${mRx}${PRx} ${gRXP}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uPierreNoire < pPN) return message.channel.send(`Pour améliorer l'objet ${Fname} ${femote} au niveau ${uForeuse+1} il te faut:${mP}${PPi} ${gP}${mA}${PPa} ${gA}${mBS}${PBs} ${gBS}${mFe}${PPf} ${gF}${mBBl}${PBBl} ${gBBL}${mGo}${PPo} ${gO}${mPl}${PPl} ${gPL}${mBC}${PBc} ${gBC}${mDi}${PPd} ${gD}${mBca}${PBca} ${gBCAB}${mPt}${PPt} ${gPT}${mPN}${PPn} ${gPNP}${mRx}${PRx} ${gRXP}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uBoisDoré < pBCab) return message.channel.send(`Pour améliorer l'objet ${Fname} ${femote} au niveau ${uForeuse+1} il te faut:${mP}${PPi} ${gP}${mA}${PPa} ${gA}${mBS}${PBs} ${gBS}${mFe}${PPf} ${gF}${mBBl}${PBBl} ${gBBL}${mGo}${PPo} ${gO}${mPl}${PPl} ${gPL}${mBC}${PBc} ${gBC}${mDi}${PPd} ${gD}${mBca}${PBca} ${gBCAB}${mPt}${PPt} ${gPT}${mPN}${PPn} ${gPNP}${mRx}${PRx} ${gRXP}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uRxCoins < pRx) return message.channel.send(`Pour améliorer l'objet ${Fname} ${femote} au niveau ${uForeuse+1} il te faut:${mP}${PPi} ${gP}${mA}${PPa} ${gA}${mBS}${PBs} ${gBS}${mFe}${PPf} ${gF}${mBBl}${PBBl} ${gBBL}${mGo}${PPo} ${gO}${mPl}${PPl} ${gPL}${mBC}${PBc} ${gBC}${mDi}${PPd} ${gD}${mBca}${PBca} ${gBCAB}${mPt}${PPt} ${gPT}${mPN}${PPn} ${gPNP}${mRx}${PRx} ${gRXP}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uForeuse < 100 && uPierre >= pPierre && uAcier >= pAcier && uFer >= pFer && uOr >= pGold && uPlatine >= pP && uDiamant >= pDiam && uPlutonium >= pPluto && uPierreNoire >= pPN && uBoisdeSapin > pBS && uBoisdeBouleau >= pBBl && uBoisdeChêne >= pBC && uBoisDoré >= pBCab && uclassen > 0 && uRxCoins >= pRx)
  Pierre[message.author.id] = {
    Pierre: uPierre - pPierre
  };
  BoisdeSapin[message.author.id] = {
    BoisdeSapin: uBoisdeSapin - pBS
  };
  Acier[message.author.id] = {
    Acier: uAcier - pAcier
  };
  BoisdeBouleau[message.author.id] = {
    BoisdeBouleau: uBoisdeBouleau - pBBl
  };
  Fer[message.author.id] = {
    Fer: uFer - pFer
  };
  Or[message.author.id] = {
    Or: uOr - pGold
  };
  Platine[message.author.id] = {
    Platine: uPlatine - pP
  };
  Diamant[message.author.id] = {
    Diamant: uDiamant - pDiam
  };
  Plutonium[message.author.id] = {
    Plutonium: uPlutonium - pPluto
  };
  PierreNoire[message.author.id] = {
    PierreNoire: uPierreNoire - pPN
  };
  BoisdeChêne[message.author.id] = {
    BoisdeChêne: uBoisdeChêne - pBC
  };
  BoisDoré[message.author.id] = {
    BoisDoré: uBoisDoré - pBCab
  };
  Foreuse[message.author.id] = {
    Foreuse: uForeuse + 1
  };
  RxCoins[message.author.id] = {
    RxCoins: uRxCoins - pRx
  };
  xp[message.author.id] = {
    xp: xpactuel + (number * uForeuse) + 2

  };
 
  fs.writeFile("./Pierre.json", JSON.stringify(Pierre), (err) => {
    if (err) console.log(err)
  });
  fs.writeFile("./Acier.json", JSON.stringify(Acier), (err) => {
    if (err) console.log(err)
  });
  fs.writeFile("./BoisdeBouleau.json", JSON.stringify(BoisdeBouleau), (err) => {
    if (err) console.log(err)
  });
fs.writeFile("./BoisdeSapin.json", JSON.stringify(BoisdeSapin), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./Fer.json", JSON.stringify(Fer), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./Or.json", JSON.stringify(Or), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./Platine.json", JSON.stringify(Platine), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./Diamant.json", JSON.stringify(Diamant), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./Plutonium.json", JSON.stringify(Plutonium), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./PierreNoire.json", JSON.stringify(PierreNoire), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./BoisdeChêne.json", JSON.stringify(BoisdeChêne), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./BoisDoré.json", JSON.stringify(BoisDoré), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./Foreuse.json", JSON.stringify(Foreuse), (err) => {
  if(err) console.log(err)
});
fs.writeFile("./RxCoins.json", JSON.stringify(RxCoins), (err) => {
  if (err) console.log(err)
});
message.channel.send(`${message.author.username}, ton objet ${Fname} ${femote} a été amélioré au niveau **${uForeuse+1}**`)
}

if(  
  includesRealy(message, `!uc ${aha}`) ||
  includesRealy(message, `!uc ${ahamaj}`)


){
   if(uHache >= 100) return message.channel.send("Niveau maximal atteint.");
  if(uclassen === 0) return message.channel.send("--> !classe");
  if(uPierre < hPierre) return message.channel.send(`Pour améliorer l'objet ${Hname} ${hemote} au niveau ${uHache+1} il te faut:${vA}${QPa} ${jA}${vBS}${QBs} ${jBS}${vP}${QPi} ${jP}${vFe}${QPf} ${jF}${vBBl}${QBBl} ${jBBL}${vGo}${QPo} ${jO}${vPl}${QPl} ${jPL}${vBC}${QBc} ${jBC}${vDi}${QPd} ${jD}${vBca}${QBca} ${jBCAB}${vPt}${QPt} ${jPT}${vPN}${QPn} ${jPNP}${vRx}${QRx} ${jRXP}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uAcier < hAcier) return message.channel.send(`Pour améliorer l'objet ${Hname} ${hemote} au niveau ${uHache+1} il te faut:${vA}${QPa} ${jA}${vBS}${QBs} ${jBS}${vP}${QPi} ${jP}${vFe}${QPf} ${jF}${vBBl}${QBBl} ${jBBL}${vGo}${QPo} ${jO}${vPl}${QPl} ${jPL}${vBC}${QBc} ${jBC}${vDi}${QPd} ${jD}${vBca}${QBca} ${jBCAB}${vPt}${QPt} ${jPT}${vPN}${QPn} ${jPNP}${vRx}${QRx} ${jRXP}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uBoisdeSapin < hBS) return message.channel.send(`Pour améliorer l'objet ${Hname} ${hemote} au niveau ${uHache+1} il te faut:${vA}${QPa} ${jA}${vBS}${QBs} ${jBS}${vP}${QPi} ${jP}${vFe}${QPf} ${jF}${vBBl}${QBBl} ${jBBL}${vGo}${QPo} ${jO}${vPl}${QPl} ${jPL}${vBC}${QBc} ${jBC}${vDi}${QPd} ${jD}${vBca}${QBca} ${jBCAB}${vPt}${QPt} ${jPT}${vPN}${QPn} ${jPNP}${vRx}${QRx} ${jRXP}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uFer < hFer) return message.channel.send(`Pour améliorer l'objet ${Hname} ${hemote} au niveau ${uHache+1} il te faut:${vA}${QPa} ${jA}${vBS}${QBs} ${jBS}${vP}${QPi} ${jP}${vFe}${QPf} ${jF}${vBBl}${QBBl} ${jBBL}${vGo}${QPo} ${jO}${vPl}${QPl} ${jPL}${vBC}${QBc} ${jBC}${vDi}${QPd} ${jD}${vBca}${QBca} ${jBCAB}${vPt}${QPt} ${jPT}${vPN}${QPn} ${jPNP}${vRx}${QRx} ${jRXP}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uBoisdeBouleau < hBBl) return message.channel.send(`Pour améliorer l'objet ${Hname} ${hemote} au niveau ${uHache+1} il te faut:${vA}${QPa} ${jA}${vBS}${QBs} ${jBS}${vP}${QPi} ${jP}${vFe}${QPf} ${jF}${vBBl}${QBBl} ${jBBL}${vGo}${QPo} ${jO}${vPl}${QPl} ${jPL}${vBC}${QBc} ${jBC}${vDi}${QPd} ${jD}${vBca}${QBca} ${jBCAB}${vPt}${QPt} ${jPT}${vPN}${QPn} ${jPNP}${vRx}${QRx} ${jRXP}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uOr < hGold) return message.channel.send(`Pour améliorer l'objet ${Hname} ${hemote} au niveau ${uHache+1} il te faut:${vA}${QPa} ${jA}${vBS}${QBs} ${jBS}${vP}${QPi} ${jP}${vFe}${QPf} ${jF}${vBBl}${QBBl} ${jBBL}${vGo}${QPo} ${jO}${vPl}${QPl} ${jPL}${vBC}${QBc} ${jBC}${vDi}${QPd} ${jD}${vBca}${QBca} ${jBCAB}${vPt}${QPt} ${jPT}${vPN}${QPn} ${jPNP}${vRx}${QRx} ${jRXP}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uPlatine < hP) return message.channel.send(`Pour améliorer l'objet ${Hname} ${hemote} au niveau ${uHache+1} il te faut:${vA}${QPa} ${jA}${vBS}${QBs} ${jBS}${vP}${QPi} ${jP}${vFe}${QPf} ${jF}${vBBl}${QBBl} ${jBBL}${vGo}${QPo} ${jO}${vPl}${QPl} ${jPL}${vBC}${QBc} ${jBC}${vDi}${QPd} ${jD}${vBca}${QBca} ${jBCAB}${vPt}${QPt} ${jPT}${vPN}${QPn} ${jPNP}${vRx}${QRx} ${jRXP}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uBoisdeChêne < hBC) return message.channel.send(`Pour améliorer l'objet ${Hname} ${hemote} au niveau ${uHache+1} il te faut:${vA}${QPa} ${jA}${vBS}${QBs} ${jBS}${vP}${QPi} ${jP}${vFe}${QPf} ${jF}${vBBl}${QBBl} ${jBBL}${vGo}${QPo} ${jO}${vPl}${QPl} ${jPL}${vBC}${QBc} ${jBC}${vDi}${QPd} ${jD}${vBca}${QBca} ${jBCAB}${vPt}${QPt} ${jPT}${vPN}${QPn} ${jPNP}${vRx}${QRx} ${jRXP}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uDiamant < hDiam) return message.channel.send(`Pour améliorer l'objet ${Hname} ${hemote} au niveau ${uHache+1} il te faut:${vA}${QPa} ${jA}${vBS}${QBs} ${jBS}${vP}${QPi} ${jP}${vFe}${QPf} ${jF}${vBBl}${QBBl} ${jBBL}${vGo}${QPo} ${jO}${vPl}${QPl} ${jPL}${vBC}${QBc} ${jBC}${vDi}${QPd} ${jD}${vBca}${QBca} ${jBCAB}${vPt}${QPt} ${jPT}${vPN}${QPn} ${jPNP}${vRx}${QRx} ${jRXP}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uPlutonium < hPluto) return message.channel.send(`Pour améliorer l'objet ${Hname} ${hemote} au niveau ${uHache+1} il te faut:${vA}${QPa} ${jA}${vBS}${QBs} ${jBS}${vP}${QPi} ${jP}${vFe}${QPf} ${jF}${vBBl}${QBBl} ${jBBL}${vGo}${QPo} ${jO}${vPl}${QPl} ${jPL}${vBC}${QBc} ${jBC}${vDi}${QPd} ${jD}${vBca}${QBca} ${jBCAB}${vPt}${QPt} ${jPT}${vPN}${QPn} ${jPNP}${vRx}${QRx} ${jRXP}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uPierreNoire < hPN) return message.channel.send(`Pour améliorer l'objet ${Hname} ${hemote} au niveau ${uHache+1} il te faut:${vA}${QPa} ${jA}${vBS}${QBs} ${jBS}${vP}${QPi} ${jP}${vFe}${QPf} ${jF}${vBBl}${QBBl} ${jBBL}${vGo}${QPo} ${jO}${vPl}${QPl} ${jPL}${vBC}${QBc} ${jBC}${vDi}${QPd} ${jD}${vBca}${QBca} ${jBCAB}${vPt}${QPt} ${jPT}${vPN}${QPn} ${jPNP}${vRx}${QRx} ${jRXP}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uBoisDoré < hBCab) return message.channel.send(`Pour améliorer l'objet ${Hname} ${hemote} au niveau ${uHache+1} il te faut:${vA}${QPa} ${jA}${vBS}${QBs} ${jBS}${vP}${QPi} ${jP}${vFe}${QPf} ${jF}${vBBl}${QBBl} ${jBBL}${vGo}${QPo} ${jO}${vPl}${QPl} ${jPL}${vBC}${QBc} ${jBC}${vDi}${QPd} ${jD}${vBca}${QBca} ${jBCAB}${vPt}${QPt} ${jPT}${vPN}${QPn} ${jPNP}${vRx}${QRx} ${jRXP}\n:x: Malheureusement, tu n'as pas assez de ressources, reviens plus tard...`)
  if(uRxCoins < hRx) return message.channel.send("Pas assez de ressources")
  if(uHache < 100 && uPierre >= hPierre && uAcier >= hAcier && uFer >= hFer && uOr >= hGold && uPlatine >= hP && uDiamant >= hDiam && uPlutonium >= hPluto && uPierreNoire >= hPN && uBoisdeSapin > hBS && uBoisdeBouleau >= hBBl && uBoisdeChêne >= hBC && uBoisDoré >= hBCab && uclassen > 0 && uRxCoins > hRx)
  Pierre[message.author.id] = {
    Pierre: uPierre - hPierre
  };
  BoisdeSapin[message.author.id] = {
    BoisdeSapin: uBoisdeSapin - hBS
  };
  Acier[message.author.id] = {
    Acier: uAcier - hAcier
  };
  BoisdeBouleau[message.author.id] = {
    BoisdeBouleau: uBoisdeBouleau - hBBl
  };
  Fer[message.author.id] = {
    Fer: uFer - hFer
  };
  Or[message.author.id] = {
    Or: uOr - hGold
  };
  Platine[message.author.id] = {
    Platine: uPlatine - hP
  };
  Diamant[message.author.id] = {
    Diamant: uDiamant - hDiam
  };
  Plutonium[message.author.id] = {
    Plutonium: uPlutonium - hPluto
  };
  PierreNoire[message.author.id] = {
    PierreNoire: uPierreNoire - hPN
  };
  BoisdeChêne[message.author.id] = {
    BoisdeChêne: uBoisdeChêne - hBC
  };
  BoisDoré[message.author.id] = {
    BoisDoré: uBoisDoré - hBCab
  };
  Hache[message.author.id] = {
    Hache: uHache + 1
  };
  RxCoins[message.author.id] = {
    RxCoins: uRxCoins - hRx
  };
  xp[message.author.id] = {
    xp: xpactuel + (number2 * uHache) + 5

  };
 
  fs.writeFile("./Pierre.json", JSON.stringify(Pierre), (err) => {
    if (err) console.log(err)
  });
  fs.writeFile("./Acier.json", JSON.stringify(Acier), (err) => {
    if (err) console.log(err)
  });
  fs.writeFile("./BoisdeBouleau.json", JSON.stringify(BoisdeBouleau), (err) => {
    if (err) console.log(err)
  });
fs.writeFile("./BoisdeSapin.json", JSON.stringify(BoisdeSapin), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./Fer.json", JSON.stringify(Fer), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./Or.json", JSON.stringify(Or), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./Platine.json", JSON.stringify(Platine), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./Diamant.json", JSON.stringify(Diamant), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./Plutonium.json", JSON.stringify(Plutonium), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./PierreNoire.json", JSON.stringify(PierreNoire), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./BoisdeChêne.json", JSON.stringify(BoisdeChêne), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./BoisDoré.json", JSON.stringify(BoisDoré), (err) => {
  if (err) console.log(err)
});
fs.writeFile("./Hache.json", JSON.stringify(Hache), (err) => {
  if(err) console.log(err)
});
fs.writeFile("./RxCoins.json", JSON.stringify(RxCoins), (err) => {
  if(err) console.log(err)
});
message.channel.send(`${message.author.username}, ton objet ${Hname} ${hemote} a été amélioré au niveau **${uHache+1}**`)
}
let prestigeboostore = 1+(0.6*uetoilef)
let prestigeboostwood = 1+(0.6*uetoileh)




let armestar1 = ""
let armestar2 = ""
let armestar3 = ""
let armestar4 = ""
let armestar5 = ""
let armestar6 = ""
let armestar7 = ""
let armestar8 = ""
let armestar9 = ""
let armestar10 = ""
let armestar11 = ""
let armestar12 = ""
let armestar13 = ""
let armestar14 = ""
let armestar15 = ""
let armestar16 = ""
let armestar17 = ""
let armestar18 = ""
let armestar19 = ""
let armestar20 = ""
let armestar21 = ""
let armestar22 = ""
let armestar23 = ""
let armestar24 = ""
let armestar25 = ""
let armestar26 = ""
let armestar27 = ""
let armestar28 = ""
let armestar29 = ""
let armestar30 = ""
let armestar31 = ""
let armestar32 = ""
let armestar33 = ""
let armestar34 = ""
let armestar35 = ""
let armestar36 = ""
let armestar37 = ""
let armestar38 = ""
let armestar39 = ""
let armestar40 = ""
let armestar41 = ""
let armestar42 = ""
let armestar43 = ""
let armestar44 = ""
if(uarmeb1 === 1) {
  armestar1 = ":star:"
}
if(uarmeb1 === 2) {
  armestar1 = ":star::star:"
}
if(uarmeb1 === 3) {
  armestar1 = ":star::star::star:"
}

if(uarmeb2 === 1) {
  armestar2 = ":star:"
}
if(uarmeb2 === 2) {
  armestar2 = ":star::star:"
}
if(uarmeb2 === 3) {
  armestar2 = ":star::star::star:"
}

if(uarmeb3 === 1) {
  armestar3 = ":star:"
}
if(uarmeb3 === 2) {
  armestar3 = ":star::star:"
}
if(uarmeb3 === 3) {
  armestar3 = ":star::star::star:"
}


if(uarmeb4 === 1) {
  armestar4 = ":star:"
}
if(uarmeb4 === 2) {
  armestar4 = ":star::star:"
}
if(uarmeb4 === 3) {
  armestar4 = ":star::star::star:"
}


if(uarmeb5 === 1) {
  armestar5 = ":star:"
}
if(uarmeb5 === 2) {
  armestar5 = ":star::star:"
}
if(uarmeb5 === 3) {
  armestar5 = ":star::star::star:"
}

if(uarmeb6 === 1) {
  armestar6 = ":star:"
}
if(uarmeb6 === 2) {
  armestar6 = ":star::star:"
}
if(uarmeb6 === 3) {
  armestar6 = ":star::star::star:"
}

if(uarmeb7 === 1) {
  armestar7 = ":star:"
}
if(uarmeb7 === 2) {
  armestar7 = ":star::star:"
}
if(uarmeb7 === 3) {
  armestar7 = ":star::star::star:"
}

if(uarmeb8 === 1) {
  armestar8 = ":star:"
}
if(uarmeb8 === 2) {
  armestar8 = ":star::star:"
}
if(uarmeb8 === 3) {
  armestar8 = ":star::star::star:"
}
if(uarmeb9 === 1) {
  armestar9 = ":star:"
}
if(uarmeb9 === 2) {
  armestar9 = ":star::star:"
}
if(uarmeb9 === 3) {
  armestar9 = ":star::star::star:"
}


if(uarmeb10 === 1) {
  armestar10 = ":star:"
}
if(uarmeb10 === 2) {
  armestar10 = ":star::star:"
}
if(uarmeb10 === 3) {
  armestar10 = ":star::star::star:"
}

if(uarmeb11 === 1) {
  armestar11 = ":star:"
}
if(uarmeb11 === 2) {
  armestar11 = ":star::star:"
}
if(uarmeb11 === 3) {
  armestar11 = ":star::star::star:"
}


if(uarmeb12 === 1) {
  armestar12 = ":star:"
}
if(uarmeb12 === 2) {
  armestar12 = ":star::star:"
}
if(uarmeb12 === 3) {
  armestar12 = ":star::star::star:"
}
if(uarmeb13 === 1) {
  armestar13 = ":star:"
}
if(uarmeb13 === 2) {
  armestar13 = ":star::star:"
}
if(uarmeb13 === 3) {
  armestar13= ":star::star::star:"
}
if(uarmeb14 === 1) {
  armestar14 = ":star:"
}
if(uarmeb14 === 2) {
  armestar14 = ":star::star:"
}
if(uarmeb14 === 3) {
  armestar14 = ":star::star::star:"
}

if(uarmeb15 === 1) {
  armestar15 = ":star:"
}
if(uarmeb15 === 2) {
  armestar15 = ":star::star:"
}
if(uarmeb15 === 3) {
  armestar15 = ":star::star::star:"
}


if(uarmeb16 === 1) {
  armestar16 = ":star:"
}
if(uarmeb16 === 2) {
  armestar16 = ":star::star:"
}
if(uarmeb16 === 3) {
  armestar16 = ":star::star::star:"
}

if(uarmeb17 === 1) {
  armestar17 = ":star:"
}
if(uarmeb17 === 2) {
  armestar17 = ":star::star:"
}
if(uarmeb17 === 3) {
  armestar17 = ":star::star::star:"
}

if(uarmeb18 === 1) {
  armestar18 = ":star:"
}
if(uarmeb18 === 2) {
  armestar18 = ":star::star:"
}
if(uarmeb18 === 3) {
  armestar18 = ":star::star::star:"
}
if(uarmeb19 === 1) {
  armestar19 = ":star:"
}
if(uarmeb19 === 2) {
  armestar19 = ":star::star:"
}
if(uarmeb19 === 3) {
  armestar19 = ":star::star::star:"
}

if(uarmeb20 === 1) {
  armestar20 = ":star:"
}
if(uarmeb20 === 2) {
  armestar20 = ":star::star:"
}
if(uarmeb20 === 3) {
  armestar20 = ":star::star::star:"
}
if(uarmeb21 === 1) {
  armestar21 = ":star:"
}
if(uarmeb21 === 2) {
  armestar21 = ":star::star:"
}
if(uarmeb21 === 3) {
  armestar21 = ":star::star::star:"
}
if(uarmeb22 === 1) {
  armestar22 = ":star:"
}
if(uarmeb22 === 2) {
  armestar22 = ":star::star:"
}
if(uarmeb22 === 3) {
  armestar22 = ":star::star::star:"
}
if(uarmeb23 === 1) {
  armestar23 = ":star:"
}
if(uarmeb23 === 2) {
  armestar23 = ":star::star:"
}
if(uarmeb23 === 3) {
  armestar23 = ":star::star::star:"
}
if(uarmeb24 === 1) {
  armestar24 = ":star:"
}
if(uarmeb24 === 2) {
  armestar24 = ":star::star:"
}
if(uarmeb24 === 3) {
  armestar24 = ":star::star::star:"
}
if(uarmeb25 === 1) {
  armestar25 = ":star:"
}
if(uarmeb25 === 2) {
  armestar25 = ":star::star:"
}
if(uarmeb25 === 3) {
  armestar25 = ":star::star::star:"
}
if(uarmeb26 === 1) {
  armestar26 = ":star:"
}
if(uarmeb26 === 2) {
  armestar26 = ":star::star:"
}
if(uarmeb26 === 3) {
  armestar26 = ":star::star::star:"
}
if(uarmeb27 === 1) {
  armestar27 = ":star:"
}
if(uarmeb27 === 2) {
  armestar27 = ":star::star:"
}
if(uarmeb27 === 3) {
  armestar27 = ":star::star::star:"
}
if(uarmeb28 === 1) {
  armestar28 = ":star:"
}
if(uarmeb28 === 2) {
  armestar28 = ":star::star:"
}
if(uarmeb28 === 3) {
  armestar28 = ":star::star::star:"
}
if(uarmeb29 === 1) {
  armestar29 = ":star:"
}
if(uarmeb29 === 2) {
  armestar29 = ":star::star:"
}
if(uarmeb29 === 3) {
  armestar29 = ":star::star::star:"
}
if(uarmeb30 === 1) {
  armestar30 = ":star:"
}
if(uarmeb30 === 2) {
  armestar30 = ":star::star:"
}
if(uarmeb30 === 3) {
  armestar30 = ":star::star::star:"
}
if(uarmeb31 === 1) {
  armestar31 = ":star:"
}
if(uarmeb31 === 2) {
  armestar31 = ":star::star:"
}
if(uarmeb31 === 3) {
  armestar31 = ":star::star::star:"
}
if(uarmeb32 === 1) {
  armestar32 = ":star:"
}
if(uarmeb32 === 2) {
  armestar32 = ":star::star:"
}
if(uarmeb32 === 3) {
  armestar32 = ":star::star::star:"
}
if(uarmeb33 === 1) {
  armestar33 = ":star:"
}
if(uarmeb33 === 2) {
  armestar33 = ":star::star:"
}
if(uarmeb33 === 3) {
  armestar33 = ":star::star::star:"
}
if(uarmeb34 === 1) {
  armestar34 = ":star:"
}
if(uarmeb34 === 2) {
  armestar34 = ":star::star:"
}
if(uarmeb34 === 3) {
  armestar34 = ":star::star::star:"
}
if(uarmeb35 === 1) {
  armestar35 = ":star:"
}
if(uarmeb35 === 2) {
  armestar35 = ":star::star:"
}
if(uarmeb35 === 3) {
  armestar35 = ":star::star::star:"
}
if(uarmeb36 === 1) {
  armestar36 = ":star:"
}
if(uarmeb36 === 2) {
  armestar36 = ":star::star:"
}
if(uarmeb36 === 3) {
  armestar36 = ":star::star::star:"
}

if(uarmeb37 === 1) {
  armestar37 = ":star:"
}
if(uarmeb37 === 2) {
  armestar37 = ":star::star:"
}
if(uarmeb37 === 3) {
  armestar37 = ":star::star::star:"
}
if(uarmeb38 === 1) {
  armestar38 = ":star:"
}
if(uarmeb38 === 2) {
  armestar38 = ":star::star:"
}
if(uarmeb38 === 3) {
  armestar38 = ":star::star::star:"
}
if(uarmeb39 === 1) {
  armestar39 = ":star:"
}
if(uarmeb39 === 2) {
  armestar39 = ":star::star:"
}
if(uarmeb39 === 3) {
  armestar39 = ":star::star::star:"
}
if(uarmeb40 === 1) {
  armestar40 = ":star:"
}
if(uarmeb40 === 2) {
  armestar40 = ":star::star:"
}
if(uarmeb40 === 3) {
  armestar40 = ":star::star::star:"
}
if(uarmeb41 === 1) {
  armestar41 = ":star:"
}
if(uarmeb41 === 2) {
  armestar41 = ":star::star:"
}
if(uarmeb41 === 3) {
  armestar41 = ":star::star::star:"
}
if(uarmeb42 === 1) {
  armestar42 = ":star:"
}
if(uarmeb42 === 2) {
  armestar42 = ":star::star:"
}
if(uarmeb42 === 3) {
  armestar42 = ":star::star::star:"
}
if(uarmeb43 === 1) {
  armestar43 = ":star:"
}
if(uarmeb43 === 2) {
  armestar43 = ":star::star:"
}
if(uarmeb43 === 3) {
  armestar43 = ":star::star::star:"
}
if(uarmeb44 === 1) {
  armestar44 = ":star:"
}
if(uarmeb44 === 2) {
  armestar44 = ":star::star:"
}
if(uarmeb44 === 3) {
  armestar44 = ":star::star::star:"
}
let emotestar1= ""
let emotestar2 = "" 
let emotestar3 = ""
let emotestar4 = ""
let emotestar5 = ""
let emotestar6 = ""
let emotestar7 = ""
let emotestar8 = ""
let emotestar9 = ""
let emotestar10 = ""
let emotestar11 = ""
let emotestar12 = ""
let emotestar13 = ""
let emotestar14 = ""
let emotestar15 = ""
let emotestar16 = ""
let emotestar17 = ""
let emotestar18 = ""
let emotestar19 = ""
let emotestar20 = ""
let emotestar21 = ""
let emotestar22 = ""
let emotestar23 = ""
let emotestar24 = ""
let emotestar25 = ""
let emotestar26 = ""
let emotestar27 = ""
let emotestar28 = ""
let emotestar29 = ""
let emotestar30 = ""
let emotestar31 = ""
let emotestar32 = ""
let emotestar33 = ""
let emotestar34 = ""
let emotestar35 = ""
let emotestar36 = ""
let emotestar37 = ""
let emotestar38 = ""
let emotestar39 = ""
let emotestar40 = ""
let emotestar41 = ""
let emotestar42 = ""

let emoteskinpet1 = "<:chat1:730798218987962875>"
if(uskin1 === 1) {
  emoteskinpet1 = "<:chat1_1:731903690964729917>"
  emotestar1 = ":star:"
}
if(uskin1 === 2) {
  emoteskinpet1 = "<:chat1_2:731924850041421874>"
  emotestar1 = ":star::star:"
}
if(uskin1 === 3) {
  emoteskinpet1 = "<:chat1_3:732281205201829936>"
  emotestar1 = ":star::star::star:"
}

let emoteskinpet2 = "<:souris2:730798236826075186>"
if(uskin2 === 1) {
  emoteskinpet2 = "<:souris2_1:731904248287199253>"
  emotestar2 = ":star:"
}
if(uskin2 === 2) {
  emoteskinpet2 = "<:souris2_2:731925676138954782>"
  emotestar2 = ":star::star:"
}
if(uskin2 === 3) {
  emoteskinpet2 = "<:souris2_3:732281952559824907>"
  emotestar2 = ":star::star::star:"
}

let emoteskinpet3= "<:rat3:730799127352574024>"
if(uskin3 === 1) {
  emoteskinpet3 = "<:rat3_1:731904205270548520>"
  emotestar3 = ":star:"
}
if(uskin3 === 2) {
  emoteskinpet3 = "<:rat3_2:731925632568787034>"
  emotestar3 = ":star::star:"
}
if(uskin3 === 3) {
  emoteskinpet3 = "<:rat3_3:732281866245111908>"
  emotestar3 = ":star::star::star:"
}
let emoteskinpet4= "<:lutin4:730799141059297310>"
if(uskin4 === 1) {
  emoteskinpet4 = "<:lutin4_1:731904067194060831>"
  emotestar4 = ":star:"
}
if(uskin4 === 2) {
  emoteskinpet4 = "<:lutin4_2:731925507326869535>"
  emotestar4 = ":star::star:"
}
if(uskin4 === 3) {
  emoteskinpet4 = "<:lutin4_3:732281697223049247>"
  emotestar4 = ":star::star::star:"
}


let emoteskinpet5= "<:poney5:730799424397115435>"
if(uskin5 === 1) {
  emoteskinpet5 = "<:poney5_1:731904164321558540>"
  emotestar5 = ":star:"
}
if(uskin5 === 2) {
  emoteskinpet5 = "<:poney5_2:731925585739120661>"
  emotestar5 = ":star::star:"
}
if(uskin5 === 3) {
  emoteskinpet5 = "<:poney5_3:732281812964999329>"
  emotestar5 = ":star::star::star:"
}
let emoteskinpet6= "<:licorne6:730800122803257385>"
if(uskin6 === 1) {
  emoteskinpet6 = "<:licorne6_1:731903944602681397>"
  emotestar6 = ":star:"
}
if(uskin6 === 2) {
  emoteskinpet6 = "<:licorne6_2:731925323423154197>"
  emotestar6 = ":star::star:"
}
if(uskin6 === 3) {
  emoteskinpet6 = "<:licorne6_3:732281515358289933>"
  emotestar6 = ":star::star::star:"
}

let emoteskinpet7="<:hamster7:730801193676439582>"
if(uskin7 === 1) {
  emoteskinpet7 = "<:hamster7_1:731903822078673007>"
  emotestar7 = ":star:"
}
if(uskin7 === 2) {
  emoteskinpet7 = "<:hamster7_2:731925264824664095>"
  emotestar7 = ":star::star:"
}
if(uskin7 === 3) {
  emoteskinpet7 = "<:hamster7_3:732281421309149245>"
  emotestar7 = ":star::star::star:"
}
let emoteskinpet8= "<:lapin8:730801586569347112>"
if(uskin8 === 1) {
  emoteskinpet8 = "<:lapin8_1:731903907042689124>"
  emotestar8 = ":star:"
}
if(uskin8 === 2) {
  emoteskinpet8 = "<:lapin8_2:731925285200461825>"
  emotestar8 = ":star::star:"
}
if(uskin8 === 3) {
  emoteskinpet8 = "<:lapin8_3:732281454184235080>"
  emotestar8 = ":star::star::star:"
}
let emoteskinpet9="<:espritdelaforet9:730815206661292154>"
if(uskin9 === 1) {
  emoteskinpet9 = "<:espritdelaforet9_1:731903764826423447>"
  emotestar9 = ":star:"
}
if(uskin9 === 2) {
  emoteskinpet9 = "<:espritdelaforet9_2:731925081218875563>"
  emotestar9 = ":star::star:"
}
if(uskin9 === 3) {
  emoteskinpet9 = "<:espritdelaforet9_3:732281291227136032>"
  emotestar9 = ":star::star::star:"
}

let emoteskinpet10="<:fantome10:730820265734307912>"
if(uskin10 === 1) {
  emoteskinpet10 = "<:fantome10_1:731903839451611177>"
  emotestar10 = ":star:"
}
if(uskin10 === 2) {
  emoteskinpet10 = "<:fantome10_2:731925178333790247>"
  emotestar10 = ":star::star:"
}
if(uskin10 === 3) {
  emoteskinpet10 = "<:fantome10_3:732281352933605466>"
  emotestar10 = ":star::star::star:"
}
let emoteskinpet11="<:cheval11:730821033984262174>"
if(uskin11 === 1) {
  emoteskinpet11 = "<:cheval11_1:731903706584449055>"
  emotestar11 = ":star:"
}
if(uskin11 === 2) {
  emoteskinpet11 = "<:cheval11_2:731924871092895784>"
  emotestar11 = ":star::star:"
}
if(uskin11 === 3) {
  emoteskinpet11 = "<:cheval11_3:732281222507790486>"
  emotestar11 = ":star::star::star:"
}
let emoteskinpet12="<:loup12:730821730636922900>"
if(uskin12 === 1) {
  emoteskinpet12 = "<:loup12_1:731903999086952488>"
  emotestar12 = ":star:"
}
if(uskin12 === 2) {
  emoteskinpet12 = "<:loup12_2:731925404847308850>"
  emotestar12 = ":star::star:"
}
if(uskin12 === 3) {
  emoteskinpet12 = "<:loup12_3:732281610594025543>"
  emotestar12 = ":star::star::star:"
}
let emoteskinpet13="<:requin13:730822816248758316>"
if(uskin13 === 1) {
  emoteskinpet13 = "<:requin13_1:731904228766908448>"
  emotestar13 = ":star:"
}
if(uskin13 === 2) {
  emoteskinpet13 = "<:requin13_2:731925652210712588>"
  emotestar13 = ":star::star:"
}
if(uskin13 === 3) {
  emoteskinpet13 = "<:requin13_3:732281889305395200>"
  emotestar13 = ":star::star::star:"
}
let emoteskinpet14="<:gorille14:730823804535701525>"
if(uskin14 === 1) {
  emoteskinpet14 = "<:gorille14_1:731903889703698582>"
  emotestar14 = ":star:"
}
if(uskin14 === 2) {
  emoteskinpet14 = "<:gorille14_2:731904832075726919>"
  emotestar14 = ":star::star:"
}
if(uskin14 === 3) {
  emoteskinpet14 = "<:gorille14_3:731904954373111831>"
  emotestar14 = ":star::star::star:"
}
let emoteskinpet15="<:espritdufeu15:730808507397308496>"
if(uskin15 === 1) {
  emoteskinpet15 = "<:espritdufeu15_1:731903803984445540>"
  emotestar15 = ":star:"
}
if(uskin15 === 2) {
  emoteskinpet15 = "<:espritdufeu15_2:731925128484487301>"
  emotestar15 = ":star::star:"
}
if(uskin15 === 3) {
  emoteskinpet15 = "<:espritdufeu15_3:732281333086421092>"
  emotestar15 = ":star::star::star:"
}
let emoteskinpet16="<:poupeevaudou16:730820026524762112>"
if(uskin16 === 1) {
  emoteskinpet16 = "<:poupeevaudou16_1:731904184386846780>"
  emotestar16 = ":star:"
}
if(uskin16 === 2) {
  emoteskinpet16 = "<:poupeevaudou16_2:731925606949978157>"
  emotestar16 = ":star::star:"
}
if(uskin16 === 3) {
  emoteskinpet16 = "<:poupeevaudou16_3:732281842475991091>"
  emotestar16 = ":star::star::star:"
}
let emoteskinpet17="<:Liche17:730825270365519934>"
if(uskin17 === 1) {
  emoteskinpet17 = "<:Liche17_1:731903927406035015>"
  emotestar17 = ":star:"
}
if(uskin17 === 2) {
  emoteskinpet17 = "<:Liche17_2:731925305450692708>"
  emotestar17 = ":star::star:"
}
if(uskin17 === 3) {
  emoteskinpet17 = "<:Liche17_3:732281491865993357>"
  emotestar17 = ":star::star::star:"
}
let emoteskinpet18="<:Vampire18:730827892593786930>"
if(uskin18 === 1) {
  emoteskinpet18 = "<:Vampire18_1:731904309163327600>"
  emotestar18 = ":star:"
}
if(uskin18 === 2) {
  emoteskinpet18 = "<:Vampire18_2:731925742232797284>"
  emotestar18 = ":star::star:"
}
if(uskin18 === 3) {
  emoteskinpet18 = "<:Vampire18_3:732281982406623306>"
  emotestar18 = ":star::star::star:"
}
let emoteskinpet19="<:lion19:730828452638490705>"
if(uskin19 === 1) {
  emoteskinpet19 = "<:lion19_1:731903963837890620>"
  emotestar19 = ":star:"
}
if(uskin19 === 2) {
  emoteskinpet19 = "<:lion19_2:731925343065342023>"
  emotestar19 = ":star::star:"
}
if(uskin19 === 3) {
  emoteskinpet19 = "<:lion19_3:732281537869119579>"
  emotestar19 = ":star::star::star:"
}

let emoteskinpet20="<:LoupGarou20:730821751101063219>"
if(uskin20 === 1) {
  emoteskinpet20 = "<:LoupGarou20_1:731904042145677313>"
  emotestar20 = ":star:"
}
if(uskin20 === 2) {
  emoteskinpet20 = "<:LoupGarou20_2:731925481372516373>"
  emotestar20 = ":star::star:"
}
if(uskin20 === 3) {
  emoteskinpet20 = "<:LoupGarou20_3:732281672690565162>"
  emotestar20 = ":star::star::star:"
}
let emoteskinpet21="<:espritdestenebres21:730815233681260554>"
if(uskin21 === 1) {
  emoteskinpet21 = "<:espritdestenebres21_1:731903791653191802>"
  emotestar21 = ":star:"
}
if(uskin21 === 2) {
  emoteskinpet21 = "<:espritdestenebres21_2:731925115952169012>"
  emotestar21 = ":star::star:"
}
if(uskin21 === 3) {
  emoteskinpet21 = "<:espritdestenebres21_3:732281319559528520>"
  emotestar21 = ":star::star::star:"
}
let emoteskinpet22="<:espritdelalumiere22:730815219877806122>"
if(uskin22 === 1) {
  emoteskinpet22 = "<:espritdelalumiere22_1:731903778701181018>"
  emotestar22 = ":star:"
}
if(uskin22 === 2) {
  emoteskinpet22 = "<:espritdelalumiere22_2:731925101158727711>"
  emotestar22 = ":star::star:"
}
if(uskin22 === 3) {
  emoteskinpet22 = "<:espritdelalumiere22_3:732281306582483006>"
  emotestar22 = ":star::star::star:"
}
let emoteskinpet23="<:momie23:730830844150939721>"
if(uskin23 === 1) {
  emoteskinpet23 = "<:momie23_1:731904093374906448>"
  emotestar23 = ":star:"
}
if(uskin23 === 2) {
  emoteskinpet23 = "<:momie23_2:731925533583081522>"
  emotestar23 = ":star::star:"
}
if(uskin23 === 3) {
  emoteskinpet23 = "<:momie23_3:732281738885202020>"
  emotestar23 = ":star::star::star:"
}
let emoteskinpet24="<:LoupBlanc24:730821765856755712>"
if(uskin24 === 1) {
  emoteskinpet24 = "<:LoupBlanc24_1:731904018426626088>"
  emotestar24 = ":star:"
}
if(uskin24 === 2) {
  emoteskinpet24 = "<:LoupBlanc24_2:731925440171606126>"
  emotestar24 = ":star::star:"
}
if(uskin24 === 3) {
  emoteskinpet24 = "<:LoupBlanc24_3:732281649206788197>"
  emotestar24 = ":star::star::star:"
}
let emoteskinpet25="<:lionsacre25:730833340541960194>"
if(uskin25 === 1) {
  emoteskinpet25 = "<:lionsacre25_1:731903979264671854>"
  emotestar25 = ":star:"
}
if(uskin25 === 2) {
  emoteskinpet25 = "<:lionsacre25_2:731904849712775289>"
  emotestar25 = ":star::star:"
}
if(uskin25 === 3) {
  emoteskinpet25 = "<:lionsacre25_3:731904965068456017>"
  emotestar25 = ":star::star::star:"
}
let emoteskinpet26="<:tigre26:730833621140635761>"
if(uskin26 === 1) {
  emoteskinpet26 = "<:tigre26_1:731904269816692739>"
  emotestar26 = ":star:"
}
if(uskin26 === 2) {
  emoteskinpet26 = "<:tigre26_2:731904874702176366>"
  emotestar26 = ":star::star:"
}
if(uskin26 === 3) {
  emoteskinpet26 = "<:tigre26_3:731904988909011015>"
  emotestar26 = ":star::star::star:"
}



let emoteskinpet27="<:turtlegiant27:730834060355829880>"
if(uskin27 === 1) {
  emoteskinpet27 = "<:turtlegiant27_1:731904291027157016>"
  emotestar27 = ":star:"
}
if(uskin27 === 2) {
  emoteskinpet27 = "<:turtlegiant27_2:731925715343245403>"
  emotestar27 = ":star::star:"
}
if(uskin27 === 3) {
  emoteskinpet27 = "<:turtlegiant27_3:749215514319913022>"
  emotestar27 = ":star::star::star:"
}

let emoteskinpet28="<:petitdemon28:730836305617092719>"
if(uskin28 === 1) {
  emoteskinpet28 = "<:petitdmon28_1:731904118234415215>"
  emotestar28 = ":star:"
}
if(uskin28 === 2) {
  emoteskinpet28 = "<:petitdmon28_2:731925558820339915>"
  emotestar28 = ":star::star:"
}
if(uskin28 === 3) {
  emoteskinpet28 = "<:petitdmon28_3:732281787455373323>"
  emotestar28 = ":star::star::star:"
}
let emoteskinpet29="<:Demon29:730837896596160592>"
if(uskin29 === 1) {
  emoteskinpet29 = "<:Dmon29_1:731903722505895946>"
  emotestar29 = ":star:"
}
if(uskin29 === 2) {
  emoteskinpet29 = "<:Dmon29_2:731925003876171906>"
  emotestar29 = ":star::star:"
}
if(uskin29 === 3) {
  emoteskinpet29 = "<:Dmon29_3:732281252236755064>"
  emotestar29 = ":star::star::star:"
}
let emoteskinpet30="<:Diablotin30:730839107063775363>"
if(uskin30 === 1) {
  emoteskinpet30 = "<:Diablotin30_1:731903736393367564>"
  emotestar30 = ":star:"
}
if(uskin30 === 2) {
  emoteskinpet30 = "<:Diablotin30_2:731904816217063436>"
  emotestar30 = ":star::star:"
}
if(uskin30 === 3) {
  emoteskinpet30 = "<:Diablotin30_3:731904940158615684>"
  emotestar30 = ":star::star::star:"
}
let emoteskinpet31="<:Ange31:730842004984168488>"
if(uskin31 === 1) {
  emoteskinpet31 = "<:Ange31_1:731903618541944912>"
  emotestar31 = ":star:"
}
if(uskin31 === 2) {
  emoteskinpet31 = "<:Ange31_2:731924777614311445>"
  emotestar31 = ":star::star:"
}
if(uskin31 === 3) {
  emoteskinpet31 = "<:Ange31_3:732281109492006993>"
  emotestar31 = ":star::star::star:"
}
let emoteskinpet32="<:aigle32:730815256372183153>"
if(uskin32 === 1) {
  emoteskinpet32 = "<:aigle32_1:731903603853492265>"
  emotestar32 = ":star:"
}
if(uskin32 === 2) {
  emoteskinpet32 = "<:aigle32_2:731924764884598887>"
  emotestar32 = ":star::star:"
}
if(uskin32 === 3) {
  emoteskinpet32 = "<:aigle32_3:732281096707899453>"
  emotestar32 = ":star::star::star:"
}
let emoteskinpet33="<:faucon33:730815246960427078>"
if(uskin33 === 1) {
  emoteskinpet33 = "<:faucon33_1:731903856513908749>"
  emotestar33 = ":star:"
}
if(uskin33 === 2) {
  emoteskinpet33 = "<:faucon33_2:731925209703252046>"
  emotestar33 = ":star::star:"
}
if(uskin33 === 3) {
  emoteskinpet33 = "<:faucon33_3:732281387876483174>"
  emotestar33 = ":star::star::star:"
}
let emoteskinpet34="<:Golem34:730853036053889075>"
if(uskin34 === 1) {
  emoteskinpet34 = "<:Golem34_1:731903873702166638>"
  emotestar34 = ":star:"
}
if(uskin34 === 2) {
  emoteskinpet34 = "<:Golem34_2:731925226522148975>"
  emotestar34 = ":star::star:"
}
if(uskin34 === 3) {
  emoteskinpet34 = "<:Golem34_3:732281404699967558>"
  emotestar34 = ":star::star::star:"
}
let emoteskinpet35="<:Archange35:731066951362674710>"
if(uskin35 === 1) {
  emoteskinpet35 = "<:Archange35_1:731903630113767495>"
  emotestar35 = ":star:"
}
if(uskin35 === 2) {
  emoteskinpet35 = "<:Archange35_2:731924788368637953>"
  emotestar35 = ":star::star:"
}
if(uskin35 === 3) {
  emoteskinpet35 = "<:Archange35_3:732281130274783383>"
  emotestar35 = ":star::star::star:"
}
let emoteskinpet36="<:Cerbere36:731072728345346059>"
if(uskin36 === 1) {
  emoteskinpet36 = "<:Cerbere36_1:731903679002837042>"
  emotestar36 = ":star:"
}
if(uskin36 === 2) {
  emoteskinpet36 = "<:Cerbere36_2:731924823881547877>"
  emotestar36 = ":star::star:"
}
if(uskin36 === 3) {
  emoteskinpet36 = "<:Cerbere36_3:732281193768419528>"
  emotestar36 = ":star::star::star:"
}
let emoteskinpet37="<:Berserker37:731073865400451234>"
if(uskin37 === 1) {
  emoteskinpet37 = "<:Berserker37_1:731903667057328188>"
  emotestar37 = ":star:"
}
if(uskin37 === 2) {
  emoteskinpet37 = "<:Berserker37_2:731924810770415717>"
  emotestar37 = ":star::star:"
}
if(uskin37 === 3) {
  emoteskinpet37 = "<:Berserker37_3:732281178719256721>"
  emotestar37 = ":star::star::star:"
}
let emoteskinpet38="<:basilic38:731083507157172246>"
if(uskin38 === 1) {
  emoteskinpet38 = "<:basilic38_1:731903654474285116>"
  emotestar38 = ":star:"
}
if(uskin38 === 2) {
  emoteskinpet38 = "<:basilic38_2:731924797583392941>"
  emotestar38 = ":star::star:"
}
if(uskin38 === 3) {
  emoteskinpet38 = "<:basilic38_3:732281154878832753>"
  emotestar38 = ":star::star::star:"
}
let emoteskinpet39="<:Dragon39:731084152090263562>"
if(uskin39 === 1) {
  emoteskinpet39 = "<:Dragon39_1:731903751090208868>"
  emotestar39 = ":star:"
}
if(uskin39 === 2) {
  emoteskinpet39 = "<:Dragon39_2:731925064445984858>"
  emotestar39 = ":star::star:"
}
if(uskin39 === 3) {
  emoteskinpet39 = "<:Dragon39_3:732281270943612948>"
  emotestar39 = ":star::star::star:"
}
let emoteskinpet41="<:niffleur:777842191044837396>"
if(uskin41 === 1) {
  emoteskinpet41 = "<:niffleur1:777842205665918998>"
  emotestar41 = ":star:"
}
if(uskin41 === 2) {
  emoteskinpet41 = "<:niffleur2:777842219612373022>"
  emotestar41 = ":star::star:"
}
if(uskin41 === 3) {
  emoteskinpet41 = "<:niffleur3:777842246237945866>"
  emotestar41 = ":star::star::star:"
}
let emoteskinpet42 = "<:sombral:777842271826608129>"
if(uskin42 === 1) {
  emoteskinpet42 = "<:sombral_1:777842286897266718>"
  emotestar42 = ":star:"
}
if(uskin42 === 2) {
  emoteskinpet42 = "<:sombral_2:777842300993798155>"
  emotestar42 = ":star::star:"
}
if(uskin42 === 3) {
  emoteskinpet42 = "<:sombral_3:777842320284450817>"
  emotestar42 = ":star::star::star:"
}
let emoteskinpet40 ="<:phoenix40:731084640718159924>"
let skinboost401= 1
let skinboost402 = 1
if(uskin40 === 1 && phenixspecial1[message.author.id].equip === 0) {
  emoteskinpet40 = "<:phoenix40_1:731904143739846657>"
  emotestar40 = ":star:"
}
if(uskin40 === 2 && phenixspecial1[message.author.id].equip === 0) {
  emoteskinpet40 = "<:phoenix40_2:731904862626775092>"
  emotestar40 = ":star::star:"
}
if(uskin40 === 3 && phenixspecial1[message.author.id].equip === 0) {
  emoteskinpet40 = "<:phoenix40_3:731904976783147088>"
  emotestar40 = ":star::star::star:"
}
if(uskin40 === 1 && phenixspecial1[message.author.id].equip === 1) {
  emoteskinpet40 = "<:phoenixSP_240:777132343684628520>"
  emotestar40 = ":star:"
  skinboost401= 1.03
  skinboost402 = 1.05
}
if(uskin40 === 2 && phenixspecial1[message.author.id].equip === 1) {
  emoteskinpet40 = "<:phoenixSP_240:777132343684628520>"
  emotestar40 = ":star::star:"
  skinboost401= 1.03
  skinboost402 = 1.05
}
if(uskin40 === 3 && phenixspecial1[message.author.id].equip === 1) {
  emoteskinpet40 = "<:phoenixSP_240:777132343684628520>"
  emotestar40 = ":star::star::star:"
  skinboost401= 1.03
  skinboost402 = 1.05
}
if(upet1 > 0)  {
  pet1atk = Math.trunc((((PMaxAtk* (5+(nivactuelclasse/2))/100)*affinitehumain))* booststatcommon1)
  pet1def = Math.trunc((((PMaxDef* (3+(nivactuelclasse/2))/100)*affinitehumain))* booststatcommon1)
  pet1pv = Math.trunc((((PMaxPv* (6+(nivactuelclasse/2))/100)*affinitehumain))* booststatcommon1)
  pet1name = "Chat"
  pet1emote = emoteskinpet1
}
if(upet2 > 0) {
  pet2atk = Math.trunc((((PMaxAtk* (2+(nivactuelclasse/2))/100)*affinitemage))* booststatcommon2)
  pet2def = Math.trunc((((PMaxDef* (4+(nivactuelclasse/2))/100)*affinitemage))* booststatcommon2)
  pet2pv = Math.trunc((((PMaxPv* (5+(nivactuelclasse/2))/100)*affinitemage))* booststatcommon2)
  pet2name = "Souris"
  pet2emote = emoteskinpet2
}
if(upet3 > 0) {
  pet3atk = Math.trunc((((PMaxAtk* (6+(nivactuelclasse/2))/100)*affinitemage))* booststatcommon3)
  pet3def = Math.trunc((((PMaxDef* (4+(nivactuelclasse/2))/100)*affinitemage))* booststatcommon3)
  pet3pv = Math.trunc((((PMaxPv* (4+(nivactuelclasse/2))/100)*affinitemage))* booststatcommon3)
  pet3name = "Rat"
  pet3emote = emoteskinpet3
}
if(upet4 > 0) {
  pet4atk = Math.trunc((((PMaxAtk* (5+(nivactuelclasse/2))/100)*affiniteelfe))* booststatcommon4)
  pet4def = Math.trunc((((PMaxDef* (3+(nivactuelclasse/2))/100)*affiniteelfe))* booststatcommon4)
  pet4pv = Math.trunc((((PMaxPv* (6+(nivactuelclasse/2))/100)*affiniteelfe))* booststatcommon4)
  pet4name = "Lutin"
  pet4emote = emoteskinpet4
}
if(upet5 > 0) {
  pet5atk = Math.trunc((((PMaxAtk* (2+(nivactuelclasse/2))/100)*affinitenain ))* booststatcommon5)
  pet5def = Math.trunc((((PMaxDef* (6+(nivactuelclasse/2))/100)*affinitenain))* booststatcommon5)
  pet5pv = Math.trunc((((PMaxPv* (3+(nivactuelclasse/2))/100)*affinitenain))* booststatcommon5)
  pet5name = "Poney"
  pet5emote = emoteskinpet5
}
if(upet6 > 0) {
  pet6atk = Math.trunc((((PMaxAtk* (3+(nivactuelclasse))/100)))* booststatcommon6)
  pet6def = Math.trunc((((PMaxDef* (6+(nivactuelclasse))/100)))* booststatcommon6)
  pet6pv = Math.trunc((((PMaxPv* (8+(nivactuelclasse))/100)))* booststatcommon6)
  pet6name = "Licorne"
  pet6emote = emoteskinpet6
}
if(upet7 > 0) {
  pet7atk = Math.trunc((((PMaxAtk* (1+(nivactuelclasse/2))/100)*affinitemv ))* booststatcommon7)
  pet7def = Math.trunc((((PMaxDef* (2+(nivactuelclasse/2))/100)*affinitemv))* booststatcommon7)
  pet7pv = Math.trunc((((PMaxPv* (2+(nivactuelclasse/2))/100)*affinitemv))* booststatcommon7)
  pet7name = "Hamster"
  pet7emote = emoteskinpet7
}
if(upet8 > 0) {
  pet8atk = Math.trunc((((PMaxAtk* (1.5+(nivactuelclasse/2))/100)*affinitenain ))* booststatcommon8)
  pet8def = Math.trunc((((PMaxDef* (3+(nivactuelclasse/2))/100)*affinitenain))* booststatcommon8)
  pet8pv = Math.trunc((((PMaxPv* (2+(nivactuelclasse/2))/100)*affinitenain))* booststatcommon8)
  pet8name = "Lapin"
  pet8emote = emoteskinpet8
}
if(upet9 > 0) {
  pet9atk = Math.trunc((((PMaxAtk* (4+(nivactuelclasse))/100)*affiniteelfe ))* booststatrare9)
  pet9def = Math.trunc((((PMaxDef* (7+(nivactuelclasse))/100)*affiniteelfe))* booststatrare9)
  pet9pv = Math.trunc((((PMaxPv* (8+(nivactuelclasse))/100)*affiniteelfe))* booststatrare9)
  pet9name = "Esprit de la forêt"
  pet9emote = emoteskinpet9
}
if(upet10 > 0) {
  pet10atk = Math.trunc((((PMaxAtk* (9+(nivactuelclasse))/100)*affinitemv ))* booststatrare10)
  pet10def = Math.trunc((((PMaxDef* (4+(nivactuelclasse))/100)*affinitemv))* booststatrare10)
  pet10pv = Math.trunc((((PMaxPv* (10+(nivactuelclasse))/100)*affinitemv))* booststatrare10)
  pet10name = "Fantôme"
  pet10emote = emoteskinpet10
}
if(upet11 > 0) {
  pet11atk = Math.trunc((((PMaxAtk* (11+(nivactuelclasse))/100)*affinitehumain ))* booststatrare11)
  pet11def = Math.trunc((((PMaxDef* (7+(nivactuelclasse))/100)*affinitehumain))* booststatrare11)
  pet11pv = Math.trunc((((PMaxPv* (7+(nivactuelclasse))/100)*affinitehumain))* booststatrare11)
  pet11name = "Cheval"
  pet11emote = emoteskinpet11
}
if(upet12 > 0) {
  pet12atk = Math.trunc((((PMaxAtk* (13+(nivactuelclasse))/100)*affinitehumain ))* booststatrare12)
  pet12def = Math.trunc((((PMaxDef* (4+(nivactuelclasse))/100)*affinitehumain))* booststatrare12)
  pet12pv = Math.trunc((((PMaxPv* (8+(nivactuelclasse))/100)*affinitehumain))* booststatrare12)
  pet12name = "Loup"
  pet12emote = emoteskinpet12
}
if(upet13 > 0) {
  pet13atk = Math.trunc((((PMaxAtk* (11+(nivactuelclasse))/100)*affinitenain ))* booststatrare13)
  pet13def = Math.trunc((((PMaxDef* (7+(nivactuelclasse))/100)*affinitenain))* booststatrare13)
  pet13pv = Math.trunc((((PMaxPv* (6+(nivactuelclasse))/100)*affinitenain))* booststatrare13)
  pet13name = "Requin"
  pet13emote = emoteskinpet13
}
if(upet14 > 0) {
  pet14atk = Math.trunc((((PMaxAtk* (6+(nivactuelclasse))/100)*affiniteelfe ))* booststatrare14)
  pet14def = Math.trunc((((PMaxDef* (9+(nivactuelclasse))/100)*affiniteelfe))* booststatrare14)
  pet14pv = Math.trunc((((PMaxPv* (10+(nivactuelclasse))/100)*affiniteelfe))* booststatrare14)
  pet14name = "Gorille"
  pet14emote = emoteskinpet14
}
if(upet15 > 0) {
  pet15atk = Math.trunc((((PMaxAtk* (8+(nivactuelclasse))/100)*affinitemage ))* booststatrare15)
  pet15def = Math.trunc((((PMaxDef* (4+(nivactuelclasse))/100)*affinitemage))* booststatrare15)
  pet15pv = Math.trunc((((PMaxPv* (7+(nivactuelclasse))/100)*affinitemage))* booststatrare15)
  pet15name = "Esprit du feu"
  pet15emote = emoteskinpet15
}
if(upet41 > 0) {
  pet41atk = Math.trunc((((PMaxAtk* (7+(nivactuelclasse))/100)*affinitemage ))* booststatrare41)
  pet41def = Math.trunc((((PMaxDef* (6+(nivactuelclasse))/100)*affinitemage))* booststatrare41)
  pet41pv = Math.trunc((((PMaxPv* (5+(nivactuelclasse))/100)*affinitemage))* booststatrare41)
  pet41name = "Niffleur"
  pet41emote = emoteskinpet41
}
if(upet16 > 0) {
  pet16atk = Math.trunc((((PMaxAtk* (14+(nivactuelclasse*1.5))/100)*affinitemage))* booststatepic16)
  pet16def = Math.trunc((((PMaxDef* (7+(nivactuelclasse*1.5))/100)*affinitemage))* booststatepic16)
  pet16pv = Math.trunc((((PMaxPv* (8+(nivactuelclasse*1.5))/100)*affinitemage))* booststatepic16)
  pet16name = "Poupée vaudou"
  pet16emote = emoteskinpet16
}
if(upet17 > 0) {
  pet17atk = Math.trunc((((PMaxAtk* (8+(nivactuelclasse*1.5))/100)*affinitemv ))* booststatepic17)
  pet17def = Math.trunc((((PMaxDef* (8+(nivactuelclasse*1.5))/100)*affinitemv))* booststatepic17)
  pet17pv = Math.trunc((((PMaxPv* (12+(nivactuelclasse*1.5))/100)*affinitemv))* booststatepic17)
  pet17name = "Liche"
  pet17emote = emoteskinpet17
}
if(upet18 > 0) {
  pet18atk = Math.trunc((((PMaxAtk* (9+(nivactuelclasse*1.5))/100)*affinitenain ))* booststatepic18)
  pet18def = Math.trunc((((PMaxDef* (12+(nivactuelclasse*1.5))/100)*affinitenain))* booststatepic18)
  pet18pv = Math.trunc((((PMaxPv* (7+(nivactuelclasse*1.5))/100)*affinitenain))* booststatepic18)
  pet18name = "Vampire"
  pet18emote = emoteskinpet18
}
if(upet19 > 0) {
  pet19atk = Math.trunc((((PMaxAtk* (15+(nivactuelclasse*1.5))/100)*affinitehumain))* booststatepic19)
  pet19def = Math.trunc((((PMaxDef* (5+(nivactuelclasse*1.5))/100)*affinitehumain))* booststatepic19)
  pet19pv = Math.trunc((((PMaxPv* (5+(nivactuelclasse*1.5))/100)*affinitehumain))* booststatepic19)
  pet19name = "Lion"
  pet19emote = emoteskinpet19
}
if(upet20 > 0) {
  pet20atk = Math.trunc((((PMaxAtk* (13+(nivactuelclasse*1.5))/100)*affinitehumain))* booststatepic20)
  pet20def = Math.trunc((((PMaxDef* (8+(nivactuelclasse*1.5))/100)*affinitehumain))* booststatepic20)
  pet20pv = Math.trunc((((PMaxPv* (12+(nivactuelclasse*1.5))/100)*affinitehumain))* booststatepic20)
  pet20name = "Loup-Garou"
  pet20emote = emoteskinpet20
}
if(upet21 > 0) {
  pet21atk = Math.trunc((((PMaxAtk* (4+(nivactuelclasse*1.5))/100)*affinitemv))* booststatepic21)
  pet21def = Math.trunc((((PMaxDef* (8+(nivactuelclasse*1.5))/100)*affinitemv))* booststatepic21)
  pet21pv = Math.trunc((((PMaxPv* (7+(nivactuelclasse*1.5))/100)*affinitemv))* booststatepic21)
  pet21name = "Esprit des ténèbres"
  pet21emote = emoteskinpet21
}
if(upet22 > 0) {
  pet22atk = Math.trunc((((PMaxAtk* (8+(nivactuelclasse*1.5))/100)*affinitemage))* booststatepic22)
  pet22def = Math.trunc((((PMaxDef* (7+(nivactuelclasse*1.5))/100)*affinitemage))* booststatepic22)
  pet22pv = Math.trunc((((PMaxPv* (4+(nivactuelclasse*1.5))/100)*affinitemage))* booststatepic22)
  pet22name = "Esprit de la lumière"
  pet22emote = emoteskinpet22
}
if(upet23 > 0) {
  pet23atk = Math.trunc((((PMaxAtk* (5+(nivactuelclasse*1.5))/100)*affinitemv))* booststatepic23)
  pet23def = Math.trunc((((PMaxDef* (13+(nivactuelclasse*1.5))/100)*affinitemv))* booststatepic23)
  pet23pv = Math.trunc((((PMaxPv* (10+(nivactuelclasse*1.5))/100)*affinitemv))* booststatepic23)
  pet23name = "Momie"
  pet23emote = emoteskinpet23
}
if(upet24 > 0) {
  pet24atk = Math.trunc((((PMaxAtk* (12+(nivactuelclasse*1.5))/100)*affiniteelfe))* booststatepic24)
  pet24def = Math.trunc((((PMaxDef* (13+(nivactuelclasse*1.5))/100)*affiniteelfe))* booststatepic24)
  pet24pv = Math.trunc((((PMaxPv* (8+(nivactuelclasse*1.5))/100)*affiniteelfe))* booststatepic24)
  pet24name = "Loup-Blanc"
  pet24emote = emoteskinpet24
}
if(upet42 > 0) {
  pet42atk = Math.trunc((((PMaxAtk* (13+(nivactuelclasse*1.5))/100)*affiniteelfe))* booststatepic42)
  pet42def = Math.trunc((((PMaxDef* (11+(nivactuelclasse*1.5))/100)*affiniteelfe))* booststatepic42)
  pet42pv = Math.trunc((((PMaxPv* (9+(nivactuelclasse*1.5))/100)*affiniteelfe))* booststatepic42)
  pet42name = "Sombral"
  pet42emote = emoteskinpet42
}
if(upet25 > 0) {
  pet25atk = Math.trunc((((PMaxAtk* (20+(nivactuelclasse*2))/100)*affinitehumain))* booststatlegend25)
  pet25def = Math.trunc((((PMaxDef* (10+(nivactuelclasse*2))/100)*affinitehumain))* booststatlegend25)
  pet25pv = Math.trunc((((PMaxPv* (10+(nivactuelclasse*2))/100)*affinitehumain))* booststatlegend25)
  pet25name = "Lion sacré"
  pet25emote = emoteskinpet25
}
if(upet26 > 0) {
  pet26atk = Math.trunc((((PMaxAtk* (13+(nivactuelclasse*2))/100)*affinitehumain))* booststatlegend26)
  pet26def = Math.trunc((((PMaxDef* (7+(nivactuelclasse*2))/100)*affinitehumain))* booststatlegend26)
  pet26pv = Math.trunc((((PMaxPv* (7+(nivactuelclasse*2))/100)*affinitehumain))* booststatlegend26)
  pet26name = "Tigre"
  pet26emote = emoteskinpet26
}
if(upet27 > 0) {
  pet27atk = Math.trunc((((PMaxAtk* (1+(nivactuelclasse*2))/100)*affiniteelfe))* booststatlegend27)
  pet27def = Math.trunc((((PMaxDef* (16+(nivactuelclasse*2))/100)*affiniteelfe))* booststatlegend27)
  pet27pv = Math.trunc((((PMaxPv* (16+(nivactuelclasse*2))/100)*affiniteelfe))* booststatlegend27)
  pet27name = "Tortue géante"
  pet27emote = emoteskinpet27
}
if(upet28 > 0) {
  pet28atk = Math.trunc((((PMaxAtk* (8+(nivactuelclasse*2))/100)*affinitenain))* booststatlegend28)
  pet28def = Math.trunc((((PMaxDef* (6+(nivactuelclasse*2))/100)*affinitenain))* booststatlegend28)
  pet28pv = Math.trunc((((PMaxPv* (6+(nivactuelclasse*2))/100)*affinitenain))* booststatlegend28)
  pet28name = "Petit démon"
  pet28emote = emoteskinpet28
}
if(upet29 > 0) {
  pet29atk = Math.trunc((((PMaxAtk* (10+(nivactuelclasse*2))/100)*affinitemv))* booststatlegend29)
  pet29def = Math.trunc((((PMaxDef* (10+(nivactuelclasse*2))/100)*affinitemv))* booststatlegend29)
  pet29pv = Math.trunc((((PMaxPv* (10+(nivactuelclasse*2))/100)*affinitemv))* booststatlegend29)
  pet29name = "Démon"
  pet29emote = emoteskinpet29
}
if(upet30 > 0) {
  pet30atk = Math.trunc((((PMaxAtk* (8+(nivactuelclasse*2))/100)*affinitemv))* booststatlegend30)
  pet30def = Math.trunc((((PMaxDef* (8+(nivactuelclasse*2))/100)*affinitemv))* booststatlegend30)
  pet30pv = Math.trunc((((PMaxPv* (12+(nivactuelclasse*2))/100)*affinitemv))* booststatlegend30)
  pet30name = "Diablotin"
  pet30emote = emoteskinpet30
}
if(upet31 > 0) {
  pet31atk = Math.trunc((((PMaxAtk* (13+(nivactuelclasse*2))/100)*affinitemage))*booststatlegend31)
  pet31def = Math.trunc((((PMaxDef* (13+(nivactuelclasse*2))/100)*affinitemage))*booststatlegend31)
  pet31pv = Math.trunc((((PMaxPv* (13+(nivactuelclasse*2))/100)*affinitemage))*booststatlegend31)
  pet31name = "Ange"
  pet31emote = emoteskinpet31
}
if(upet32 > 0) {
  pet32atk = Math.trunc((((PMaxAtk* (15+(nivactuelclasse*2))/100)*affiniteelfe))*booststatlegend32)
  pet32def = Math.trunc((((PMaxDef* (8+(nivactuelclasse*2))/100)*affiniteelfe))*booststatlegend32)
  pet32pv = Math.trunc((((PMaxPv* (9+(nivactuelclasse*2))/100)*affiniteelfe))*booststatlegend32)
  pet32name = "Aigle"
  pet32emote = emoteskinpet32
}
if(upet33 > 0) {
  pet33atk = Math.trunc((((PMaxAtk* (15+(nivactuelclasse*2))/100)*affinitenain))*booststatlegend33)
  pet33def = Math.trunc((((PMaxDef* (9+(nivactuelclasse*2))/100)*affinitenain))*booststatlegend33)
  pet33pv = Math.trunc((((PMaxPv* (8+(nivactuelclasse*2))/100)*affinitenain))*booststatlegend33)
  pet33name = "Faucon"
  pet33emote = emoteskinpet33
}
if(upet34 > 0) {
  pet34atk = Math.trunc((((PMaxAtk* (3+(nivactuelclasse*2))/100)*affinitemage))*booststatlegend34)
  pet34def = Math.trunc((((PMaxDef* (17+(nivactuelclasse*2))/100)*affinitemage))*booststatlegend34)
  pet34pv = Math.trunc((((PMaxPv* (17+(nivactuelclasse*2))/100)*affinitemage))*booststatlegend34)
  pet34name = "Golem"
  pet34emote = emoteskinpet34
}
if(upet35 > 0) {
  pet35atk = Math.trunc((((PMaxAtk* (26+(nivactuelclasse*2.5))/100)*affinitemage))*booststatgod35)
  pet35def = Math.trunc((((PMaxDef* (26+(nivactuelclasse*2.5))/100)*affinitemage))*booststatgod35)
  pet35pv = Math.trunc((((PMaxPv* (26+(nivactuelclasse*2.5))/100)*affinitemage))*booststatgod35)
  pet35name = "Archange"
  pet35emote = emoteskinpet35
}
if(upet36 > 0) {
  pet36atk = Math.trunc((((PMaxAtk* (19+(nivactuelclasse*2.5))/100)*affinitemv))*booststatgod36)
  pet36def = Math.trunc((((PMaxDef* (27+(nivactuelclasse*2.5))/100)*affinitemv))*booststatgod36)
  pet36pv = Math.trunc((((PMaxPv* (27+(nivactuelclasse*2.5))/100)*affinitemv))*booststatgod36)
  pet36name = "Cerbère"
  pet36emote = emoteskinpet36
}
if(upet37 > 0) {
  pet37atk = Math.trunc((((PMaxAtk* (35+(nivactuelclasse*2.5))/100)*affinitehumain))*booststatgod37)
  pet37def = Math.trunc((((PMaxDef* (15+(nivactuelclasse*2.5))/100)*affinitehumain))*booststatgod37)
  pet37pv = Math.trunc((((PMaxPv* (17+(nivactuelclasse*2.5))/100)*affinitehumain))*booststatgod37)
  pet37name = "Berserker"
  pet37emote = emoteskinpet37
}
if(upet38 > 0) {
  pet38atk = Math.trunc((((PMaxAtk* (22+(nivactuelclasse*2.5))/100)*affiniteelfe))*booststatgod38)
  pet38def = Math.trunc((((PMaxDef* (29+(nivactuelclasse*2.5))/100)*affiniteelfe))*booststatgod38)
  pet38pv = Math.trunc((((PMaxPv* (23+(nivactuelclasse*2.5))/100)*affiniteelfe))*booststatgod38)
  pet38name = "Basilic"
  pet38emote = emoteskinpet38
}
if(upet39 > 0) {
  pet39atk = Math.trunc((((PMaxAtk* (30+(nivactuelclasse*2.5))/100)*affinitenain))*booststatgod39)
  pet39def = Math.trunc((((PMaxDef* (19+(nivactuelclasse*2.5))/100)*affinitenain))*booststatgod39)
  pet39pv = Math.trunc((((PMaxPv* (22+(nivactuelclasse*2.5))/100)*affinitenain))*booststatgod39)
  pet39name = "Dragon"
  pet39emote = emoteskinpet39
}
if(upet40 > 0) {
  pet40atk = Math.trunc(((((PMaxAtk* (27+(nivactuelclasse*2.5))/100)*affinitehero))*booststatgod40)*skinboost401)
  pet40def = Math.trunc(((((PMaxDef* (28+(nivactuelclasse*2.5))/100)*affinitehero))*booststatgod40)*skinboost401)
  pet40pv = Math.trunc(((((PMaxPv* (32+(nivactuelclasse*3))/100)*affinitehero))*booststatgod40)*skinboost402)
  pet40name = "Phoenix"
  pet40emote = emoteskinpet40
}

let armes1embed = new Discord.RichEmbed()
.setColor("#47FE23")
.setTitle(`**Catalogue d'armes de ${message.author.username}**`)
.addField(`\n**Page 1/5**\n**__Armes Communes__**`,`\n${item1emote} ${item1name}#1 ${armestar1}\nBoost = +${item1atk}ATK/+${item1def}DEF/+${item1pv}PV\n${item2emote} ${item2name}#2 ${armestar2}\nBoost = +${item2atk}ATK/+${item2def}DEF/+${item2pv}PV\n${item3emote} ${item3name}#3 ${armestar3}\nBoost = +${item3atk}ATK/+${item3def}DEF/+${item3pv}PV\n${item4emote} ${item4name}#4 ${armestar4}\nBoost = +${item4atk}ATK/+${item4def}DEF/+${item4pv}PV\n${item5emote} ${item5name}#5 ${armestar5}\nBoost = +${item5atk}ATK/+${item5def}DEF/+${item5pv}PV\n${item6emote} ${item6name}#6 ${armestar6}\nBoost = +${item6atk}ATK/+${item6def}DEF/+${item6pv}PV\n${item7emote} ${item7name}#7 ${armestar7}\nBoost = +${item7atk}ATK/+${item7def}DEF/+${item7pv}PV\n${item8emote} ${item8name}#8 ${armestar8}\nBoost = +${item8atk}ATK/+${item8def}DEF/+${item8pv}PV\n${item9emote} ${item9name}#9 ${armestar9}\nBoost = +${item9atk}ATK/+${item9def}DEF/+${item9pv}PV\n${item10emote} ${item10name}#10 ${armestar10}\nBoost = +${item10atk}ATK/+${item10def}DEF/+${item10pv}PV\n**Fais !armes 2 pour passer à la page suivante.**\n${trucbizarre}Note: Pour selectionner une arme, faites !arme select [ID]${trucbizarre}`);

if(message.content === "!armes" && uclassen > 0) message.channel.send(armes1embed)
let armes2embed = new Discord.RichEmbed()
.setColor("0C66F1")
.setTitle(`**Catalogue d'armes de ${message.author.username}**`)
.addField(`\n**Page 2/5**\n**__Armes Rares__**`, `\n${item11emote} ${item11name}#11 ${armestar11}\nBoost = +${item11atk}ATK/+${item11def}DEF/+${item11pv}PV\n${item12emote} ${item12name}#12 ${armestar12}\nBoost = +${item12atk}ATK/+${item12def}DEF/+${item12pv}PV\n${item13emote} ${item13name}#13 ${armestar13}\nBoost = +${item13atk}ATK/+${item13def}DEF/+${item13pv}PV\n${item14emote} ${item14name}#14 ${armestar14}\nBoost = +${item14atk}ATK/+${item14def}DEF/+${item14pv}PV\n${item15emote} ${item15name}#15 ${armestar15}\nBoost = +${item15atk}ATK/+${item15def}DEF/+${item15pv}PV\n${item16emote} ${item16name}#16 ${armestar16}\nBoost = +${item16atk}ATK/+${item16def}DEF/+${item16pv}PV\n${item17emote} ${item17name}#17 ${armestar17}\nBoost = +${item17atk}ATK/+${item17def}DEF/+${item17pv}PV\n${item18emote} ${item18name}#18 ${armestar18}\nBoost = +${item18atk}ATK/+${item18def}DEF/+${item18pv}PV\n**Fais !armes 3 pour passer à la page suivante.**\n${trucbizarre}Note: Pour selectionner une arme, faites !arme select [ID]${trucbizarre}`);
if(message.content === "!armes 2" && uclassen > 0) message.channel.send(armes2embed)
let armes3embed = new Discord.RichEmbed()
.setColor("B926C8")
.setTitle(`**Catalogue d'armes de ${message.author.username}**`)
.addField(`\n**Page 3/5**\n**__Armes Epiques__**`, `\n${item19emote} ${item19name}#19 ${armestar19}\nBoost = +${item19atk}ATK/+${item19def}DEF/+${item19pv}PV\n${item20emote} ${item20name}#20 ${armestar20}\nBoost = +${item20atk}ATK/+${item20def}DEF/+${item20pv}PV\n${item21emote} ${item21name}#21 ${armestar21}\nBoost = +${item21atk}ATK/+${item21def}DEF/+${item21pv}PV\n${item22emote} ${item22name}#22 ${armestar22}\nBoost = +${item22atk}ATK/+${item22def}DEF/+${item22pv}PV\n${item23emote} ${item23name}#23 ${armestar23}\nBoost = +${item23atk}ATK/+${item23def}DEF/+${item23pv}PV\n${item24emote} ${item24name}#24 ${armestar24}\nBoost = +${item24atk}ATK/+${item24def}DEF/+${item24pv}PV\n${item25emote} ${item25name}#25 ${armestar25}\nBoost = +${item25atk}ATK/+${item25def}DEF/+${item25pv}PV\n${item26emote} ${item26name}#26 ${armestar26}\nBoost = +${item26atk}ATK/+${item26def}DEF/+${item26pv}PV\n**Fais !armes 4 pour passer à la page suivante.**\n${trucbizarre}Note: Pour selectionner une arme, faites !arme select [ID]${trucbizarre}`);
if(message.content === "!armes 3" && uclassen > 0) message.channel.send(armes3embed)


let armes4embed = new Discord.RichEmbed()
.setColor("B926C8")
.setTitle(`**Catalogue d'armes de ${message.author.username}**`)
.addField(`\n**Page 4/5**\n**__Armes Epiques__**`, `\n${item27emote} ${item27name}#27 ${armestar27}\nBoost = +${item27atk}ATK/+${item27def}DEF/+${item27pv}PV\n${item28emote} ${item28name}#28 ${armestar28}\nBoost = +${item28atk}ATK/+${item28def}DEF/+${item28pv}PV\n${item29emote} ${item29name}#29 ${armestar29}\nBoost = +${item29atk}ATK/+${item29def}DEF/+${item29pv}PV\n${item30emote} ${item30name}#30 ${armestar30}\nBoost = +${item30atk}ATK/+${item30def}DEF/+${item30pv}PV\n${item31emote} ${item31name}#31 ${armestar31}\nBoost = +${item31atk}ATK/+${item31def}DEF/+${item31pv}PV\n${item32emote} ${item32name}#32 ${armestar32}\nBoost = +${item32atk}ATK/+${item32def}DEF/+${item32pv}PV\n${item33emote} ${item33name}#33 ${armestar33}\nBoost = +${item33atk}ATK/+${item33def}DEF/+${item33pv}PV\n${item44emote} ${item44name}#44 ${armestar44}\nBoost = +${item44atk}ATK/+${item44def}DEF/+${item44pv}PV\n**Fais !armes 5 pour passer à la page suivante.**\n${trucbizarre}Note: Pour selectionner une arme, faites !arme select [ID]${trucbizarre}`);
if(message.content === "!armes 4" && uclassen > 0) message.channel.send(armes4embed)
let armes5embed = new Discord.RichEmbed()
.setColor("FA8E0C")
.setTitle(`**Catalogue d'armes de ${message.author.username}**`)
.addField(`\n**Page 5/5**\n**__Armes Légendaires__**`, `\n${item34emote} ${item34name}#34 ${armestar34}\nBoost = +${item34atk}ATK/+${item34def}DEF/+${item34pv}PV\n${item35emote} ${item35name}#35 ${armestar35}\nBoost = +${item35atk}ATK/+${item35def}DEF/+${item35pv}PV\n${item36emote} ${item36name}#36 ${armestar36}\nBoost = +${item36atk}ATK/+${item36def}DEF/+${item36pv}PV\n${item37emote} ${item37name}#37 ${armestar37}\nBoost = +${item37atk}ATK/+${item37def}DEF/+${item37pv}PV\n${item38emote} ${item38name}#38 ${armestar38}\nBoost = +${item38atk}ATK/+${item38def}DEF/+${item38pv}PV\n${item39emote} ${item39name}#39 ${armestar39}\nBoost = +${item39atk}ATK/+${item39def}DEF/+${item39pv}PV\n${item40emote} ${item40name}#40 ${armestar40}\nBoost = +${item40atk}ATK/+${item40def}DEF/+${item40pv}PV\n${item41emote} ${item41name}#41 ${armestar41}\nBoost = +${item41atk}ATK/+${item41def}DEF/+${item41pv}PV\n${item42emote} ${item42name}#42 ${armestar42}\nBoost = +${item42atk}ATK/+${item42def}DEF/+${item42pv}PV\n${item43emote} ${item43name}#43 ${armestar43}\nBoost = +${item43atk}ATK/+${item43def}DEF/+${item43pv}PV\n${trucbizarre}Note: Pour selectionner une arme, faites !arme select [ID]${trucbizarre}`);
if(message.content === "!armes 5" && uclassen > 0) message.channel.send(armes5embed);

let pet1embed = new Discord.RichEmbed()
.setColor("#47FE23")
.setTitle(`**Liste des Pets de ${message.author.username}**`)
.addField(`\n**Page 1/5**\n**__Pets Communs__**`,`\n${pet1emote} ${pet1name}#1 ${emotestar1}\nStats = ${pet1atk}ATK/ ${pet1def}DEF/ ${pet1pv}PV\n${pet2emote} ${pet2name}#2 ${emotestar2}\nStats = ${pet2atk}ATK/ ${pet2def}DEF/ ${pet2pv}PV\n${pet3emote} ${pet3name}#3 ${emotestar3}\nStats = ${pet3atk}ATK/ ${pet3def}DEF/ ${pet3pv}PV\n${pet4emote} ${pet4name}#4 ${emotestar4}\nStats = ${pet4atk}ATK/ ${pet4def}DEF/ ${pet4pv}PV\n${pet5emote} ${pet5name}#5 ${emotestar5}\nStats = ${pet5atk}ATK/ ${pet5def}DEF/ ${pet5pv}PV\n${pet6emote} ${pet6name}#6 ${emotestar6}\nStats = ${pet6atk}ATK/ ${pet6def}DEF/ ${pet6pv}PV\n${pet7emote} ${pet7name}#7 ${emotestar7}\nStats = ${pet7atk}ATK/ ${pet7def}DEF/ ${pet7pv}PV\n${pet8emote} ${pet8name}#8\nStats = ${pet8atk}ATK/ ${pet8def}DEF/ ${pet8pv}PV\n${pet41emote} ${pet41name}#41 ${emotestar41}\nStats = ${pet41atk}ATK/ ${pet41def}DEF/ ${pet41pv}PV\n**Fais !pets 2 pour passer à la page suivante.**\n${trucbizarre}Note: Pour selectionner un pet, faites !pet select [ID]${trucbizarre}`);

if(message.content === "!pets" && uclassen > 0) message.channel.send(pet1embed);
if(message.content === "!pets 1" && uclassen > 0) message.channel.send(pet1embed);
let pet2embed = new Discord.RichEmbed()
.setColor("#0C66F1")
.setTitle(`**Liste des Pets de ${message.author.username}**`)
.addField(`\n**Page 2/5**\n**__Pets Rares__**`,`\n${pet9emote} ${pet9name}#9 ${emotestar9}\nStats = ${pet9atk}ATK/ ${pet9def}DEF/ ${pet9pv}PV\n${pet10emote} ${pet10name}#10 ${emotestar10}\nStats = ${pet10atk}ATK/ ${pet10def}DEF/ ${pet10pv}PV\n${pet11emote} ${pet11name}#11 ${emotestar11}\nStats = ${pet11atk}ATK/ ${pet11def}DEF/ ${pet11pv}PV\n${pet12emote} ${pet12name}#12 ${emotestar12}\nStats = ${pet12atk}ATK/ ${pet12def}DEF/ ${pet12pv}PV\n${pet13emote} ${pet13name}#13 ${emotestar13}\nStats = ${pet13atk}ATK/ ${pet13def}DEF/ ${pet13pv}PV\n${pet14emote} ${pet14name}#14 ${emotestar14}\nStats = ${pet14atk}ATK/ ${pet14def}DEF/ ${pet14pv}PV\n${pet15emote} ${pet15name}#15 ${emotestar15}\nStats = ${pet15atk}ATK/ ${pet15def}DEF/ ${pet15pv}PV\n${pet42emote} ${pet42name}#42 ${emotestar42}\nStats = ${pet42atk}ATK/ ${pet42def}DEF/ ${pet42pv}PV\n**Fais !pets 3 pour passer à la page suivante.**\n${trucbizarre}Note: Pour selectionner un pet, faites !pet select [ID]${trucbizarre}`);

if(message.content === "!pets 2" && uclassen > 0) message.channel.send(pet2embed)
let pet3embed = new Discord.RichEmbed()
.setColor("#B926C8")
.setTitle(`**Liste des Pets de ${message.author.username}**`)
.addField(`\n**Page 3/5**\n**__Pets Epiques__**`,`\n${pet16emote} ${pet16name}#16 ${emotestar16}\nStats = ${pet16atk}ATK/ ${pet16def}DEF/ ${pet16pv}PV\n${pet17emote} ${pet17name}#17 ${emotestar17}\nStats = ${pet17atk}ATK/ ${pet17def}DEF/ ${pet17pv}PV\n${pet18emote} ${pet18name}#18 ${emotestar18}\nStats = ${pet18atk}ATK/ ${pet18def}DEF/ ${pet18pv}PV\n${pet19emote} ${pet19name}#19 ${emotestar19}\nStats = ${pet19atk}ATK/ ${pet19def}DEF/ ${pet19pv}PV\n${pet20emote} ${pet20name}#20 ${emotestar20}\nStats = ${pet20atk}ATK/ ${pet20def}DEF/ ${pet20pv}PV\n${pet21emote} ${pet21name}#21 ${emotestar21}\nStats = ${pet21atk}ATK/ ${pet21def}DEF/ ${pet21pv}PV\n${pet22emote} ${pet22name}#22 ${emotestar22}\nStats = ${pet22atk}ATK/ ${pet22def}DEF/ ${pet22pv}PV\n${pet23emote} ${pet23name}#23 ${emotestar23}\nStats = ${pet23atk}ATK/ ${pet23def}DEF/ ${pet23pv}PV\n${pet24emote} ${pet24name}#24 ${emotestar24}\nStats = ${pet24atk}ATK/ ${pet24def}DEF/ ${pet24pv}PV\n**Fais !pets 4 pour passer à la page suivante.**\n${trucbizarre}Note: Pour selectionner un pet, faites !pet select [ID]${trucbizarre}`);
if(message.content === "!pets 3" && uclassen > 0) message.channel.send(pet3embed)


let pet4embed = new Discord.RichEmbed()
.setColor("#FA8E0C")
.setTitle(`**Liste des Pets de ${message.author.username}**`)
.addField(`\n**Page 4/5**\n**__Pets Légendaires__**`,`\n${pet25emote} ${pet25name}#25 ${emotestar25}\nStats = ${pet25atk}ATK/ ${pet25def}DEF/ ${pet25pv}PV\n${pet26emote} ${pet26name}#26 ${emotestar26}\nStats = ${pet26atk}ATK/ ${pet26def}DEF/ ${pet26pv}PV\n${pet27emote} ${pet27name}#27 ${emotestar27}\nStats = ${pet27atk}ATK/ ${pet27def}DEF/ ${pet27pv}PV\n${pet28emote} ${pet28name}#28 ${emotestar28}\nStats = ${pet28atk}ATK/ ${pet28def}DEF/ ${pet28pv}PV\n${pet29emote} ${pet29name}#29 ${emotestar29}\nStats = ${pet29atk}ATK/ ${pet29def}DEF/ ${pet29pv}PV\n${pet30emote} ${pet30name}#30 ${emotestar30}\nStats = ${pet30atk}ATK/ ${pet30def}DEF/ ${pet30pv}PV\n${pet31emote} ${pet31name}#31 ${emotestar31}\nStats = ${pet31atk}ATK/ ${pet31def}DEF/ ${pet31pv}PV\n${pet32emote} ${pet32name}#32 ${emotestar32}\nStats = ${pet32atk}ATK/ ${pet32def}DEF/ ${pet32pv}PV\n${pet33emote} ${pet33name}#33 ${emotestar33}\nStats = ${pet33atk}ATK/ ${pet33def}DEF/ ${pet33pv}PV\n${pet34emote} ${pet34name}#34 ${emotestar34}\nStats = ${pet34atk}ATK/ ${pet34def}DEF/ ${pet34pv}PV\n**Fais !pets 5 pour passer à la page suivante.**\n${trucbizarre}Note: Pour selectionner un pet, faites !pet select [ID]${trucbizarre}`);
if(message.content === "!pets 4" && uclassen > 0) message.channel.send(pet4embed);
let pet5embed = new Discord.RichEmbed()
.setColor("#FBFCF5")
.setTitle(`**Liste des Pets de ${message.author.username}**`)
.addField(`\n**Page 5/5**\n**__Pets Divins__**`,`\n${pet35emote} ${pet35name}#35 ${emotestar35}\nStats = ${pet35atk}ATK/ ${pet35def}DEF/ ${pet35pv}PV\n${pet36emote} ${pet36name}#36 ${emotestar36}\nStats = ${pet36atk}ATK/ ${pet36def}DEF/ ${pet36pv}PV\n${pet37emote} ${pet37name}#37 ${emotestar37}\nStats = ${pet37atk}ATK/ ${pet37def}DEF/ ${pet37pv}PV\n${pet38emote} ${pet38name}#38 ${emotestar38}\nStats = ${pet38atk}ATK/ ${pet38def}DEF/ ${pet38pv}PV\n${pet39emote} ${pet39name}#39 ${emotestar39}\nStats = ${pet39atk}ATK/ ${pet39def}DEF/ ${pet39pv}PV\n${pet40emote} ${pet40name}#40 ${emotestar40}\nStats = ${pet40atk}ATK/+${pet40def}DEF/ ${pet40pv}PV\n${trucbizarre}Note: Pour selectionner un pet, faites !pet select [ID]${trucbizarre}`);
if(message.content === "!pets 5" && uclassen > 0) message.channel.send(pet5embed);

let uranklevel = ""

if(nivactuel >= 1) {
uranklevel = "Débutant I"
};
if(nivactuel >= 15) {
  uranklevel = "Débutant II"
  };
  if(nivactuel >= 30) {
    uranklevel = "Débutant III"
    };
    if(nivactuel >= 45) {
      uranklevel = "Avancé I"
      };
      if(nivactuel >= 70) {
        uranklevel = "Avancé II"
        };
        if(nivactuel >= 90) {
          uranklevel = "Avancé III"
          };
          if(nivactuel >= 100) {
            uranklevel = "Expert I"
            };
            if(nivactuel >= 125) {
              uranklevel = "Expert II"
              };
              if(nivactuel >= 150) {
                uranklevel = "Expert III"
                };
                if(nivactuel >= 180) {
                  uranklevel = "Pro I"
                  };
                  if(nivactuel >= 200) {
                    uranklevel = "Pro II"
                    };
                    if(nivactuel >= 230) {
                      uranklevel = "Pro III"
                      };
                      if(nivactuel >= 250) {
                        uranklevel = "Champion I"
                        };
                        if(nivactuel >= 265) {
                          uranklevel = "Champion II"
                          };
                          if(nivactuel >= 275) {
                            uranklevel = "Champion III"
                            };
                            if(nivactuel >= 290) {
                              uranklevel = "Légende I"
                              };
                              if(nivactuel >= 300) {
                                uranklevel = "Légende II"
                                };
                                if(nivactuel >= 320) {
                                  uranklevel = "Légende III"
                                  };
                                  if(nivactuel >= 350) {
                                    uranklevel = "Suprême I"
                                    };
                                    if(nivactuel >= 400) {
                                      uranklevel = "Suprême II"
                                      };
                                      if(nivactuel >= 450) {
                                        uranklevel = "Suprême III"
                                        };
                                        if(nivactuel >= 500) {
                                          uranklevel = "Dieu"
                                          };
                                          if(nivactuel >= 750) {
                                            uranklevel = "Overlord"
                                            };









                                            let boosthero = 0
                                            let heromote = ""
                                            if(uHéro === 25) {
                                              heromote = "<:starx:598142452716666909>"
                                              boosthero = 0.15
                                              affinitehero = 1.1
                                              }
                                             
                                            

let helpembed = new Discord.RichEmbed()
.setTitle("Aide commandes globales Page [1/2]")
.addField('!lien', "Permet d'ajouter le bot sur votre serveur")
.addField('!classe','Permet de choisir sa classe [Obligatoire]')
.addField('!collecte & !daily', 'Tout est dans le nom')
.addField('!upinfo',"Affiche la liste des items qu'il est possible d'améliorer")
.addField('!donjon [NUM]', 'Affiche le prochain boss à combattre dans le donjon choisi')
.addField('!inventaire & !si & !sac', 'Affiche vos deux inventaires et votre sac ')
.addField('!shop', 'Affiche le shop')
.addField('!armes & !pets', 'Affiche la liste des armes et pets')
.addField('!box l', 'Affiche vos boxs')
.addField('!gemme', 'Informations relatives aux gemmes');

let helpembed2 = new Discord.RichEmbed()
.setTitle("Aide commandes globales Page [2/2]")
.addField('!atelier & !forge',"Permet d'afficher votre atelier et votre forge")
.addField('!use', "Affiche plus d'informations sur la commande")
.addField('!obj & !stats', "Affiche les objectifs et vos statistiques globales")
.addField('!give', "Permet de donner des ressources à un joueur");
let statuclasse1 = `\nCoût: 5 ${PPlemote}`
let statuclasse2 = `\nCoût: 5 ${PPlemote}`
let statuclasse3 = `\nCoût: 5 ${PPlemote}`
let statuclasse4 = `\nCoût: 5 ${PPlemote}`
let statuclasse5 = `\nCoût: 5 ${PPlemote}`
if(classeunlock[message.author.id].classe1 === 0 && nivactuel > 149) {
  statuclasse1 = `\nCoût: 5 ${PPlemote}`
}
if(classeunlock[message.author.id].classe1 === 0 && nivactuel <= 149) {
  statuclasse1 = `\nCoût: 5 ${PPlemote} (Niveau 150 Requis)`
}
if(classeunlock[message.author.id].classe1 === 1) {
  statuclasse1 = `\n${trucbizarre}Classe Débloquée${trucbizarre} ${vid}`
}
if(classeunlock[message.author.id].classe2 === 0 && nivactuel > 149) {
  statuclasse2 = `\nCoût: 5 ${PPlemote}`
}
if(classeunlock[message.author.id].classe2 === 0 && nivactuel <= 149) {
  statuclasse2 = `\nCoût: 5 ${PPlemote} (Niveau 150 Requis)`
}
if(classeunlock[message.author.id].classe2 === 1) {
  statuclasse2 = `\n${trucbizarre}Classe Débloquée${trucbizarre} ${vid}`
}
if(classeunlock[message.author.id].classe3 === 0 && nivactuel > 149) {
  statuclasse3 = `\nCoût: 5 ${PPlemote}`
}
if(classeunlock[message.author.id].classe3 === 0 && nivactuel <= 149) {
  statuclasse3 = `\nCoût: 5 ${PPlemote} (Niveau 150 Requis)`
}
if(classeunlock[message.author.id].classe3 === 1) {
  statuclasse3 = `\n${trucbizarre}Classe Débloquée${trucbizarre} ${vid}`
}
if(classeunlock[message.author.id].classe4 === 0 && nivactuel > 149) {
  statuclasse4 = `\nCoût: 5 ${PPlemote}`
}
if(classeunlock[message.author.id].classe4 === 0 && nivactuel <= 149) {
  statuclasse4 = `\nCoût: 5 ${PPlemote} (Niveau 150 Requis)`
}
if(classeunlock[message.author.id].classe4 === 1) {
  statuclasse4 = `\n${trucbizarre}Classe Débloquée${trucbizarre} ${vid}`
}
if(classeunlock[message.author.id].classe5 === 0 && nivactuel > 149) {
  statuclasse5 = `\nCoût: 5 ${PPlemote}`
}
if(classeunlock[message.author.id].classe5 === 0 && nivactuel <= 149) {
  statuclasse5 = `\nCoût: 5 ${PPlemote} (Niveau 150 Requis)`
}
if(classeunlock[message.author.id].classe5 === 1) {
  statuclasse5 = `\n${trucbizarre}Classe Débloquée${trucbizarre} ${vid}`
}
if(message.content === "!help"){
  message.author.send(helpembed)
  message.author.send(helpembed2)
} 

if(message.content === "!classe" && uclassen === 0) message.channel.send("**Liste des classes disponibles**:\n-__Mage__, (+1 ATK/+6 DEF/+3 PV)\n-__Prêtre__, (+7 ATK/+1 DEF/+2 PV)\n-__Archer__, (+4 ATK/+2 DEF/+3 PV)\n-__Guerrier__, (+3 ATK/+3 DEF/+3 PV)\n-__Chevalier__, (+1 ATK/+1 DEF/+1 PV)\nPour choisir une classe faites !classe select ``Mage/Prêtre/Archer/Guerrier/Chevalier``");
if(message.content === "!classe" && uclassen > 0) message.channel.send(`**Liste des classes disponibles**:\n-__Mage__, (+1 ATK/+6 DEF/+3 PV)${statuclasse1}\n-__Prêtre__, (+7 ATK/+1 DEF/+2 PV)${statuclasse2}\n-__Archer__, (+4 ATK/+2 DEF/+3 PV)${statuclasse3}\n-__Guerrier__, (+3 ATK/+3 DEF/+3 PV)${statuclasse4}\n-__Chevalier__, (+1 ATK/+1 DEF/+1 PV)${statuclasse5}\nPour selectionner une classe que vous possédez faites !classe select ${trucbizarre}[Nom de la classe]${trucbizarre}\nPour acheter une classe que vous ne possédez pas, faites ${trucbizarre}!classe buy [Nom de la classe]${trucbizarre}`);
let usembed = new Discord.RichEmbed()
.addField(`Informations sur la commande !use`, `La commande ${trucbizarre}!use${trucbizarre} vous permet d'utiliser vos parchemins et vos potions`)
.addField(`\n**Parchemins:**`,`\nIl vous suffit de faire ${trucbizarre}!use [Rareté du parchemin]${trucbizarre}\nNote: il existe 4 raretés, commun, rare, épique, légendaire`)
.addField(`\n\n**Potions:**`, `\nIl vous suffit de faire ${trucbizarre}!use [Type de potion désirée]${trucbizarre}\nLes types de potion sont les suivant:\nregeneration1,2,3(rg1,rg2,rg3)\nexperience1,2,3 (xp1,xp2,xp3)\nAttaque, Défense, Vie (atk/def/pv)`);
if(message.content === "!use" && uclassen != 0) {
  message.channel.send(usembed)
}

if(
  includesRealy(message, `!classe buy M`) ||
  includesRealy(message, `!classe buy m`) 


) {
  if(classeunlock[message.author.id].classe1 === 1 || nivactuel <= 149 || uPieceor < 5000) message.channel.send("Tu ne peux pas faire cette action.");
  if(classeunlock[message.author.id].classe1 ===  0 && nivactuel >= 150 && uPieceor >= 5000) {

  classeunlock[message.author.id] = {
    classe1: 1,
    classe2: classeunlock[message.author.id].classe2,
    classe3: classeunlock[message.author.id].classe3,
    classe4: classeunlock[message.author.id].classe4,
    classe5: classeunlock[message.author.id].classe5
   }

   Pieceor[message.author.id] = {
    Pieceor: uPieceor - 5000
   }


  fs.writeFile("./classeunlock.json", JSON.stringify(classeunlock), (err) => {
    if(err) console.log(err)
  });
  fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
    if(err) console.log(err)
  });
  message.channel.send(`Vous avez débloqué la classe Mage, pour la selectionner faites ${trucbizarre}!classe select Mage${trucbizarre}`)
  };
}
if(
  includesRealy(message, `!classe buy P`) ||
  includesRealy(message, `!classe buy p`) 


) {
  if(classeunlock[message.author.id].classe2 === 1 || nivactuel <= 149 || uPieceor < 5000) message.channel.send("Tu ne peux pas faire cette action.");
  if(classeunlock[message.author.id].classe2 ===  0 && nivactuel >= 150 && uPieceor >= 5000) {

  classeunlock[message.author.id] = {
    classe1: classeunlock[message.author.id].classe1,
    classe2: 1,
    classe3: classeunlock[message.author.id].classe3,
    classe4: classeunlock[message.author.id].classe4,
    classe5: classeunlock[message.author.id].classe5
   }

   Pieceor[message.author.id] = {
    Pieceor: uPieceor - 5000
   }


  fs.writeFile("./classeunlock.json", JSON.stringify(classeunlock), (err) => {
    if(err) console.log(err)
  });
  fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
    if(err) console.log(err)
  });
  message.channel.send(`Vous avez débloqué la classe Prêtre, pour la selectionner faites ${trucbizarre}!classe select Prêtre${trucbizarre}`)
  };
}
if(
  includesRealy(message, `!classe buy A`) ||
  includesRealy(message, `!classe buy a`) 


) {
  if(classeunlock[message.author.id].classe3 === 1 || nivactuel <= 149 || uPieceor < 5000) message.channel.send("Tu ne peux pas faire cette action.");
  if(classeunlock[message.author.id].classe3 ===  0 && nivactuel >= 150 && uPieceor >= 5000) {

  classeunlock[message.author.id] = {
    classe1: classeunlock[message.author.id].classe1,
    classe2: classeunlock[message.author.id].classe2,
    classe3: 1,
    classe4: classeunlock[message.author.id].classe4,
    classe5: classeunlock[message.author.id].classe5
   }

   Pieceor[message.author.id] = {
    Pieceor: uPieceor - 5000
   }


  fs.writeFile("./classeunlock.json", JSON.stringify(classeunlock), (err) => {
    if(err) console.log(err)
  });
  fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
    if(err) console.log(err)
  });
  message.channel.send(`Vous avez débloqué la classe Archer, pour la selectionner faites ${trucbizarre}!classe select Archer${trucbizarre}`)
  };
}
if(
  includesRealy(message, `!classe buy g`) ||
  includesRealy(message, `!classe buy G`) 


) {
  if(classeunlock[message.author.id].classe4 === 1 || nivactuel <= 149 || uPieceor < 5000) message.channel.send("Tu ne peux pas faire cette action.");
  if(classeunlock[message.author.id].classe4 ===  0 && nivactuel >= 150 && uPieceor >= 5000) {

  classeunlock[message.author.id] = {
    classe1: classeunlock[message.author.id].classe1,
    classe2: classeunlock[message.author.id].classe2,
    classe3: classeunlock[message.author.id].classe3,
    classe4: 1,
    classe5: classeunlock[message.author.id].classe5
   }

   Pieceor[message.author.id] = {
    Pieceor: uPieceor - 5000
   }


  fs.writeFile("./classeunlock.json", JSON.stringify(classeunlock), (err) => {
    if(err) console.log(err)
  });
  fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
    if(err) console.log(err)
  });
  message.channel.send(`Vous avez débloqué la classe Guerrier, pour la selectionner faites ${trucbizarre}!classe select Guerrier${trucbizarre}`)
  };
}
if(
  includesRealy(message, `!classe buy c`) ||
  includesRealy(message, `!classe buy C`) 


) {
  if(classeunlock[message.author.id].classe5 === 1 || nivactuel <= 149 || uPieceor < 5000) message.channel.send("Tu ne peux pas faire cette action.");
  if(classeunlock[message.author.id].classe5 ===  0 && nivactuel >= 150 && uPieceor >= 5000) {

  classeunlock[message.author.id] = {
    classe1: classeunlock[message.author.id].classe1,
    classe2: classeunlock[message.author.id].classe2,
    classe3: classeunlock[message.author.id].classe3,
    classe4: classeunlock[message.author.id].classe4,
    classe5: 1
   }

   Pieceor[message.author.id] = {
    Pieceor: uPieceor - 5000
   }


  fs.writeFile("./classeunlock.json", JSON.stringify(classeunlock), (err) => {
    if(err) console.log(err)
  });
  fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
    if(err) console.log(err)
  });
  message.channel.send(`Vous avez débloqué la classe Chevalier, pour la selectionner faites ${trucbizarre}!classe select Chevalier${trucbizarre}`)
  };
}
if(
  includesRealy(message, `!classe select M`) ||
  includesRealy(message, `!classe select m`) 


) {
  if(classeunlock[message.author.id].classe1 === 0 && uclassen > 0) message.channel.send("Tu n'as pas débloqué cette classe, fais !classe pour plus d'informations.");
  if(uclassen === 0 || classeunlock[message.author.id].classe1 ===  1) {

  classeunlock[message.author.id] = {
    classe1: 1,
    classe2: classeunlock[message.author.id].classe2,
    classe3: classeunlock[message.author.id].classe3,
    classe4: classeunlock[message.author.id].classe4,
    classe5: classeunlock[message.author.id].classe5
}

    classe[message.author.id] = {
      classe: 1
  }



  fs.writeFile("./classe.json", JSON.stringify(classe), (err) => {
    if(err) console.log(err)
  });
  fs.writeFile("./classeunlock.json", JSON.stringify(classeunlock), (err) => {
    if(err) console.log(err)
  });
  message.channel.send("Vous êtes maintenant un Mage!")
  };
}
if(
  includesRealy(message, `!classe select P`) ||
  includesRealy(message, `!classe select p`) 


) {    if(classeunlock[message.author.id].classe2 === 0 && uclassen > 0) message.channel.send("Tu n'as pas débloqué cette classe, fais !classe pour plus d'informations.");
    if(uclassen === 0 || classeunlock[message.author.id].classe2 ===  1) {

    classeunlock[message.author.id] = {
      classe1: classeunlock[message.author.id].classe1,
      classe2: 1,
      classe3: classeunlock[message.author.id].classe3,
      classe4: classeunlock[message.author.id].classe4,
      classe5: classeunlock[message.author.id].classe5
  }
      classe[message.author.id] = {
        classe: 2
      }





    fs.writeFile("./classe.json", JSON.stringify(classe), (err) => {
      if(err) console.log(err)
    });

    fs.writeFile("./classeunlock.json", JSON.stringify(classeunlock), (err) => {
      if(err) console.log(err)
    });
    message.channel.send("Vous êtes maintenant un Prêtre!")
  };
}
if(
  includesRealy(message, `!classe select a`) ||
  includesRealy(message, `!classe select A`) 


) {      if(classeunlock[message.author.id].classe3 === 0 && uclassen > 0) message.channel.send("Tu n'as pas débloqué cette classe, fais !classe pour plus d'informations.");
      if(uclassen === 0 || classeunlock[message.author.id].classe3 ===  1) {

      classeunlock[message.author.id] = {
        classe1: classeunlock[message.author.id].classe1,
        classe2: classeunlock[message.author.id].classe2,
        classe3: 1,
        classe4: classeunlock[message.author.id].classe4,
        classe5: classeunlock[message.author.id].classe5
    }
    classe[message.author.id] = {
      classe: 3
    }


      fs.writeFile("./classe.json", JSON.stringify(classe), (err) => {
        if(err) console.log(err)
      });
      fs.writeFile("./classeunlock.json", JSON.stringify(classeunlock), (err) => {
        if(err) console.log(err)
      });
      message.channel.send("Vous êtes maintenant un Archer!")
    
    };
  }
  if(
    includesRealy(message, `!classe select g`) ||
    includesRealy(message, `!classe select G`) 
  
  
  ) {        if(classeunlock[message.author.id].classe4 === 0 && uclassen > 0) message.channel.send("Tu n'as pas débloqué cette classe, fais !classe pour plus d'informations.");
        if(uclassen === 0 || classeunlock[message.author.id].classe4 ===  1) {
  
        classeunlock[message.author.id] = {
          classe1: classeunlock[message.author.id].classe1,
          classe2: classeunlock[message.author.id].classe2,
          classe3: classeunlock[message.author.id].classe3,
          classe4: 1,
          classe5: classeunlock[message.author.id].classe5
      }

          classe[message.author.id] = {
            classe: 4
        }



        fs.writeFile("./classe.json", JSON.stringify(classe), (err) => {
          if(err) console.log(err)
        });
        fs.writeFile("./classeunlock.json", JSON.stringify(classeunlock), (err) => {
          if(err) console.log(err)
        });
        message.channel.send("Vous êtes maintenant un Guerrier!")
      };
        }
        if(
          includesRealy(message, `!classe select C`) ||
          includesRealy(message, `!classe select c`) 
        
        
        ) {          if(classeunlock[message.author.id].classe5 === 0 && uclassen > 0) message.channel.send("Tu n'as pas débloqué cette classe, fais !classe pour plus d'informations.");
        if(uclassen === 0 || classeunlock[message.author.id].classe5 ===  1) {
  
        classeunlock[message.author.id] = {
          classe1: classeunlock[message.author.id].classe1,
          classe2: classeunlock[message.author.id].classe2,
          classe3: classeunlock[message.author.id].classe3,
          classe4: classeunlock[message.author.id].classe4,
          classe5: 1
      }

            classe[message.author.id] = {
              classe: 5
          }


          fs.writeFile("./classe.json", JSON.stringify(classe), (err) => {
            if(err) console.log(err)
          });    
         fs.writeFile("./classeunlock.json", JSON.stringify(classeunlock), (err) => {
            if(err) console.log(err)
          });
          message.channel.send("Vous êtes maintenant un Chevalier!")
        };
          }

          let bossname = "";
          let bosspv = 0;
          let bossatk = 0;
          let bossdef = 0;
          let bossdropor = 0;
          let bossdropxp = 0;
          let bossname2 = "";
          let bosspv2 = 0;
          let bossatk2 = 0;
          let bossdef2 = 0;
          let bossdropor2 = 0;
          let bossdropxp2 = 0;
          let bossname3 = "";
          let bosspv3 = 0;
          let bossatk3 = 0;
          let bossdef3 = 0;
          let bossdropor3 = 0;
          let bossdropxp3 = 0;
          let bossname4= ""
          let bosspv4 = 0;
          let bossatk4 = 0;
          let bossdef4 = 0;
          let bossdropor4 = 0;
          let bossdropxp4 = 0;
          let bossname5 = "";
          let bosspv5 = 0;
          let bossatk5 = 0;
          let bossdef5 = 0;
          let bossdropor5 = 0;
          let bossdropxp5 = 0;
          let phraseepic = "";
          let bossnamec1 = ""
          let bosspvc1 = 0
          let bossatkc1 = 0
          let bossdefc1 = 0
          let bossdropxpcc1 = 0
          let bossdropxpc1 = 0

          
          let etagec1 = require("./etagec1.json")
          if(!etagec1[message.author.id]){
            etagec1[message.author.id] = {
              etagec1: 0
            };
          
          fs.writeFile("./etagec1.json", JSON.stringify(etagec1), (err) => {
            if (err) console.log(err)
          });
          }
          let uetagec1 = etagec1[message.author.id].etagec1
let faiblessec1 = 1
let fortc1 = 1
let faiblessec2 = 1
let fortc2 = 1
let faiblessec3 = 1
let fortc3 = 1
let faiblessec4 = 1
let fortc4 = 1
let faiblessec5 = 1
let fortc5 = 1
if(uclassen === 1){
  faiblessec1 = 1.25
  fortc1 = 1.25
}
if(uclassen === 2){
  faiblessec2 = 1.25
  fortc2 = 1.25
}
if(uclassen === 3){
  faiblessec3 = 1.25
  fortc3 = 1.25
}
if(uclassen === 4){
  faiblessec4 = 1.25
  fortc4 = 1.25
}
if(uclassen === 5){
  faiblessec5 = 1.25
  fortc5 = 1.25
}
          if(uetagec1 === 0) {

            bossnamec1 = "Petit Squelette"
            bosspvc1 = 5* faiblessec2
            bossatkc1 = 2* faiblessec2
            bossdefc1 = 3 * faiblessec2
            bossdropxpc1 = 2
            bossdropxpcc1 = 1
            };
if(uetagec1 === 1) {

      bossnamec1 = "Petit Zombie"
      bosspvc1 = 6* faiblessec2
      bossatkc1 = 3* faiblessec2
      bossdefc1 = 2* faiblessec2
      bossdropxpc1 = 2
      bossdropxpcc1 = 1
};
if(uetagec1 === 2) {

  bossnamec1 = "Epouvantail"
  bosspvc1 = 7
  bossatkc1 = 1.5
  bossdefc1 = 4
  bossdropxpc1 = 3
  bossdropxpcc1 = 2
};
if(uetagec1 === 3) {

  bossnamec1 = "Aventurier perdu"
  bosspvc1 = 10
  bossatkc1 = 4
  bossdefc1 = 4
  bossdropxpc1 = 5
  bossdropxpcc1 = 3
};
if(uetagec1 === 4) {

  bossnamec1 = "Horde de chauve-souris"
  bosspvc1 = 10 /faiblessec3*faiblessec4
  bossatkc1 = 5/faiblessec3*faiblessec4
  bossdefc1 = 2/faiblessec3*faiblessec4
  bossdropxpc1 = 25
  bossdropxpcc1 = 4
};
if(uetagec1 === 5) {

  bossnamec1 = "Zombie en armure"
  bosspvc1 = 18  * faiblessec1/faiblessec4
  bossatkc1 = 3* faiblessec1/faiblessec4
  bossdefc1 = 8* faiblessec1/faiblessec4
  bossdropxpc1 = 12
  bossdropxpcc1 = 5
};
if(uetagec1 === 6) {

  bossnamec1 = "Zombie Dechainé"
  bosspvc1 = 15/faiblessec4
  bossatkc1 = 8/ faiblessec4
  bossdefc1 = 4/faiblessec4
  bossdropxpc1 = 15
  bossdropxpcc1 = 6
};
if(uetagec1 === 7) {

  bossnamec1 = "Zombie-Squelette"
  bosspvc1 = 20 /faiblessec4
  bossatkc1 = 10 /faiblessec4
  bossdefc1 = 6 /faiblessec4
  bossdropxpc1 = 20
  bossdropxpcc1 = 7
};
if(uetagec1 === 8) {

  bossnamec1 = "Serpent"
  bosspvc1 = 22/faiblessec4
  bossatkc1 = 9/faiblessec4
  bossdefc1 = 7/faiblessec4
  bossdropxpc1 = 25
  bossdropxpcc1 = 8
};
if(uetagec1 === 9) {

  bossnamec1 = "Spectre de Zombie"
  bosspvc1 = 15/ faiblessec1 *faiblessec4
  bossatkc1 = 12/ faiblessec1*faiblessec4
  bossdefc1 = 10/ faiblessec1*faiblessec4
  bossdropxpc1 = 30
  bossdropxpcc1 = 9
};
if(uetagec1 === 10) {

  bossnamec1 = "Piètre Invocateur"
  bosspvc1 = 30*faiblessec4/faiblessec5
  bossatkc1 = 18*faiblessec4/faiblessec5
  bossdefc1 = 14*faiblessec4/faiblessec5
  bossdropxpc1 = 150
  bossdropxpcc1 = 20
};
if(uetagec1 === 11) {

  bossnamec1 = "Clown sanglant"
  bosspvc1 = 28
  bossatkc1 = 22
  bossdefc1 = 12
  bossdropxpc1 = 80
  bossdropxpcc1 = 21
};
if(uetagec1 === 12) {

  bossnamec1 = "Mort-Vivant"
  bosspvc1 = 33/faiblessec2/faiblessec5
  bossatkc1 = 20/faiblessec2/faiblessec5
  bossdefc1 = 18 / faiblessec2/faiblessec5
  bossdropxpc1 = 90
  bossdropxpcc1 = 22
};
if(uetagec1 === 13) {

  bossnamec1 = "Esprit confiné"
  bosspvc1 = 25*faiblessec4
  bossatkc1 = 26*faiblessec4
  bossdefc1 = 14*faiblessec4
  bossdropxpc1 = 100
  bossdropxpcc1 = 23
};
if(uetagec1 === 14) {

  bossnamec1 = "Esprit des Abysses"
  bosspvc1 = 23*faiblessec4
  bossatkc1 = 24*faiblessec4
  bossdefc1 = 22*faiblessec4
  bossdropxpc1 = 110
  bossdropxpcc1 = 24
};
if(uetagec1 === 15) {

  bossnamec1 = "Esprit de la terre"
  bosspvc1 = 26*faiblessec4
  bossatkc1 = 26*faiblessec4
  bossdefc1 = 26*faiblessec4
  bossdropxpc1 = 120
  bossdropxpcc1 = 25
};
if(uetagec1 === 16) {

  bossnamec1 = "Esprit du ciel"
  bosspvc1 = 28/faiblessec3*faiblessec4
  bossatkc1 = 28/faiblessec3*faiblessec4
  bossdefc1 = 28/faiblessec3*faiblessec4
  bossdropxpc1 = 130
  bossdropxpcc1 = 26
};
if(uetagec1 === 17) {

  bossnamec1 = "Esprit élémentaire"
  bosspvc1 = 32* faiblessec1*faiblessec4
  bossatkc1 = 30* faiblessec1*faiblessec4
  bossdefc1 = 30* faiblessec1*faiblessec4
  bossdropxpc1 = 140
  bossdropxpcc1 = 27
};
if(uetagec1 === 18) {

  bossnamec1 = "Esprit démoniaque"
  bosspvc1 = 28/ faiblessec2*faiblessec4/faiblessec5
  bossatkc1 = 36/ faiblessec2*faiblessec4/faiblessec5
  bossdefc1 = 28/ faiblessec2*faiblessec4/faiblessec5
  bossdropxpc1 = 150
  bossdropxpcc1 = 28
};
if(uetagec1 === 19) {

  bossnamec1 = "Esprit divin"
  bosspvc1 = 35* faiblessec2*faiblessec4
  bossatkc1 = 28* faiblessec2*faiblessec4
  bossdefc1 = 34* faiblessec2*faiblessec4
  bossdropxpc1 = 160
  bossdropxpcc1 = 29
};
if(uetagec1 === 20) {

  bossnamec1 = "Esprit primaire"
  bosspvc1 = 40*faiblessec4
  bossatkc1 = 38*faiblessec4
  bossdefc1 = 38*faiblessec4
  bossdropxpc1 = 250
  bossdropxpcc1 = 35
};
if(uetagec1 === 21) {

  bossnamec1 = "Invocateur d'esprit"
  bosspvc1 = 55* faiblessec1*faiblessec4/faiblessec5
  bossatkc1 = 32* faiblessec1*faiblessec4/faiblessec5
  bossdefc1 = 33* faiblessec1*faiblessec4/faiblessec5
  bossdropxpc1 = 260
  bossdropxpcc1 = 36
};
if(uetagec1 === 22) {

  bossnamec1 = "Gobelin bagarreur"
  bosspvc1 = 25* faiblessec1 /faiblessec4
  bossatkc1 = 40* faiblessec1/faiblessec4
  bossdefc1 = 32* faiblessec1/faiblessec4
  bossdropxpc1 = 270
  bossdropxpcc1 = 37
};
if(uetagec1 === 23) {

  bossnamec1 = "Horde de gobelin"
  bosspvc1 = 50/faiblessec4*faiblessec3
  bossatkc1 = 35/faiblessec4*faiblessec3
  bossdefc1 = 30/faiblessec4*faiblessec3
  bossdropxpc1 = 280
  bossdropxpcc1 = 38
};
if(uetagec1 === 24) {

  bossnamec1 = "Pilleur de tombes"
  bosspvc1 = 30/faiblessec5
  bossatkc1 = 45/faiblessec5
  bossdefc1 = 30/faiblessec5
  bossdropxpc1 = 290
  bossdropxpcc1 = 39
};
if(uetagec1 === 25) {

  bossnamec1 = "Ombre mystérieuse"
  bosspvc1 = 15*faiblessec4/faiblessec5
  bossatkc1 = 50*faiblessec4/faiblessec5
  bossdefc1 = 50*faiblessec4/faiblessec5
  bossdropxpc1 = 300
  bossdropxpcc1 = 40
};
if(uetagec1 === 26) {

  bossnamec1 = "Cobaye raté"
  bosspvc1 = 22/faiblessec4*faiblessec5
  bossatkc1 = 28/faiblessec4*faiblessec5
  bossdefc1 = 33/faiblessec4*faiblessec5
  bossdropxpc1 = 310
  bossdropxpcc1 = 41
};
if(uetagec1 === 27) {

  bossnamec1 = "Orc têtu"
  bosspvc1 = 42
  bossatkc1 = 46
  bossdefc1 = 40
  bossdropxpc1 = 320
  bossdropxpcc1 = 42
};
if(uetagec1 === 28) {

  bossnamec1 = "Orc-Zombie"
  bosspvc1 = 48* faiblessec1/faiblessec4
  bossatkc1 = 44* faiblessec1/faiblessec4
  bossdefc1 = 43* faiblessec1/faiblessec4
  bossdropxpc1 = 330
  bossdropxpcc1 = 43
};
if(uetagec1 === 29) {

  bossnamec1 = "Orc sournois"
  bosspvc1 = 55
  bossatkc1 = 43
  bossdefc1 = 46
  bossdropxpc1 = 340
  bossdropxpcc1 = 44
};
if(uetagec1 === 30) {

  bossnamec1 = "Gardien Orc"
  bosspvc1 = 500
  bossatkc1 = 65
  bossdefc1 = 60
  bossdropxpc1 = 500
  bossdropxpcc1 = 50
};
if(uetagec1 === 31) {

  bossnamec1 = "Horde de serpents"
  bosspvc1 = 800/faiblessec4*faiblessec3
  bossatkc1 = 55/faiblessec4*faiblessec3
  bossdefc1 = 50/faiblessec4*faiblessec3
  bossdropxpc1 = 510
  bossdropxpcc1 = 51
};
if(uetagec1 === 32) {

  bossnamec1 = "Cobra"
  bosspvc1 = 650
  bossatkc1 = 63
  bossdefc1 = 58
  bossdropxpc1 = 520
  bossdropxpcc1 = 52
};
if(uetagec1 === 33) {

  bossnamec1 = "Cobra Royal"
  bosspvc1 = 625
  bossatkc1 = 78
  bossdefc1 = 55
  bossdropxpc1 = 530
  bossdropxpcc1 = 53
};
if(uetagec1 === 34) {

  bossnamec1 = "Invocateur assidû"
  bosspvc1 = 1000/ faiblessec1/faiblessec5
  bossatkc1 = 88/ faiblessec1/faiblessec5
  bossdefc1 = 78/ faiblessec1/faiblessec5
  bossdropxpc1 = 540
  bossdropxpcc1 = 54
};
if(uetagec1 === 35) {

  bossnamec1 = "Médium démoniaque"
  bosspvc1 = 800/ faiblessec2/faiblessec5
  bossatkc1 = 99/ faiblessec2/faiblessec5
  bossdefc1 = 72/ faiblessec2/faiblessec5
  bossdropxpc1 = 550
  bossdropxpcc1 = 55
};
if(uetagec1 === 36) {

  bossnamec1 = "Mage inconnu"
  bosspvc1 = 600* faiblessec1*faiblessec4/faiblessec5
  bossatkc1 = 125* faiblessec1*faiblessec4/faiblessec5
  bossdefc1 = 73* faiblessec1*faiblessec4/faiblessec5
  bossdropxpc1 = 560
  bossdropxpcc1 = 56
};
if(uetagec1 === 37) {

  bossnamec1 = "Garde novice"
  bosspvc1 = 850*faiblessec3*faiblessec5
  bossatkc1 = 90*faiblessec3*faiblessec5
  bossdefc1 = 83*faiblessec3*faiblessec5
  bossdropxpc1 = 570
  bossdropxpcc1 = 57
};
if(uetagec1 === 38) {

  bossnamec1 = "Mage Mort-Vivant"
  bosspvc1 = 1350/ faiblessec2*faiblessec4/faiblessec5
  bossatkc1 = 120/ faiblessec2*faiblessec4/faiblessec5
  bossdefc1 = 120/ faiblessec2*faiblessec4/faiblessec5
  bossdropxpc1 = 580
  bossdropxpcc1 = 58
};
if(uetagec1 === 39) {

  bossnamec1 = "Chevalier perdu"
  bosspvc1 = 1000*faiblessec3*faiblessec5
  bossatkc1 = 100*faiblessec3*faiblessec5
  bossdefc1 = 100*faiblessec3*faiblessec5
  bossdropxpc1 = 590
  bossdropxpcc1 = 59
};
if(uetagec1 === 40) {

  bossnamec1 = "Gardien du niveau intermédiaire"
  bosspvc1 = 1250*faiblessec3*faiblessec5
  bossatkc1 = 135*faiblessec3*faiblessec5
  bossdefc1 = 145*faiblessec3*faiblessec5
  bossdropxpc1 = 750
  bossdropxpcc1 = 75
};
if(uetagec1 === 41) {

  bossnamec1 = "Objets animés"
  bosspvc1 = 700/ faiblessec1/faiblessec3
  bossatkc1 = 80/ faiblessec1/faiblessec3
  bossdefc1 = 75/ faiblessec1/faiblessec3
  bossdropxpc1 = 760
  bossdropxpcc1 = 76
};
if(uetagec1 === 42) {

  bossnamec1 = "Petite Succube"
  bosspvc1 = 1300* faiblessec2/faiblessec4*faiblessec5
  bossatkc1 = 150* faiblessec2 /faiblessec4*faiblessec5
  bossdefc1 = 135* faiblessec2 /faiblessec4*faiblessec5
  bossdropxpc1 = 770
  bossdropxpcc1 = 77
};
if(uetagec1 === 43) {

  bossnamec1 = "Squelette ensanglanté"
  bosspvc1 = 1400* faiblessec2
  bossatkc1 = 160* faiblessec2
  bossdefc1 = 145* faiblessec2
  bossdropxpc1 = 780
  bossdropxpcc1 = 78
};
if(uetagec1 === 44) {

  bossnamec1 = "Zombie ensanglanté"
  bosspvc1 = 1400* faiblessec2
  bossatkc1 = 170* faiblessec2
  bossdefc1 = 135* faiblessec2
  bossdropxpc1 = 790
  bossdropxpcc1 = 79
};
if(uetagec1 === 45) {

  bossnamec1 = "Ogre ensanglanté"
  bosspvc1 = 1500/faiblessec3
  bossatkc1 = 180/faiblessec3
  bossdefc1 = 155/faiblessec3
  bossdropxpc1 = 800
  bossdropxpcc1 = 80
};
if(uetagec1 === 46) {

  bossnamec1 = "Cobra ensanglanté"
  bosspvc1 = 1550
  bossatkc1 = 185
  bossdefc1 = 165
  bossdropxpc1 = 810
  bossdropxpcc1 = 81
};
if(uetagec1 === 47) {

  bossnamec1 = "Gardien ensanglanté"
  bosspvc1 = 500*faiblessec5
  bossatkc1 = 250*faiblessec5
  bossdefc1 = 220*faiblessec5
  bossdropxpc1 = 820
  bossdropxpcc1 = 82
};
if(uetagec1 === 48) {

  bossnamec1 = "Bourreau"
  bosspvc1 = 1100* faiblessec2*faiblessec5
  bossatkc1 = 245* faiblessec2*faiblessec5
  bossdefc1 = 200* faiblessec2*faiblessec5
  bossdropxpc1 = 830
  bossdropxpcc1 = 83
};
if(uetagec1 === 49) {

  bossnamec1 = "Ninja"
  bosspvc1 = 1200* faiblessec1*faiblessec3/faiblessec4
  bossatkc1 = 220* faiblessec1*faiblessec3/faiblessec4
  bossdefc1 = 180* faiblessec1*faiblessec3/faiblessec4
  bossdropxpc1 = 840
  bossdropxpcc1 = 84
};
if(uetagec1 === 50) {

  bossnamec1 = "Esprit du sang"
  bosspvc1 = 2500*faiblessec4*faiblessec5
  bossatkc1 = 300*faiblessec4*faiblessec5
  bossdefc1 = 280*faiblessec4*faiblessec5
  bossdropxpc1 = 1000
  bossdropxpcc1 = 100
};
if(uetagec1 === 51) {

  bossnamec1 = "Horde de Morts-Vivants"
  bosspvc1 = 2000/ faiblessec2/faiblessec5
  bossatkc1 = 350/ faiblessec2/faiblessec5
  bossdefc1 = 180/ faiblessec2/faiblessec5
  bossdropxpc1 = 1050
  bossdropxpcc1 = 102
};
if(uetagec1 === 52) {

  bossnamec1 = "Ombre démoniaque"
  bosspvc1 = 1800 *faiblessec4/faiblessec5
  bossatkc1 = 388 *faiblessec4/faiblessec5
  bossdefc1 = 222 *faiblessec4/faiblessec5
  bossdropxpc1 = 1100
  bossdropxpcc1 = 104
};
if(uetagec1 === 53) {

  bossnamec1 = "Zombie-Guerrier"
  bosspvc1 = 2000/ faiblessec1 *faiblessec3*faiblessec5
  bossatkc1 = 300/ faiblessec1 *faiblessec3*faiblessec5
  bossdefc1 = 300/ faiblessec1 *faiblessec3*faiblessec5
  bossdropxpc1 = 1150
  bossdropxpcc1 = 106
};
if(uetagec1 === 54) {

  bossnamec1 = "Monstre de sable"
  bosspvc1 = 2103*faiblessec3
  bossatkc1 = 285*faiblessec3
  bossdefc1 = 305*faiblessec3
  bossdropxpc1 = 1200
  bossdropxpcc1 = 108
};
if(uetagec1 === 55) {

  bossnamec1 = "Monstre mystérieux"
  bosspvc1 = 2222/faiblessec5
  bossatkc1 = 282/faiblessec5
  bossdefc1 = 322/faiblessec5
  bossdropxpc1 = 1250
  bossdropxpcc1 = 110
};
if(uetagec1 === 56) {

  bossnamec1 = "Momie ensablée"
  bosspvc1 = 2304*faiblessec3
  bossatkc1 = 302*faiblessec3
  bossdefc1 = 298*faiblessec3
  bossdropxpc1 = 1300
  bossdropxpcc1 = 112
};
if(uetagec1 === 57) {

  bossnamec1 = "Aigle furieux"
  bosspvc1 = 2500/faiblessec3*faiblessec5
  bossatkc1 = 321/faiblessec3*faiblessec5
  bossdefc1 = 305/faiblessec3*faiblessec5
  bossdropxpc1 = 1350
  bossdropxpcc1 = 114
};
if(uetagec1 === 58) {

  bossnamec1 = "Gardien du sarcophage"
  bosspvc1 = 3000*faiblessec5
  bossatkc1 = 380*faiblessec5
  bossdefc1 = 340*faiblessec5
  bossdropxpc1 = 1400
  bossdropxpcc1 = 116
};
if(uetagec1 === 59) {

  bossnamec1 = "Momie Sacrée"
  bosspvc1 = 3500* faiblessec2*faiblessec5
  bossatkc1 = 450* faiblessec2*faiblessec5
  bossdefc1 = 440* faiblessec2*faiblessec5
  bossdropxpc1 = 1450
  bossdropxpcc1 = 118
};
if(uetagec1 === 60) {

  bossnamec1 = "Invocateur Confirmé"
  bosspvc1 = 8000*faiblessec4/faiblessec5
  bossatkc1 = 400*faiblessec4/faiblessec5
  bossdefc1 = 400*faiblessec4/faiblessec5
  bossdropxpc1 = 1500
  bossdropxpcc1 = 120
};
if(uetagec1 === 61) {

  bossnamec1 = "Horde de slimes"
  bosspvc1 = 12000*faiblessec3
  bossatkc1 = 500*faiblessec3
  bossdefc1 = 250*faiblessec3
  bossdropxpc1 = 1550
  bossdropxpcc1 = 122
};
if(uetagec1 === 62) {

  bossnamec1 = "Villageois terrifiant"
  bosspvc1 = 13000*faiblessec5
  bossatkc1 = 430*faiblessec5
  bossdefc1 = 363*faiblessec5
  bossdropxpc1 = 1600
  bossdropxpcc1 = 124
};
if(uetagec1 === 63) {

  bossnamec1 = "Lion Mort-Vivant"
  bosspvc1 = 16000/ faiblessec1/faiblessec5
  bossatkc1 = 530/ faiblessec1/faiblessec5
  bossdefc1 = 520/ faiblessec1/faiblessec5
  bossdropxpc1 = 2300
  bossdropxpcc1 = 126
};
if(uetagec1 === 64) {

  bossnamec1 = "Spectre démoniaque"
  bosspvc1 = 18000/ faiblessec2*faiblessec4/faiblessec5
  bossatkc1 = 580/ faiblessec2*faiblessec4/faiblessec5
  bossdefc1 = 475/ faiblessec2*faiblessec4/faiblessec5
  bossdropxpc1 = 2600
  bossdropxpcc1 = 128
};
if(uetagec1 === 65) {

  bossnamec1 = "Manieur d'ombres"
  bosspvc1 = 12500* faiblessec1*faiblessec4/faiblessec5
  bossatkc1 = 780* faiblessec1*faiblessec4/faiblessec5
  bossdefc1 = 652* faiblessec1*faiblessec4/faiblessec5
  bossdropxpc1 = 2800
  bossdropxpcc1 = 130
};
if(uetagec1 === 66) {

  bossnamec1 = "Sabreur des ténèbres"
  bosspvc1 = 13500* faiblessec2*faiblessec3/faiblessec5
  bossatkc1 = 750* faiblessec2*faiblessec3/faiblessec5
  bossdefc1 = 630* faiblessec2*faiblessec3/faiblessec5
  bossdropxpc1 = 3000
  bossdropxpcc1 = 132
};
if(uetagec1 === 67) {

  bossnamec1 = "Plante maléfique"
  bosspvc1 = 16500*faiblessec3/faiblessec4/faiblessec5
  bossatkc1 = 690*faiblessec3/faiblessec4/faiblessec5
  bossdefc1 = 630*faiblessec3/faiblessec4/faiblessec5
  bossdropxpc1 = 3200
  bossdropxpcc1 = 134
};
if(uetagec1 === 68) {

  bossnamec1 = "Plante halucinogène"
  bosspvc1 = 10000/faiblessec3*faiblessec4*faiblessec5
  bossatkc1 = 600/faiblessec3*faiblessec4*faiblessec5
  bossdefc1 = 600/faiblessec3*faiblessec4*faiblessec5
  bossdropxpc1 = 3400
  bossdropxpcc1 = 136
};
if(uetagec1 === 69) {

  bossnamec1 = message.author.username
  bosspvc1 = ((PMaxPv+petpvboosted)/2)
  bossatkc1 = ((PMaxAtk+petatkboosted)/2)
  bossdefc1 = ((PMaxDef+petdefboosted)/2)
  bossdropxpc1 = 4000
  bossdropxpcc1 = 138
};
if(uetagec1 === 70) {

  bossnamec1 = "Sorcier machiavélique"
  bosspvc1 = 20000/ faiblessec1*faiblessec4*faiblessec5
  bossatkc1 = 750/ faiblessec1*faiblessec4*faiblessec5
  bossdefc1 = 700/ faiblessec1*faiblessec4*faiblessec5
  bossdropxpc1 = 5000
  bossdropxpcc1 = 140
};
if(uetagec1 === 71) {

  bossnamec1 = "Sorciere machiavélique"
  bosspvc1 = 22000/ faiblessec2*faiblessec4*faiblessec5
  bossatkc1 = 730/ faiblessec2*faiblessec4*faiblessec5
  bossdefc1 = 730/ faiblessec2*faiblessec4*faiblessec5
  bossdropxpc1 = 5500
  bossdropxpcc1 = 142
};
if(uetagec1 === 72) {

  bossnamec1 = "Golem de sable"
  bosspvc1 = 23000*faiblessec3/faiblessec1/faiblessec5
  bossatkc1 = 700*faiblessec3/faiblessec1/faiblessec5
  bossdefc1 = 750*faiblessec3/faiblessec1/faiblessec5
  bossdropxpc1 = 6000
  bossdropxpcc1 = 144
};
if(uetagec1 === 73) {

  bossnamec1 = "Golem d'acier"
  bosspvc1 = 26000*faiblessec3/faiblessec4/faiblessec5
  bossatkc1 = 680*faiblessec3/faiblessec4/faiblessec5
  bossdefc1 = 760*faiblessec3/faiblessec4/faiblessec5
  bossdropxpc1 = 6500
  bossdropxpcc1 = 146
};
if(uetagec1 === 74) {

  bossnamec1 = "Golem de feu"
  bosspvc1 = 27500/ faiblessec2*faiblessec3*faiblessec4/faiblessec5
  bossatkc1 = 690/ faiblessec2*faiblessec3*faiblessec4/faiblessec5
  bossdefc1 = 740/ faiblessec2*faiblessec3*faiblessec4/faiblessec5
  bossdropxpc1 = 7000
  bossdropxpcc1 = 148
};
if(uetagec1 === 75) {

  bossnamec1 = "Golem d'eau"
  bosspvc1 = 28000*faiblessec3*faiblessec4/faiblessec5
  bossatkc1 = 670*faiblessec3*faiblessec4/faiblessec5
  bossdefc1 = 730*faiblessec3*faiblessec4/faiblessec5
  bossdropxpc1 = 7500
  bossdropxpcc1 = 150
};
if(uetagec1 === 76) {

  bossnamec1 = "Golem de magma"
  bosspvc1 = 30000* faiblessec1*faiblessec3*faiblessec4/faiblessec5
  bossatkc1 = 750* faiblessec1*faiblessec3*faiblessec4/faiblessec5
  bossdefc1 = 750* faiblessec1*faiblessec3*faiblessec4/faiblessec5
  bossdropxpc1 = 8500
  bossdropxpcc1 = 152
};
if(uetagec1 === 77) {

  bossnamec1 = "Golem géant"
  bosspvc1 = 33000* faiblessec2/faiblessec4/faiblessec5
  bossatkc1 = 800* faiblessec2/faiblessec4/faiblessec5
  bossdefc1 = 760* faiblessec2/faiblessec4/faiblessec5
  bossdropxpc1 = 9000
  bossdropxpcc1 = 154
};
if(uetagec1 === 78) {

  bossnamec1 = "Monstre marin"
  bosspvc1 = 35000* faiblessec3/faiblessec4/faiblessec5
  bossatkc1 = 770* faiblessec3/faiblessec4/faiblessec5
  bossdefc1 = 730* faiblessec3/faiblessec4/faiblessec5
  bossdropxpc1 = 9500
  bossdropxpcc1 = 156
};
if(uetagec1 === 79) {

  bossnamec1 = "Requin-baleine"
  bosspvc1 = 32200* faiblessec3/faiblessec4*faiblessec5
  bossatkc1 = 780* faiblessec3/faiblessec4*faiblessec5
  bossdefc1 = 750* faiblessec3/faiblessec4*faiblessec5
  bossdropxpc1 = 10000
  bossdropxpcc1 = 158
};
if(uetagec1 === 80) {

  bossnamec1 = "Baleine Blanche"
  bosspvc1 = 40000/ faiblessec3/faiblessec4/faiblessec5
  bossatkc1 = 820/ faiblessec3/faiblessec4/faiblessec5
  bossdefc1 = 790/ faiblessec3/faiblessec4/faiblessec5
  bossdropxpc1 = 12000
  bossdropxpcc1 = 160
};
if(uetagec1 === 81) {

  bossnamec1 = "Chasseur de monstres"
  bosspvc1 = 41000/ faiblessec1*faiblessec5
  bossatkc1 = 830/ faiblessec1*faiblessec5
  bossdefc1 = 800/ faiblessec1*faiblessec5
  bossdropxpc1 = 13000
  bossdropxpcc1 = 162
};
if(uetagec1 === 82) {

  bossnamec1 = "Serpent noir"
  bosspvc1 = 42000* faiblessec3*faiblessec4
  bossatkc1 = 860* faiblessec3*faiblessec4
  bossdefc1 = 780* faiblessec3*faiblessec4
  bossdropxpc1 = 14000
  bossdropxpcc1 = 164
};
if(uetagec1 === 83) {

  bossnamec1 = "Grand lapin"
  bosspvc1 = 40000* faiblessec2/faiblessec4
  bossatkc1 = 900* faiblessec2/faiblessec4
  bossdefc1 = 750* faiblessec2/faiblessec4
  bossdropxpc1 = 15000
  bossdropxpcc1 = 166
};
if(uetagec1 === 84) {

  bossnamec1 = "Salamandre"
  bosspvc1 = 36000
  bossatkc1 = 950
  bossdefc1 = 780
  bossdropxpc1 = 16000
  bossdropxpcc1 = 168
};
if(uetagec1 === 85) {

  bossnamec1 = "Yéti Démoniaque"
  bosspvc1 = 40000/ faiblessec2* faiblessec3/faiblessec4/faiblessec5
  bossatkc1 = 990/ faiblessec2* faiblessec3/faiblessec4/faiblessec5
  bossdefc1 = 880/ faiblessec2* faiblessec3/faiblessec4/faiblessec5
  bossdropxpc1 = 16000
  bossdropxpcc1 = 168
};
if(uetagec1 === 86) {

  bossnamec1 = "Slime Géant"
  bosspvc1 = 41000/faiblessec4*faiblessec5
  bossatkc1 = 1000/faiblessec4*faiblessec5
  bossdefc1 = 900/faiblessec4*faiblessec5
  bossdropxpc1 = 17000
  bossdropxpcc1 = 170
};
if(uetagec1 === 87) {

  bossnamec1 = "Guerrier Lizard"
  bosspvc1 = 43000 / faiblessec1* faiblessec3*faiblessec5
  bossatkc1 = 900/ faiblessec1* faiblessec3*faiblessec5
  bossdefc1 = 900/ faiblessec1* faiblessec3*faiblessec5
  bossdropxpc1 = 18000
  bossdropxpcc1 = 172
};
if(uetagec1 === 88) {

  bossnamec1 = "Roi Lizard"
  bosspvc1 = 50000 * faiblessec3*faiblessec5
  bossatkc1 = 1000* faiblessec3*faiblessec5
  bossdefc1 = 1000* faiblessec3*faiblessec5
  bossdropxpc1 = 25000
  bossdropxpcc1 = 175
};
if(uetagec1 === 89) {

  bossnamec1 = "Aigle Ténébreux"
  bosspvc1 = 45000* faiblessec2/faiblessec3*faiblessec4/faiblessec5
  bossatkc1 = 1100* faiblessec2/faiblessec3*faiblessec4/faiblessec5
  bossdefc1 = 980* faiblessec2/faiblessec3*faiblessec4/faiblessec5
  bossdropxpc1 = 26000
  bossdropxpcc1 = 178
};
if(uetagec1 === 90) {

  bossnamec1 = "Méduse Enragée"
  bosspvc1 = 36000/faiblessec3*faiblessec4/faiblessec5
  bossatkc1 = 1500/faiblessec3*faiblessec4/faiblessec5
  bossdefc1 = 880/faiblessec3*faiblessec4/faiblessec5
  bossdropxpc1 = 27000
  bossdropxpcc1 = 180
};
if(uetagec1 === 91) {

  bossnamec1 = "Succube"
  bosspvc1 = 44000/ faiblessec2/faiblessec4*faiblessec5
  bossatkc1 = 1105/ faiblessec2/faiblessec4*faiblessec5
  bossdefc1 = 985/ faiblessec2/faiblessec4*faiblessec5
  bossdropxpc1 = 29000
  bossdropxpcc1 = 182
};
if(uetagec1 === 92) {

  bossnamec1 = "Tireur d'Elite"
  bosspvc1 = 25000* faiblessec1 /faiblessec3*faiblessec4*faiblessec5
  bossatkc1 = 2500* faiblessec1/faiblessec3*faiblessec4*faiblessec5
  bossdefc1 = 750* faiblessec1/faiblessec3*faiblessec4*faiblessec5
  bossdropxpc1 = 31000
  bossdropxpcc1 = 184
};
if(uetagec1 === 93) {

  bossnamec1 = "Gnome"
  bosspvc1 = 50000
  bossatkc1 = 1050
  bossdefc1 = 1050
  bossdropxpc1 = 35000
  bossdropxpcc1 = 185
};
if(uetagec1 === 93) {

  bossnamec1 = "Cyclope"
  bosspvc1 = 55000/ faiblessec3
  bossatkc1 = 1150/ faiblessec3
  bossdefc1 = 1150/ faiblessec3
  bossdropxpc1 = 40000
  bossdropxpcc1 = 186
};
if(uetagec1 === 94) {

  bossnamec1 = "Scorpion-Mutant"
  bosspvc1 = 50000*faiblessec3*faiblessec4*faiblessec5
  bossatkc1 = 1200*faiblessec3*faiblessec4*faiblessec5
  bossdefc1 = 1160*faiblessec3*faiblessec4*faiblessec5
  bossdropxpc1 = 43000
  bossdropxpcc1 = 188
};
if(uetagec1 === 95) {

  bossnamec1 = "Tarentule Obscure"
  bosspvc1 = 75000* faiblessec2 *faiblessec3*faiblessec4/faiblessec5
  bossatkc1 = 1300* faiblessec2 * faiblessec3*faiblessec4/faiblessec5
  bossdefc1 = 800* faiblessec2 * faiblessec3*faiblessec4/faiblessec5
  bossdropxpc1 = 46000
  bossdropxpcc1 = 189
};
if(uetagec1 === 96) {

  bossnamec1 = "Gargouille"
  bosspvc1 = 68000/ faiblessec3*faiblessec4/faiblessec5
  bossatkc1 = 1200/ faiblessec3*faiblessec4/faiblessec5
  bossdefc1 = 1200/ faiblessec3*faiblessec4/faiblessec5
  bossdropxpc1 = 50000
  bossdropxpcc1 = 190
};
if(uetagec1 === 97) {

  bossnamec1 = "Vaudou"
  bosspvc1 = 50000* faiblessec1*faiblessec4/faiblessec5
  bossatkc1 = 1300 * faiblessec1*faiblessec4/faiblessec5
  bossdefc1 = 1250* faiblessec1*faiblessec4/faiblessec5
  bossdropxpc1 = 50000
  bossdropxpcc1 = 192
};
if(uetagec1 === 98) {

  bossnamec1 = "Roi Liche"
  bosspvc1 = 75000/ faiblessec2*faiblessec4/faiblessec5
  bossatkc1 = 1500/  faiblessec2*faiblessec4/faiblessec5
  bossdefc1 = 1450/ faiblessec2*faiblessec4/faiblessec5
  bossdropxpc1 = 60000
  bossdropxpcc1 = 194
};
if(uetagec1 === 99) {

  bossnamec1 = "Dernier Invocateur"
  bosspvc1 = 99999*faiblessec4
  bossatkc1 = 2222*faiblessec4
  bossdefc1 = 2222*faiblessec4
  bossdropxpc1 = 99999
  bossdropxpcc1 = 999
};
if(uetage === 0) {

   bossname = "Petit Rat"
   bosspv = 3
   bossatk = 1.5
   bossdef = 1.5
   bossdropor = 0.02
   bossdropxp = 3
   };
   
   if(uetage === 1) {
   bossname = "Gobelin"
   bosspv = 5
   bossatk = 1.7
   bossdef = 2
   bossdropor = 0.03
   bossdropxp = 5
   };
   if(uetage === 2) {
   bossname = "Gobelin à lance"
   bosspv = 7
   bossatk = 1.8
   bossdef = 1.9
   bossdropor = 0.05
   bossdropxp = 8
 
   };
   if(uetage === 3) {
   bossname = "Mage Gobelin"
   bosspv = 12
   bossatk = 2
   bossdef = 1.4
   bossdropor = 0.10
   bossdropxp = 12
   };
   if(uetage === 4) {
   bossname = "Gobelin géant"
   bosspv = 15
   bossatk = 1.8
   bossdef = 1.3
   bossdropor = 0.15
   bossdropxp = 25
   };
   if(uetage === 5) {
   bossname = "Rat"
   bosspv = 8
   bossatk = 1.8
   bossdef = 1.6
   bossdropor = 0.18
   bossdropxp = 18
   };
   if(uetage === 6) {
   bossname = "Spectre"
   bosspv = 15
   bossatk = 1.8
   bossdef = 1.8
   bossdropor = 0
   bossdropxp = 10
   };
   if(uetage === 7) {
   bossname = "Squelette"
   bosspv = 13
   bossatk = 2
   bossdef = 1.4
   bossdropor = 0.12
   bossdropxp = 16
   };
   if(uetage === 8) {
   bossname = "Zombie"
   bosspv = 17
   bossatk = 2
   bossdef = 1.5
   bossdropor = 0.16
   bossdropxp = 20
   };
   if(uetage === 9) {
   bossname = "Vampire"
   bosspv = 28
   bossatk = 3.5
   bossdef = 2.2
   bossdropor = 0.35
   bossdropxp = 35
   };
   if(uetage === 10) {
   bossname = "Chauve-souris"
   bosspv = 21
   bossatk = 2.1
   bossdef = 2.3
   bossdropor = 0.28
   bossdropxp = 40
   };
   if(uetage === 11) {
   bossname = "Poupée vaudou"
   bosspv = 35
   bossatk = 4
   bossdef = 3
   bossdropor = 0
   bossdropxp = 50
   };
   if(uetage === 12) {
   bossname = "Monstre inconnu"
   bosspv = 1
   bossatk = 10
   bossdef = 10
   bossdropor = 0.1
   bossdropxp = 1
   };
   if(uetage === 13) {
   bossname = "Loup"
   bosspv = 38
   bossatk = 10
   bossdef = 2.5
   bossdropor = 0.50
   bossdropxp = 60
   };
   if(uetage === 14) {
   bossname = "Ankou"
   bosspv = 55
   bossatk = 15
   bossdef = 8
   bossdropor = 1
   bossdropxp = 100
   };
   if(uetage === 15) {
   bossname = "Plante Carnivore"
   bosspv = 32
   bossatk = 18
   bossdef = 1.6
   bossdropor = 0.5
   bossdropxp = 105
   };
   if(uetage === 16) {
   bossname = "Armure sans corps"
   bosspv = 60
   bossatk = 1.8
   bossdef = 35
   bossdropor = 0.7
   bossdropxp = 120
   };
   
   if(uetage === 17) {
   bossname = "Rat géant"
   bosspv = 55
   bossatk = 12
   bossdef = 10
   bossdropor = 0.65
   bossdropxp = 132
   };
   if(uetage === 18) {
   bossname = "Roi Gobelin"
   bosspv = 75
   bossatk = 20
   bossdef = 15
   bossdropor = 1.5
   bossdropxp = 150
   };
   if(uetage === 19) {
   bossname = "Dracula"
   bosspv = 100
   bossatk = 20
   bossdef = 20
   bossdropor = 1.5
   bossdropxp = 200
   };
   if(uetage === 20) {
   bossname = "Yéti"
   bosspv = 120
   bossatk = 15
   bossdef = 20
   bossdropor = 2
   bossdropxp = 220
   };
   
   if(uetage === 21) {
   bossname = "Hydre"
   bosspv = 130
   bossatk = 5
   bossdef = 25
   bossdropor = 3
   bossdropxp = 250
   };
   if(uetage === 22) {
   bossname = "Chien de garde"
   bosspv = 75
   bossatk = 20.5
   bossdef = 20.5
   bossdropor = 1
   bossdropxp = 100
   };
   if(uetage === 23) {
   bossname = "Chasseur"
   bosspv = 90
   bossatk = 30
   bossdef = 5
   bossdropor = 1.5
   bossdropxp = 200
   };
   if(uetage === 24) {
   bossname = "Loup-Garou"
   bosspv = 200
   bossatk = 25
   bossdef = 25
   bossdropor = 2
   bossdropxp = 500
   };
   if(uetage === 25) {
   bossname = "Sorcière"
   bosspv = 220
   bossatk = 15
   bossdef = 23
   bossdropor = 1.6
   bossdropxp = 450
   };
   if(uetage === 26) {
   bossname = "Sorcier"
   bosspv = 225
   bossatk = 17
   bossdef = 21
   bossdropor = 1.7
   bossdropxp = 470
   };
   let nb6 = 0
   let pepic6 = ""

  if(uitem6 === 0 && uetage === 27) {
    pepic6 = "\n<:pistolet6:597399431716798474> En tuant le boss, tu obtiens un Pistolet !\n**Rareté de l'arme** = Commune"
    nb6 = 1   
  }
  let uepic6 = 0;
   if(uetage === 27) {
   bossname = "Brigand"
   bosspv = 150
   bossatk = 15
   bossdef = 15
   bossdropor = 10
   bossdropxp = 500
   };
    if(uetage === 28) {
   bossname = "Poisson-Loup"
   bosspv = 180
   bossatk = 25
   bossdef = 10
   bossdropor = 1
   bossdropxp = 400
   };
   let uepic12 = 0
   let nb12 = 0
   let pepic12 = ""

  if(uitem12 === 0 && uetage === 29) {
   pepic12 = "\n<:bronzesword12:597399003016986634> En tuant le boss, tu obtiens une Epée en Bronze !\n**Rareté de l'arme** = Rare"
   nb12 = 1
  }
  
   if(uetage === 29) {
   bossname = "Goblin Slayer"
   bosspv = 350
   bossatk = 35
   bossdef = 28
   bossdropor = 3
   bossdropxp = 1000

   };
   if(uetage === 30) {
   bossname = "Chevalier banal"
   bosspv = 320
   bossatk = 25
   bossdef = 40
   bossdropor = 2.5
   bossdropxp = 800
   };



   if(uetage2 === 0) {
   bossname2 = "Chevalier Obscur"
   bosspv2 = 380
   bossatk2 = 35
   bossdef2 = 32
   bossdropor2 = 7
   bossdropxp2 = 777
   };
   if(uetage2 === 1) {
   bossname2 = "Faux Fantôme"
   bosspv2 = 222
   bossatk2 = 26
   bossdef2 = 26
   bossdropor2 = 1
   bossdropxp2 = 600
   };
   if(uetage2 === 2) {
   bossname2 = "Druide fou"
   bosspv2 = 330
   bossatk2 = 33
   bossdef2 = 33
   bossdropor2 = 2
   bossdropxp2 = 650
   };
   if(uetage2 === 3) {
   bossname2 = "Squelette démoniaque"
   bosspv2 = 421
   bossatk2 = 37
   bossdef2 = 32
   bossdropor2 = 5
   bossdropxp2 = 666
   };
   if(uetage2 === 4) {
   bossname2 = "Zombie démoniaque"
   bosspv2 = 425
   bossatk2 = 35
   bossdef2 = 32
   bossdropor2 = 5.5
   bossdropxp2 = 667
   };
   if(uetage2 === 5) {
   bossname2 = "Petit démon"
   bosspv2 = 455
   bossatk2 = 33
   bossdef2 = 32
   bossdropor2 = 5.6
   bossdropxp2 = 668
   };
   if(uetage2 === 6) {
   bossname2 = "Démon"
   bosspv2 = 500
   bossatk2 = 40
   bossdef2 = 40
   bossdropor2 = 3
   bossdropxp2 = 700
   };
   if(uetage2 === 7) {
   bossname2 = "Démon démoniaque"
   bosspv2 = 550
   bossatk2 = 43
   bossdef2 = 42
   bossdropor2 = 4
   bossdropxp2 = 750
   };
   if(uetage2 === 8) {
   bossname2 = "Démon géant"
   bosspv2 = 700
   bossatk2 = 50
   bossdef2 = 50
   bossdropor2 = 8
   bossdropxp2 = 2000
   };
   let uepic20 = 0
   let nb20 = 0
   let pepic20 = ""

   if(uitem20 === 0 && uetage2 === 9) {
    nb20 = 1
    pepic20 = "\n<:sword20:597400340513423405> En tuant le boss, tu obtiens l'Epée Argentée !\n**Rareté de l'arme** = Epique"
  }
   if(uetage2 === 9) {
   bossname2 = "Ogre"
   bosspv2 = 700
   bossatk2 = 48
   bossdef2 = 46
   bossdropor2 = 9
   bossdropxp2 = 2500

   };
   
   if(uetage2 === 10) {
   bossname2 = "Troll des montagnes"
   bosspv2 = 750
   bossatk2 = 49
   bossdef2 = 47
   bossdropor2 = 10
   bossdropxp2 = 2700
   };
   if(uetage2 === 11) {
   bossname2 = "Titan"
   bosspv2 = 1500
   bossatk2 = 1
   bossdef2 = 70
   bossdropor2 = 16
   bossdropxp2 = 3200
   };
   if(uetage2 === 12) {
   bossname2 = "Monstre de magma"
   bosspv2 = 500
   bossatk2 = 70
   bossdef2 = 60
   bossdropor2 = 10
   bossdropxp2 = 3400
   };
   if(uetage2 === 13) {
   bossname2 = "Cerbère"
   bosspv2 = 1300
   bossatk2 = 65
   bossdef2 = 60
   bossdropor2 = 22
   bossdropxp2 = 5000
   };
   if(uetage2 === 14) {
   bossname2 = "Le Colosse"
   bosspv2 = 1200
   bossatk2 = 55
   bossdef2 = 65
   bossdropor2 = 11
   bossdropxp2 = 6000
   };
   if(uetage2 === 15) {
   bossname2 = "Statue d'or et de lave vivante"
   bosspv2 = 700
   bossatk2 = 67
   bossdef2 = 66
   bossdropor2 = 50
   bossdropxp2 = 6500
   };
   if(uetage2 === 16) {
   bossname2 = "Diablotin"
   bosspv2 = 450
   bossatk2 = 95
   bossdef2 = 80
   bossdropor2 = 22
   bossdropxp2 = 7500
   };
   if(uetage2 === 17) {
   bossname2 = "Le Diable"
   bosspv2 = 2000
   bossatk2 = 85
   bossdef2 = 85
   bossdropor2 = 40
   bossdropxp2 = 10000
   };
   if(uetage2 === 18) {
   bossname2 = "Hadès"
   bosspv2 = 2800
   bossatk2 = 100
   bossdef2 = 100
   bossdropor2 = 50
   bossdropxp2 = 20000
   };


   if(uetage3 === 0) {
    bossname3 = "Poisson rouge"
    bosspv3 = 6000
    bossatk3 = 10
    bossdef3 = 10
    bossdropor3 = 5
    bossdropxp3 = 3000
    };
   if(uetage3 === 1) {
   bossname3 = "Serpent de Mer"
   bosspv3 = 500
   bossatk3 = 75
   bossdef3 = 60
   bossdropor3 = 5
   bossdropxp3 = 8000
   };
   if(uetage3 === 2) {
   bossname3 = "Baleine géante"
   bosspv3 = 5000
   bossatk3 = 10
   bossdef3 = 5
   bossdropor3 = 8
   bossdropxp3 = 8000
   };
   if(uetage3 === 3) {
   bossname3 = "Requin affamé"
   bosspv3 = 1000
   bossatk3 = 100
   bossdef3 = 70
   bossdropor3 = 12
   bossdropxp3 = 10000
   };
   if(uetage3 === 4) {
   bossname3 = "Charybde"
   bosspv3 = 2000
   bossatk3 = 120
   bossdef3 = 60
   bossdropor3 = 12
   bossdropxp3 = 15000
   };
   if(uetage3 === 5) {
   bossname3 = "Scylla"
   bosspv3 = 2100
   bossatk3 = 120
   bossdef3 = 60
   bossdropor3 = 12
   bossdropxp3 = 15000
   };
   if(uetage3 === 6) {
   bossname3 = "Pieuvre"
   bosspv3 = 1400
   bossatk3 = 80
   bossdef3 = 80
   bossdropor3 = 4
   bossdropxp3 = 8000
   };
   if(uetage3 === 7) {
   bossname3 = "Kraken"
   bosspv3 = 3500
   bossatk3 = 90
   bossdef3 = 50
   bossdropor3 = 10
   bossdropxp3 = 12000
   };
   if(uetage3 === 8) {
   bossname3 = "Sirène"
   bosspv3 = 1700
   bossatk3 = 140
   bossdef3 = 40
   bossdropor3 = 10
   bossdropxp3 = 13000
   };
   if(uetage3 === 9) {
   bossname3 = "Triton"
   bosspv3 = 3000
   bossatk3 = 110
   bossdef3 = 90
   bossdropor3 = 20
   bossdropxp3 = 25000
   };
   if(uetage3 === 10) {
   bossname3 = "Namazu"
   bosspv3 =  9000
   bossatk3 = 5
   bossdef3 = 100
   bossdropor3 = 20
   bossdropxp3 = 30000
   };
   if(uetage3 === 11) {
   bossname3 = "Poséidon"
   bosspv3 = 4000
   bossatk3 = 150
   bossdef3 = 130
   bossdropor3 = 20
   bossdropxp3 = 40000
   };
   if(uetage3 === 12) {
   bossname3 = "Arès"
   bosspv3 = 1500
   bossatk3 = 200
   bossdef3 = 125
   bossdropor3 = 20
   bossdropxp3 = 45000
   };
   if(uetage3 === 13) {
   bossname3 = "Artémis"
   bosspv3 = 6500
   bossatk3 = 135
   bossdef3 = 150
   bossdropor3 = 25
   bossdropxp3 = 50000
   };
   if(uetage3 === 14) {
   bossname3 = "Héra"
   bosspv3 = 7200
   bossatk3 = 150
   bossdef3 = 140
   bossdropor3 = 25
   bossdropxp3 = 30000
   };
   if(uetage3 === 15) {
   bossname3 = "Aphrodite"
   bosspv3 = 7900
   bossatk3 = 160
   bossdef3 = 143
   bossdropor3 = 25
   bossdropxp3 = 43000
   };
   if(uetage3 === 16) {
   bossname3 = "Zeus"
   bosspv3 = 9500
   bossatk3 = 160
   bossdef3 = 150
   bossdropor3 = 100
   bossdropxp3 = 50000
   };

   if(uetage4 === 0) {
   bossname4 = "Appolon"
   bosspv4 = 7000
   bossatk4 = 170
   bossdef4 = 150
   bossdropor4 = 20
   bossdropxp4 = 53000
   };
   if(uetage4 === 1) {
   bossname4 = "Gaïa"
   bosspv4 = 4000
   bossatk4 = 200
   bossdef4 = 140
   bossdropor4 = 20
   bossdropxp4 = 53009
   };
   if(uetage4 === 2) {
   bossname4 = "Héphaistos"
   bosspv4 = 6000
   bossatk4 = 190
   bossdef4 = 165
   bossdropor4 = 20
   bossdropxp4 = 54000
   };
   if(uetage4 === 3) {
   bossname4 = "Hestia"
   bosspv4 = 7000
   bossatk4 = 200
   bossdef4 = 170
   bossdropor4 = 20
   bossdropxp4 = 55000
   };
   if(uetage4 === 4) {
   bossname4 = "Héraclès"
   bosspv4 = 7500
   bossatk4 = 210
   bossdef4 = 180
   bossdropor4 = 20
   bossdropxp4 = 56000
   };
   if(uetage4 === 5) {
   bossname4 = "Déméter"
   bosspv4 = 8000
   bossatk4 = 212
   bossdef4 = 180
   bossdropor4 = 20
   bossdropxp4 = 58000
   };
   if(uetage4 === 6) {
   bossname4 = "Hélios"
   bosspv4 = 8800
   bossatk4 = 220
   bossdef4 = 200
   bossdropor4 = 20
   bossdropxp4 = 59000
   };
   if(uetage4 === 7) {
   bossname4 = "Dionysos"
   bosspv4 = 9000
   bossatk4 = 230
   bossdef4 = 210
   bossdropor4 = 25
   bossdropxp4 = 60000
   };
   if(uetage4 === 8) {
   bossname4 = "Chronos"
   bosspv4 = 9999
   bossatk4 = 220
   bossdef4 = 220
   bossdropor4 = 25
   bossdropxp4 = 61000
   };
   if(uetage4 === 9) {
   bossname4 = "Chaos"
   bosspv4 = 9999
   bossatk4 = 250
   bossdef4 = 250
   bossdropor4 = 28
   bossdropxp4 = 60000
   };
   if(uetage4 === 10) {
    bossname4 = "Golem Doré"
    bosspv4 = 10000
    bossatk4 = 5
    bossdef4 = 500
    bossdropor4 = 50
    bossdropxp4 = 50000
    };
    if(uetage4 === 11) {
    bossname4 = "Minotaure"
    bosspv4 = 8000
    bossatk4 = 300
    bossdef4 = 250
    bossdropor4 = 25
    bossdropxp4 = 55000
    };
    if(uetage4 === 12) {
    bossname4 = "Dragon banal"
    bosspv4 = 7500
    bossatk4 = 285
    bossdef4 = 275
    bossdropor4 = 25
    bossdropxp4 = 50000
    };
    if(uetage4 === 13) {
    bossname4 = "Dragon Obscur"
    bosspv4 = 10000
    bossatk4 = 300
    bossdef4 = 300
    bossdropor4 = 35
    bossdropxp4 = 60000
    };
    if(uetage4 === 14) {
    bossname4 = "???"
    bosspv4 = 20000
    bossatk4 = 15
    bossdef4 = 100
    bossdropor4 = 10
    bossdropxp4 = 10000
    };
    if(uetage4 === 15) {
    bossname4 = "Saitama"
    bosspv4 = 10000
    bossatk4 = 500
    bossdef4 = 450
    bossdropor4 = 30
    bossdropxp4 = 100000
    };
    if(uetage4 === 16) {
    bossname4 = "Bandit"
    bosspv4 = 3500
    bossatk4 = 550
    bossdef4 = 400
    bossdropor4 = 100
    bossdropxp4 = 50000
    };
    let uepic29 = 0
    let nb29 = 0
    let pepic29 = ""

    if(uitem29 === 0 && uetage4 === 17) {
      nb29 = 1
      pepic29 = "\n<:lostvayne29:597399362892595211> En tuant le boss, tu obtiens Lostvayne !\n**Rareté de l'arme** = Epique"
     }
    if(uetage4 === 17) {
    bossname4 = "Méliodas"
    bosspv4 = 2000
    bossatk4 = 1000
    bossdef4 = 450
    bossdropor4 = 125
    bossdropxp4 = 120000

    };

    let uepic23 = 0

   let uepic27 = 0
  let nb23 = 0
  let pepic23 = ""

  if(uitem23 === 0 && uetage5 === 0 && udonjonunlock5 != 0) {
    pepic23 = "\n<:scissorbladered23:597399519252185088> En tuant le boss, tu obtiens le Scissor Blade Rouge !\n**Rareté de l'arme** = Epique"
    nb23 = 1
  }
   if(uetage5 === 0) {
    bossname5 = "Ryûko"
    bosspv5 = 10000
    bossatk5 = 700
    bossdef5 = 350
    bossdropor5 = 35
    bossdropxp5 = 60000

    };
    let uepic39 = 0
    let nb39 = 0
    let pepic39 = ""
  
    if(uitem39 === 0 && uetage5 === 1) {
      pepic39 = "\n<:Sharingan39:597752389294096395> En tuant le boss, tu obtiens un Sharingan !\n**Rareté de l'arme** = Légendaire"
      nb39 = 1
    }
 if(uetage5 === 1) {
    bossname5 = "Itachi"
    bosspv5 = 15000
    bossatk5 = 900
    bossdef5 = 350
    bossdropor5 = 60
    bossdropxp5 = 99000

    };
    if(uetage5 === 2) {
    bossname5 = "EnderDragon"
    bosspv5 = 3000
    bossatk5 = 1500
    bossdef5 = 1200
    bossdropor5 = 65
    bossdropxp5 = 250000
    };
    if(uetage5 === 3) {
    bossname5 = "GLaDOS"
    bosspv5 = 410
    bossatk5 = 410
    bossdef5 = 410
    bossdropor5 = 410
    bossdropxp5 = 410
    };
    if(uetage5 === 4) {
    bossname5 = "Gardien"
    bosspv5 = 10000
    bossatk5 = 650
    bossdef5 = 1200
    bossdropor5 = 0
    bossdropxp5 = 40000
    };
     if(uetage5 === 5) {
    bossname5 = "Loup Obscur"
    bosspv5 = 5000
    bossatk5 = 1500
    bossdef5 = 1000
    bossdropor5 = 0
    bossdropxp5 = 75000
    };
    let nb27 = 0
    let pepic27 = ""

    if(uitem27 === 0 && uetage5 === 6) {
      pepic27 = "\n<:Elucidator27:597399150744698921> En tuant le boss, tu obtiens l'Epée Elucidator !\n**Rareté de l'arme** = Epique"
      nb27 = 1
    }
    if(uetage5 === 6) {
    bossname5 = "Kirito"
    bosspv5 = 35000
    bossatk5 = 700
    bossdef5 = 600
    bossdropor5 = 100
    bossdropxp5 = 60000

    };
    if(uetage5 === 7) {
    bossname5 = "Dragon de glace"
    bosspv5 = 50000
    bossatk5 = 100
    bossdef5 = 900
    bossdropor5 = 85
    bossdropxp5 = 70000
    };
    let nb26 = 0
    let pepic26 = ""
    let uepic26 = 0

    if(uitem26 === 0 && uetage5 === 8) {
      pepic26 = "\n<:Murasame26:597399385277595659> En tuant le boss, tu obtiens l'Epée Murasame !\n**Rareté de l'arme** = Epique"
      nb26 = 1
    }
    if(uetage5 === 8) {
    bossname5 = "Akame"
    bosspv5 = 30000
    bossatk5 = 1200
    bossdef5 = 999
    bossdropor5 = 50
    bossdropxp5 = 99999

    };
    if(uetage5 === 9) {
    bossname5 = "Zombie infecté"
    bosspv5 = 99999
    bossatk5 = 999
    bossdef5 = 999
    bossdropor5 = 5
    bossdropxp5 = 99999
    };
    if(uetage5 === 10) {
    bossname5 = "Squelette infecté"
    bosspv5 = 50000
    bossatk5 = 2600
    bossdef5 = 1800
    bossdropor5 = 10
    bossdropxp5 = 100000
    };
    let uepic28 = 0
    let nb28 = 0
    let pepic28 = ""
 
    if(uitem28 === 0 && uetage5 === 11) {
      pepic28 = "\n<:Bouclier28:597365465156812830> En tuant le boss, tu obtiens le Bouclier de Captain América !\n**Rareté de l'arme** = Epique"
      nb28 = 1
    }
    if(uetage5 === 11) {
      bossname5 = "Le Captain"
      bosspv5 = 60000
      bossatk5 = 900
      bossdef5 = 1200
      bossdropor5 = 200
      bossdropxp5 = 200000


      };
let petnameinv2 = ""
if(upetselect === 1) {
  petatkboosted = pet1atk
  petdefboosted = pet1def
  petpvboosted = pet1pv
  petnameinv = `${pet1emote} ${pet1name} ${emotestar1}`
  desceffet1 = `**Daily:** +${Math.trunc((pet1effect1 -1)* 100)}% ${xp1emote}`
  petnameinv2= `${pet1emote}`
}
if(upetselect === 2) {
  petatkboosted = pet2atk
  petdefboosted = pet2def
  petpvboosted = pet2pv
  petnameinv = `${pet2emote} ${pet2name} ${emotestar2}`
  desceffet1 = `**Daily:** +${Math.trunc((pet2effect1 -1)* 100)}% ${dailyemote}`
  petnameinv2= `${pet2emote}`

}
if(upetselect === 3) {
  petatkboosted = pet3atk
  petdefboosted = pet3def
  petpvboosted = pet3pv
  petnameinv = `${pet3emote} ${pet3name} ${emotestar3}`
  desceffet1 = `**Donjons:** +${Math.trunc((pet3effect1 -1))* 100}% ${xp1emote}`
  petnameinv2= `${pet3emote}`

}
if(upetselect === 4) {
  petatkboosted = pet4atk
  petdefboosted = pet4def
  petpvboosted = pet4pv
  petnameinv = `${pet4emote} ${pet4name} ${emotestar4}`
  desceffet1 = `**Donjons:** +${Math.trunc((pet4effect1 -1)* 100)}% ${POemote}`
  petnameinv2= `${pet4emote}`

}
if(upetselect === 5) {
  petatkboosted = pet5atk
  petdefboosted = pet5def
  petpvboosted = pet5pv
  petnameinv = `${pet5emote} ${pet5name} ${emotestar5}`
  desceffet1 = `**Collecte:** +${Math.trunc((pet5effect1 -1)* 100)}% Ressources naturelles`
  petnameinv2= `${pet5emote}`

}
if(upetselect === 6) {
  petatkboosted = pet6atk
  petdefboosted = pet6def
  petpvboosted = pet6pv
  petnameinv = `${pet6emote} ${pet6name} ${emotestar6}`
  desceffet1 = `**Collecte:** +${Math.trunc((pet6effect1 -1)* 100)}% ${emotePN}`
  petnameinv2= `${pet6emote}`

}
if(upetselect === 7) {
  petatkboosted = pet7atk
  petdefboosted = pet7def
  petpvboosted = pet7pv
  petnameinv = `${pet7emote} ${pet7name} ${emotestar7}`
  desceffet1 = `**Collecte:** +${Math.trunc((pet7effect1 -1)* 100)}% ${emotegwood}`
  petnameinv2= `${pet7emote}`

}
if(upetselect === 8) {
  petatkboosted = pet8atk
  petdefboosted = pet8def
  petpvboosted = pet8pv
  petnameinv = `${pet8emote} ${pet8name} ${emotestar8}`
  desceffet1 = `${boxcommonemote}**Box commune:** +${Math.trunc((pet8effect1 -1)* 100)}% ${xp1emote} & ${POemote}`
  petnameinv2= `${pet8emote}`

}
if(upetselect === 9) {
  petatkboosted = pet9atk
  petdefboosted = pet9def
  petpvboosted = pet9pv
  petnameinv = `${pet9emote} ${pet9name} ${emotestar9}`
  desceffet1 = `**Collecte:** +${Math.trunc((pet9effect1 -1)* 100)}% Ressources naturelles`
  petnameinv2= `${pet9emote}`

}
if(upetselect === 10) {
  petatkboosted = pet10atk
  petdefboosted = pet10def
  petpvboosted = pet10pv
  petnameinv = `${pet10emote} ${pet10name} ${emotestar10}`
  desceffet1 = `**Armes spéciales:** +${Math.trunc((pet10effect1 -1)* 100)}% PV/ATK/DEF`
  petnameinv2= `${pet10emote}`

}
if(upetselect === 11) {
  petatkboosted = pet11atk
  petdefboosted = pet11def
  petpvboosted = pet11pv
  petnameinv = `${pet11emote} ${pet11name} ${emotestar11}`
  desceffet1 = `**Collecte:** +${Math.trunc((pet11effect1 -1)* 100)}% ${emotepierre}`
  petnameinv2= `${pet11emote}`

}
if(upetselect === 12) {
  petatkboosted = pet12atk
  petdefboosted = pet12def
  petpvboosted = pet12pv
  petnameinv = `${pet12emote} ${pet12name} ${emotestar12}`
  desceffet1 = `**Statistiques:** +${Math.trunc((pet12effect1 -1)* 100)}% ATK`
  petnameinv2= `${pet12emote}`

}
if(upetselect === 13) {
  petatkboosted = pet13atk
  petdefboosted = pet13def
  petpvboosted = pet13pv
  petnameinv = `${pet13emote} ${pet13name} ${emotestar13}`
  desceffet1 = `**Statistiques:** +${Math.trunc((pet13effect1 -1)* 100)}% PV`
  petnameinv2= `${pet13emote}`

}
if(upetselect === 14) {
  petatkboosted = pet14atk
  petdefboosted = pet14def
  petpvboosted = pet14pv
  petnameinv = `${pet14emote} ${pet14name} ${emotestar14}`
  desceffet1 = `**Collecte:** +${Math.trunc((pet14effect1 -1)* 100)}% Ressources naturelles`
  desceffet2 = `**Donjons:** +${Math.trunc((pet14effect2 -1)* 100)}% ${xp1emote}`
  petnameinv2= `${pet14emote}`

}
if(upetselect === 15) {
  petatkboosted = pet15atk
  petdefboosted = pet15def
  petpvboosted = pet15pv
  petnameinv = `${pet15emote} ${pet15name} ${emotestar15}`
  desceffet1 = `**Statistiques:** +${Math.trunc((pet15effect1 -1)* 100)}% PV`
  petnameinv2= `${pet15emote}`

}
if(upetselect === 16) {
  petatkboosted = pet16atk
  petdefboosted = pet16def
  petpvboosted = pet16pv
  petnameinv = `${pet16emote} ${pet16name} ${emotestar16}`
  desceffet1 = `**Statistiques:** +${Math.trunc((pet16effect1 -1)* 100)}% PV/ATK/DEF`
  petnameinv2= `${pet16emote}`

}
if(upetselect === 41) {
  petatkboosted = pet41atk
  petdefboosted = pet41def
  petpvboosted = pet41pv
  petnameinv = `${pet41emote} ${pet41name} ${emotestar41}`
  desceffet1 = `**Collecte:** +${Math.trunc((pet41effect1 -1)* 100)}% ${emoteor}`
  petnameinv2= `${pet41emote}`

}
if(upetselect === 17) {
  petatkboosted = pet17atk
  petdefboosted = pet17def
  petpvboosted = pet17pv
  petnameinv = `${pet17emote} ${pet17name} ${emotestar17}`
  desceffet1 = `**Statistiques:** +${Math.trunc((pet17effect1 -1)* 100)}% PV`
  petnameinv2= `${pet17emote}`

}
if(upetselect === 18) {
  petatkboosted = pet18atk
  petdefboosted = pet18def
  petpvboosted = pet18pv
  petnameinv = `${pet18emote} ${pet18name} ${emotestar18}`
  desceffet1 = `**Statistiques:** +${Math.trunc((pet18effect1 -1)* 100)}% ATK`
  desceffet2 = `**Statistiques:** +${Math.trunc((pet18effect2 -1)* 100)}% DEF`
  desceffet3 = `**Collecte:** +${Math.trunc((pet18effect3 -1)* 100)}% ${emotePN}`
  petnameinv2= `${pet18emote}`

}
if(upetselect === 19) {
  petatkboosted = pet19atk
  petdefboosted = pet19def
  petpvboosted = pet19pv
  petnameinv = `${pet19emote} ${pet19name} ${emotestar19}`
  desceffet1 = `**Régénération:** ${Math.trunc((1+nivactuelclasse))}% PVs Max Regenerés après une défaite`
  petnameinv2= `${pet19emote}`

}
if(upetselect === 20) {
  petatkboosted = pet20atk
  petdefboosted = pet20def
  petpvboosted = pet20pv
  petnameinv = `${pet20emote} ${pet20name} ${emotestar20}`
  desceffet1 = `**Donjons:** +${Math.trunc((pet20effect1 -1)* 100)}% ${fragemote}`
  petnameinv2= `${pet20emote}`

}
if(upetselect === 21) {
  petatkboosted = pet21atk
  petdefboosted = pet21def
  petpvboosted = pet21pv
  petnameinv = `${pet21emote} ${pet21name} ${emotestar21}`
  desceffet1 = `**Boxs:** +${Math.trunc((pet21effect1 -1)* 100)}% ${xp1emote}`
  desceffet2 = `**Collecte:** +${Math.trunc((pet21effect2 -1)* 100)}% ${emotePN}`
  petnameinv2= `${pet21emote}`

}
if(upetselect === 22) {
  petatkboosted = pet22atk
  petdefboosted = pet22def
  petpvboosted = pet22pv
  petnameinv = `${pet22emote} ${pet22name} ${emotestar22}`
  desceffet1 = `**Statistiques:** +${Math.trunc((pet22effect1 -1)* 100)}% DEF`
  desceffet2 = `**Boxs:** +${Math.trunc((pet22effect2 -1)* 100)}% ${POemote}`
  petnameinv2= `${pet22emote}`

}
if(upetselect === 23) {
  petatkboosted = pet23atk
  petdefboosted = pet23def
  petpvboosted = pet23pv
  petnameinv = `${pet23emote} ${pet23name} ${emotestar23}`
  desceffet1 = `**RxCoins:** +${Math.trunc((pet23effect1 -1)* 100)}% ${RXemote}`
  petnameinv2= `${pet23emote}`


}
if(upetselect === 24) {
  petatkboosted = pet24atk
  petdefboosted = pet24def
  petpvboosted = pet24pv
  petnameinv = `${pet24emote} ${pet24name} ${emotestar24}`
  desceffet1 = `**Fragments:** +${Math.trunc((pet24effect1 -1)* 100)}% ${fragemote}`
  petnameinv2= `${pet24emote}`


}
if(upetselect === 42) {
  petatkboosted = pet42atk
  petdefboosted = pet42def
  petpvboosted = pet42pv
  petnameinv = `${pet42emote} ${pet42name} ${emotestar42}`
  desceffet1 = `**Collecte:** +${Math.trunc((pet42effect1 -1)* 100)}% ${emotePN}`
  petnameinv2= `${pet42emote}`


}
if(upetselect === 25) {
  petatkboosted = pet25atk
  petdefboosted = pet25def
  petpvboosted = pet25pv
  petnameinv = `${pet25emote} ${pet25name} ${emotestar25}`
  desceffet1 = `**Régénération:** ${Math.trunc((2.5+(2.5*nivactuelclasse)))}% PVs Max Regenerés après une défaite`
  petnameinv2= `${pet25emote}`

}
if(upetselect === 26) {
  petatkboosted = pet26atk
  petdefboosted = pet26def
  petpvboosted = pet26pv
  petnameinv = `${pet26emote} ${pet26name} ${emotestar26}`
  desceffet1 = `**Fish:** Temps entre chaque fish raccourci de ${Math.trunc((1-pet26effect1)* 100)}% `
  petnameinv2= `${pet26emote}`

}

if(upetselect === 27) {
  petatkboosted = pet27atk
  petdefboosted = pet27def
  petpvboosted = pet27pv
  petnameinv = `${pet27emote} ${pet27name} ${emotestar27}`
  desceffet1 = `**Statistiques:** +${Math.trunc((pet27effect1 -1)* 100)}% DEF`
  petnameinv2= `${pet27emote}`

}
if(upetselect === 28) {
  petatkboosted = pet28atk
  petdefboosted = pet28def
  petpvboosted = pet28pv
  petnameinv = `${pet28emote} ${pet28name} ${emotestar28}`
  desceffet1 = `**Statistiques:** +${Math.trunc((pet28effect1 -1)* 100)}% PV`
  desceffet2 = `**Pièces d'Or:** +${Math.trunc((pet28effect2 -1)* 100)}% ${POemote}`
  petnameinv2= `${pet28emote}`

}
if(upetselect === 29) {
  petatkboosted = pet29atk
  petdefboosted = pet29def
  petpvboosted = pet29pv
  petnameinv = `${pet29emote} ${pet29name} ${emotestar29}`
  desceffet1 = `**Statistiques:** +${Math.trunc((pet29effect1 -1)* 100)}% PV`
  desceffet2 = `**Expérience:** +${Math.trunc((pet29effect2 -1)* 100)}% ${xp1emote}`
  petnameinv2= `${pet29emote}`

}
if(upetselect === 30) {
  petatkboosted = pet30atk
  petdefboosted = pet30def
  petpvboosted = pet30pv
  petnameinv = `${pet30emote} ${pet30name} ${emotestar30}`
  desceffet1 = `**Statistiques:** +${Math.trunc((pet30effect1 -1)* 100)}% ATK`
  desceffet2 = `**Collecte:** +${Math.trunc((pet30effect2 -1)* 100)}% Ressources minières`
  petnameinv2= `${pet30emote}`

}
if(upetselect === 31) {
  petatkboosted = pet31atk
  petdefboosted = pet31def
  petpvboosted = pet31pv
  petnameinv = `${pet31emote} ${pet31name} ${emotestar31}`
  desceffet1 = `**Statistiques:** +${Math.trunc((pet31effect1 -1)* 100)}% PV/ATK/DEF`
  petnameinv2= `${pet31emote}`

}
if(upetselect === 32) {
  petatkboosted = pet32atk
  petdefboosted = pet32def
  petpvboosted = pet32pv
  petnameinv = `${pet32emote} ${pet32name} ${emotestar32}`
  desceffet1 = `**Fish:** Temps entre chaque fish raccourci de ${Math.trunc((1-pet32effect1)* 100)}% `
  desceffet2 = `**Statistiques:** +${Math.trunc((pet32effect2 -1)* 100)}% ATK`
  petnameinv2= `${pet32emote}`

}
if(upetselect === 33) {
  petatkboosted = pet33atk
  petdefboosted = pet33def
  petpvboosted = pet33pv
  petnameinv = `${pet33emote} ${pet33name} ${emotestar33}`
  desceffet1 = `**Daily:** +${Math.trunc((pet33effect1 -1)* 100)}% ${dailyemote} & XP`
  desceffet2 = `**Statistiques:** +${Math.trunc((pet33effect2 -1)* 100)}% PV`
  petnameinv2= `${pet33emote}`

}
if(upetselect === 34) {
  petatkboosted = pet34atk
  petdefboosted = pet34def
  petpvboosted = pet34pv
  petnameinv = `${pet34emote} ${pet34name} ${emotestar34}`
  desceffet1 = `**Statistiques:** +${Math.trunc((pet34effect1 -1)* 100)}% PV/DEF`
  petnameinv2= `${pet34emote}`

}
if(upetselect === 35) {
  petatkboosted = pet35atk
  petdefboosted = pet35def
  petpvboosted = pet35pv
  petnameinv = `${pet35emote} ${pet35name} ${emotestar35}`
  desceffet1 = `**Armes spéciales:** +${Math.trunc((pet35effect1 -1)* 100)}% PV/ATK/DEF`
  petnameinv2= `${pet35emote}`

}
if(upetselect === 36) {
  petatkboosted = pet36atk
  petdefboosted = pet36def
  petpvboosted = pet36pv
  petnameinv = `${pet36emote} ${pet36name} ${emotestar36}`
  desceffet1 = `**Statistiques:** +${Math.trunc((pet36effect1 -1)* 100)}% ATK/DEF`
  desceffet2 = `**Expérience:** +${Math.trunc((pet36effect2 -1)* 100)}% ${xp1emote}`
  petnameinv2= `${pet36emote}`

}
if(upetselect === 37) {
  petatkboosted = pet37atk
  petdefboosted = pet37def
  petpvboosted = pet37pv
  petnameinv = `${pet37emote} ${pet37name} ${emotestar37}`
  desceffet1 = `**Statistiques:** +${Math.trunc((pet37effect1 -1)* 100)}% ATK`
  desceffet2 = `**Collecte:** +${Math.trunc((pet37effect2 -1)* 100)}% Ressources naturelles & minières`
  petnameinv2= `${pet37emote}`

}
if(upetselect === 38) {
  petatkboosted = pet38atk
  petdefboosted = pet38def
  petpvboosted = pet38pv
  petnameinv = `${pet38emote} ${pet38name} ${emotestar38}`
  desceffet1 = `**Pièces:** +${Math.trunc((pet38effect1 -1)* 100)}% ${POemote}`
  desceffet2 = `**Fish:** Temps entre chaque fish raccourci de ${Math.trunc((1-pet38effect2)* 100)}% `
  petnameinv2= `${pet38emote}`

}
if(upetselect === 39) {
  petatkboosted = pet39atk
  petdefboosted = pet39def
  petpvboosted = pet39pv
  petnameinv = `${pet39emote} ${pet39name} ${emotestar39}`
  desceffet1 = `**Fragments:** +${Math.trunc((pet39effect1 -1)* 100)}% ${fragemote}`
  desceffet2 = `**Daily:** +${Math.trunc((pet39effect2 -1)* 100)}% ${xp1emote}`
  petnameinv2= `${pet39emote}`

}
if(upetselect === 40) {
  petatkboosted = pet40atk
  petdefboosted = pet40def
  petpvboosted = pet40pv
  petnameinv = `${pet40emote} ${pet40name} ${emotestar40}`
  desceffet1 = `**Régénération:** ${Math.trunc((5+(5*nivactuelclasse)))}% PVs Max Regenerés après une défaite`
  desceffet2 = `**Collecte:** +${Math.trunc((pet40effect2 -1)* 100)}% ${RXemote}`
  petnameinv2= `${pet40emote}`

}
      let bossatkmax = bossatk * nombremulti 
      let bossdefmax = bossdef * nombremulti 
      let bosspvmax = bosspv * nombremulti 

      let bossatkmax2 = bossatk2 * nombremulti2 
      let bossdefmax2 = bossdef2 * nombremulti2 
      let bosspvmax2 = bosspv2 * nombremulti2 

      let bossatkmax3 = bossatk3 * nombremulti3 
      let bossdefmax3 = bossdef3 * nombremulti3 
      let bosspvmax3 = bosspv3 * nombremulti3 

      let bossatkmax4 = bossatk4 * nombremulti4 
      let bossdefmax4 = bossdef4 * nombremulti4 
      let bosspvmax4 = bosspv4 * nombremulti4 

      let bossatkmax5 = bossatk5 * nombremulti5 
      let bossdefmax5 = bossdef5 * nombremulti5 
      let bosspvmax5 = bosspv5 * nombremulti5 

     let bossatkmaxc1 = bossatkc1
     let bossdefmaxc1 = bossdefc1
     let bosspvmaxc1 = bosspvc1

  let attaqueplayerminc1 = ((PMaxAtk+ petatkboosted)/2)/(bossdefmaxc1/3)
  let attaqueplayermaxc1 = (((PMaxAtk+ petatkboosted)/2)/(bossdefmaxc1/3)) *1.5

  let attaquebossminc1 = (bossatkmaxc1/(((PMaxDef+petdefboosted)/2)/3))
  let attaquebossmaxc1 = (bossatkmaxc1/(((PMaxDef+petdefboosted)/2)/3))*1.5

  let attaqueplayermin =  PMaxAtk/(bossdefmax/3)
  let attaqueplayermax = (PMaxAtk/(bossdefmax/3))*1.5
  let attaquebossmin = bossatkmax/(PMaxDef/3)
  let attaquebossmax = (bossatkmax/(PMaxDef/3))*1.5


  let attaqueplayermin2 = PMaxAtk / (bossdefmax2/3)
  let attaqueplayermax2 = (PMaxAtk /(bossdefmax2/3))*1.5
  let attaquebossmin2 = bossatkmax2/(PMaxDef/3)
  let attaquebossmax2 = (bossatkmax2/(PMaxDef/3))*1.5

  let attaqueplayermin3 = PMaxAtk / (bossdefmax3/3)
  let attaqueplayermax3 = (PMaxAtk /(bossdefmax3/3))*1.5
  let attaquebossmin3 = bossatkmax3/(PMaxDef/3)
  let attaquebossmax3 = (bossatkmax3/(PMaxDef/3))*1.5

  let attaqueplayermin4 = PMaxAtk / (bossdefmax4/3)
  let attaqueplayermax4 = (PMaxAtk /(bossdefmax4/3))*1.5
  let attaquebossmin4 = bossatkmax4/(PMaxDef/3)
  let attaquebossmax4 = (bossatkmax4/(PMaxDef/3))*1.5

  let attaqueplayermin5 = PMaxAtk / (bossdefmax5/3)
  let attaqueplayermax5 = (PMaxAtk /(bossdefmax5/3))*1.5
  let attaquebossmin5 = bossatkmax5/(PMaxDef/3)
  let attaquebossmax5 = (bossatkmax5/(PMaxDef/3))*1.5

  let coupplayer = Math.floor(Math.random()*attaqueplayermax)+ attaqueplayermin
  let coupboss = Math.floor(Math.random()*attaquebossmax)+ attaquebossmin

  let coupplayer2 = Math.floor(Math.random()*attaqueplayermax2)+ attaqueplayermin2
  let coupboss2 = Math.floor(Math.random()*attaquebossmax2)+ attaquebossmin2

  let coupplayer3 = Math.floor(Math.random()*attaqueplayermax3)+ attaqueplayermin3
  let coupboss3 = Math.floor(Math.random()*attaquebossmax3)+ attaquebossmin3

  let coupplayer4 = Math.floor(Math.random()*attaqueplayermax4)+ attaqueplayermin4
  let coupboss4 = Math.floor(Math.random()*attaquebossmax4)+ attaquebossmin4
  let coupplayer5 = Math.floor(Math.random()*attaqueplayermax5)+ attaqueplayermin5
  let coupboss5 = Math.floor(Math.random()*attaquebossmax5)+ attaquebossmin5

  let coupplayerc1 = Math.floor(Math.random()*attaqueplayermaxc1)+ attaqueplayerminc1
  let coupbossc1 = Math.floor(Math.random()*attaquebossmaxc1)+ attaquebossminc1

  if(coupbossc1<=0){
    coupbossc1 = 0
  }
  if(coupplayerc1<=0){
    coupplayerc1 = 0
  }
if(coupboss <= 0){
  coupboss = 0
}
if(coupplayer <= 0){
  coupplayer = 0
}
if(coupboss2 <= 0){
  coupboss2 = 0
}
if(coupplayer2 <= 0){
  coupplayer2 = 0
}

if(coupboss3 <= 0){
  coupboss3 = 0
}
if(coupplayer3 <= 0){
  coupplayer3 = 0
}
if(coupboss4 <= 0){
  coupboss4 = 0
}
if(coupplayer4 <= 0){
  coupplayer4 = 0
}
if(coupboss5 <= 0){
  coupboss5 = 0
}
if(coupplayer5 <= 0){
  coupplayer5 = 0
}
let writepc1 = 0
let writepc2 = 0
let writepc3 = 0
let writepc4 = 0
let phrasedeuxdrop = ""
if(uetagec1 === 5 || uetagec1 === 10 || uetagec1 === 15 || uetagec1 === 20 || uetagec1 === 25 || uetagec1 === 30 || uetagec1 === 35){
  writepc1 = 1
  phrasedeuxdrop= `\nOh tu as obtenu un Parchemin commun ${emoteparchemincommun}!`
}
if(uetagec1 === 40 || uetagec1 === 45 || uetagec1 === 50 || uetagec1 === 60 || uetagec1 === 70 || uetagec1 === 75){
  writepc2 = 1
  phrasedeuxdrop= `\nOh tu as obtenu un Parchemin rare ${emoteparcheminrare}!`
}
if(uetagec1 === 80 || uetagec1 === 90 || uetagec1 === 95 || uetagec1 === 99 || uetagec1 === 70 || uetagec1 === 75){
  writepc3 = 1
  phrasedeuxdrop= `\nOh tu as obtenu un Parchemin Epique ${emoteparcheminepic}!`
}
let goldrop = bossdropor * (artefact8effect + gemme2effectpo + pet4effect1 + pet28effect2 + pet38effect1-4)
let xpdropx = (bossdropxp * (artefact7effect+artefact8effect2+gemme2effectxp+ (1+ (uresetower/12))+pet3effect1+pet14effect2+pet29effect2+pet36effect2-7))

let goldrop2 = bossdropor2 * (artefact8effect + gemme2effectpo + pet4effect1 + pet28effect2 + pet38effect1-4)
let xpdropx2 = (bossdropxp2 * (artefact7effect+artefact8effect2+gemme2effectxp+ (1+ (uresetower2/12))+pet3effect1+pet14effect2+pet29effect2+pet36effect2-7))

let goldrop3 = bossdropor3 * (artefact8effect + gemme2effectpo + pet4effect1 + pet28effect2 + pet38effect1-4)
let xpdropx3 = (bossdropxp3 * (artefact7effect+artefact8effect2+gemme2effectxp+ (1+ (uresetower3/12))+pet3effect1+pet14effect2+pet29effect2+pet36effect2-7))

let goldrop4 = bossdropor4 * (artefact8effect + gemme2effectpo + pet4effect1 + pet28effect2+pet38effect1 - 4)
let xpdropx4 = (bossdropxp4 * (artefact7effect+artefact8effect2+gemme2effectxp+ (1+ (uresetower4/12))+pet3effect1+pet14effect2+pet29effect2+pet36effect2-7))

let goldrop5 = bossdropor5 * (artefact8effect + gemme2effectpo + pet4effect1 + pet28effect2 + pet38effect1 - 4)
let xpdropx5 = (bossdropxp5 * (artefact7effect+artefact8effect2+gemme2effectxp+ (1+ (uresetower5/12))+pet3effect1+pet14effect2+pet29effect2+pet36effect2-7))





let dcc1 = 0
let dcc2 = 0
let dcr2 = 0
let dcc3 = 0
let dcr3 = 0
let dcc4 = 0
let dcr4 = 0
let dce4 = 0
let dcc5 = 0
let dcr5 = 0
let dce5 = 0
let dcm5 = 0
let messagedropcommon = ""
let messagedropcommon2 =""
let messagedroprare2 = ""
let messagedroprare3 = ""
let messagedropcommon3 = ""
let messagedropcommon4 = ""
let messagedroprare4 = ""
let messagedropepic4 = ""
let messagedropcommon5 = ""
let messagedroprare5 = ""
let messagedropepic5 = ""
let messagedropmystere5 = ""



if(message.content === "!donjon unlock 2" && uclassen > 0) {
  if(udonjonunlock2 >= 1) message.channel.send("Ce donjon à déjà été débloqué.");
  if(uresetower < 2 ) message.channel.send("Tu n'as pas encore trouvé la carte du donjon, reviens plus tard.");
  if(uPieceor < 100 && udonjonunlock2 === 0 && uresetower >= 2) message.channel.send("Tu n'as pas assez d'argent', reviens plus tard.");
  if(uPieceor >= 100 && uresetower >= 2 && udonjonunlock2 === 0) {
    Pieceor[message.author.id] = {
      Pieceor: uPieceor - 100
            };
            donjonunlock2[message.author.id] = {
              donjonunlock2: 1
                    };
        fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
          if (err) console.log(err)
          });
          fs.writeFile("./donjonunlock2.json", JSON.stringify(donjonunlock2), (err) => {
            if (err) console.log(err)
            });
            message.channel.send("Vous avez bien débloqué La Grotte!")
  }
};
if(message.content === "!donjon unlock 3" && uclassen > 0) {
  if(udonjonunlock3 >= 1 && uPieceor >= 350) message.channel.send("Ce donjon à déjà été débloqué.");
  if(udonjonunlock3 >= 1 && uPieceor < 350) message.channel.send("Ce donjon à déjà été débloqué.");
  if(uresetower2 < 2 ) message.channel.send("Tu n'as pas encore trouvé la carte du donjon, reviens plus tard.");
  if(uPieceor < 350 && udonjonunlock3 === 0 && uresetower2 >= 2) message.channel.send("Tu n'as pas assez d'argent', reviens plus tard.");
  if(uPieceor >= 350 && uresetower2 >= 2 && udonjonunlock3 === 0) {
    Pieceor[message.author.id] = {
      Pieceor: uPieceor - 350
            };
            donjonunlock3[message.author.id] = {
              donjonunlock3: 1
                    };
        fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
          if (err) console.log(err)
          });
          fs.writeFile("./donjonunlock3.json", JSON.stringify(donjonunlock3), (err) => {
            if (err) console.log(err)
            });
            message.channel.send("Vous avez bien débloqué le Temple sous-marin!")
  }
};
if(message.content === "!donjon unlock 4" && uclassen > 0) {
  if(udonjonunlock4 >= 1 && uPieceor >= 0) message.channel.send("Ce donjon à déjà été débloqué.");
  if(uresetower3 < 3 ) message.channel.send("Tu n'as pas encore trouvé la carte du donjon, reviens plus tard.");
  if(uPieceor < 1000 && udonjonunlock4 === 0 && uresetower3 >= 3) message.channel.send("Tu n'as pas assez d'argent, reviens plus tard.");
  if(uPieceor >= 1000 && uresetower3 >= 3 && udonjonunlock4 === 0) {
    Pieceor[message.author.id] = {
      Pieceor: uPieceor - 1000
            };
            donjonunlock4[message.author.id] = {
              donjonunlock4: 1
                    };
        fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
          if (err) console.log(err)
          });
          fs.writeFile("./donjonunlock4.json", JSON.stringify(donjonunlock4), (err) => {
            if (err) console.log(err)
            });
            message.channel.send("Vous avez bien débloqué l'Île Celeste'!")
  }
};
if(message.content === "!donjon unlock 5" && uclassen > 0) {
  if(udonjonunlock5 >= 1 && uPieceor >= 0) message.channel.send("Ce donjon à déjà été débloqué.");
  if(uresetower4 < 5 ) message.channel.send("Tu n'as pas encore trouvé la carte du donjon, reviens plus tard.");
  if(uPieceor < 2000 && uresetower4 >= 5 && udonjonunlock5 === 0) message.channel.send("Tu n'as pas assez d'argent', reviens plus tard.");
  if(uPieceor >= 2000 && uresetower4 >= 5 && udonjonunlock5 === 0) {

    Pieceor[message.author.id] = {
      Pieceor: uPieceor - 2000
            };
            donjonunlock5[message.author.id] = {
              donjonunlock5: 1
                    };
        fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
          if (err) console.log(err)
          });
          fs.writeFile("./donjonunlock5.json", JSON.stringify(donjonunlock5), (err) => {
            if (err) console.log(err)
            });
            message.channel.send("Vous avez bien débloqué les Catacombes'!")
  }
}



if(unbchest > 80){
  dcc1 = 1
  messagedropcommon = `\n${boxcommonemote} Oh! Vous avez récuperé une box commune!`

}

if(unbchest2 >= 0 && unbchest2 <= 3){
  dcr2 = 1
  messagedroprare2 = `\n${boxrareemote} Oh! Vous avez récuperé une box rare!`

}
if(unbchest2 >= 75){
  dcc2 = 1
  messagedropcommon2 = `\n${boxcommonemote} Oh! Vous avez récuperé une box commune!`

}

if(unbchest3 >= 0 && unbchest3 <= 5){
  dcr3 = 1
  messagedroprare3 = `\n${boxrareemote} Oh! Vous avez récuperé une box rare!`

}
if(unbchest3 >= 70){
  dcc3 = 1
  messagedropcommon3 = `\n${boxcommonemote} Oh! Vous avez récuperé une box commune!`

}


if(unbchest4 >= 0 && unbchest4 <= 7){
  dcr4 = 1
  messagedroprare4 = `\n${boxrareemote} Oh! Vous avez récuperé une box rare!`

}
if(unbchest4 >= 60){
  dcc4 = 1
  messagedropcommon4 = `\n${boxcommonemote} Oh! Vous avez récuperé une box commune!`

}
if(unbchest4 === 25 ||unbchest4 === 26 ||unbchest4 === 27){
  dce4 = 1
  messagedropepic4 = `\n${boxepicemote} Oh! Vous avez récuperé une box épique!`

}


if(unbchest5 >= 0 && unbchest5 <= 10){
  dcr5 = 1
  messagedroprare5 = `\n${boxrareemote} Oh! Vous avez récuperé une box rare!`

}
if(unbchest5 >= 51){
  dcc5 = 1
  messagedropcommon5 = `\n${boxcommonemote} Oh! Vous avez récuperé une box commune!`

}
if(unbchest5 >= 22 && unbchest5 <= 26 ){
  dce5 = 1
  messagedropepic5 = `\n${boxepicemote} Oh! Vous avez récuperé une box épique!`

}
if(unbchest5 === 50 || unbchest5 === 49){
  dcm5 = 1
  messagedropmystere5 = `\n${boxmysteryemote} Oh! Vous avez récuperé une box mystérieuse!`

}
let multiplevariableatk = 0
let multiplevariabledef = 0
let multiplevariablepv = 0
if(uuseatkpot > 0) {
  multiplevariableatk = 1
}
if(uusedefpot > 0) {
  multiplevariabledef = 1
}
if(uusepvpot > 0) {
  multiplevariablepv = 1
}






if(message.content === "!donjon 0 a" && uclassen > 0){
  if(uPv <= 0  && uetagec1 <= 100 && upetselect != 0) message.channel.send("Tu es trop faible pour combattre");
  if(uetagec1 >= 100) message.channel.send(`Coming Soon...`)
  if(upetselect === 0) message.channel.send(`Pour rentrer dans le donjon tu dois seléctionner un pet.\nPour le faire, faites ${trucbizarre}!pet select [ID]${trucbizarre}`)
  if(uPv > 0 && uetagec1 <= 100 && upetselect != 0) {
   let turncombat = 0
   let pvjoueur1 = (uPv+petpvboosted)/2
   let pvbaseboss = bosspvmaxc1
    while(pvjoueur1 > 0 && bosspvmaxc1 > 0) {

      turncombat++
      bosspvmaxc1 = bosspvmaxc1-coupplayerc1
      pvjoueur1= pvjoueur1 - coupbossc1
      coupplayerc1  = coupplayerc1 *1.1
      coupbossc1 = coupbossc1 *1.1

      if(pvjoueur1 <= 0 && bosspvmaxc1 > 0){

        Pv[message.author.id] = {
          Pv: pet40effect1 + pet19effect1 + pet25effect1
        };
       
  
      usepvpot[message.author.id] = {
      usepvpot: uusepvpot - multiplevariablepv
      };
       usedefpot[message.author.id] = {
             usedefpot: uusedefpot - multiplevariabledef
          };
            useatkpot[message.author.id] = {
                  useatkpot: uuseatkpot - multiplevariableatk
          };
  

       fs.writeFile("./Pv.json", JSON.stringify(Pv), (err) => {
         if (err) console.log(err)
       });
       fs.writeFile("./usepvpot.json", JSON.stringify(usepvpot), (err) => {
        if (err) console.log(err)
      });
      fs.writeFile("./useatkpot.json", JSON.stringify(useatkpot), (err) => {
        if (err) console.log(err)
      });
      fs.writeFile("./usedefpot.json", JSON.stringify(usedefpot), (err) => {
        if (err) console.log(err)
      });
              let ligneoptionnelle1 = `\n...\n**__Tour ${turncombat}:__** \n**${message.author.username}** et **${petnameinv2}** attaquent **${bossnamec1}**, il perd ${Math.trunc(coupplayerc1)} PV (${Math.trunc(bosspvmaxc1)} PV's restants)\n**${bossnamec1}** attaque **${message.author.username}** et **${petnameinv2}**, ils perdent ${Math.trunc(coupbossc1)} PV (0 PV's restants)`
              if(turncombat === 1) {
               ligneoptionnelle1 = ""
             }
        message.channel.send(`Combat opposant <@${message.author.id}> et **${petnameinv2}** face à ${bossnamec1}\n**__Tour 1:__**\n**${message.author.username}** et **${petnameinv2}** attaquent **${bossnamec1}**, il perd ${Math.trunc(coupplayerc1/(Math.pow(1.1, turncombat)))} PV (${Math.trunc(pvbaseboss - (coupplayerc1/ (Math.pow(1.1, turncombat))))} PV's restants)\n**${bossnamec1}** attaque **${message.author.username}** et **${petnameinv2}**, ils perdent ${Math.trunc(coupbossc1/ (Math.pow(1.1, turncombat) ))} PV (${Math.trunc(((uPv+petpvboosted)/2) - (coupbossc1/(Math.pow(1.1, turncombat))))} PV's restants)${ligneoptionnelle1}\n**${message.author.username}** et **${petnameinv2}** ont perdus face a ${bossnamec1}.`)
      }

      if(pvjoueur1 > 0 && bosspvmaxc1 <= 0){
        let ligneoptionnelle = `\n...\n**__Tour ${turncombat}:__** \n**${message.author.username}** et **${petnameinv2}**attaquent **${bossnamec1}**, il perd ${Math.trunc(coupplayerc1)} PV (0 PV's restants)`
        if(turncombat === 1) {
         ligneoptionnelle = ""
       }
       let ktruce = pvjoueur1
       if(ktruce >= PMaxPv){
         ktruce = PMaxPv
       }
       if(ktruce < 0){
         ktruce = 0
       }
        etagec1[message.author.id] = {
          etagec1: uetagec1 + 1
         };
         xp[message.author.id] = {
          xp: xpactuel + Math.trunc(bossdropxpc1)
         };
         xpclasse[message.author.id] = {
          xpclasse: xpclasseactuel + Math.trunc(bossdropxpcc1),
          levelclasse: nivactuelclasse
         };
         
          Pv[message.author.id] = {
            Pv: Math.trunc(ktruce)
          };
     

         parchemincommun[message.author.id] = {
           parchemincommun: uparchemincommun + writepc1
         };

         parcheminrare[message.author.id] = {
          parcheminrare: uparcheminrare + writepc2
        };
        parcheminepic[message.author.id] = {
          parcheminepic: uparcheminepic + writepc3
        };
        parcheminlegendaire[message.author.id] = {
          parcheminlegendaire: uparcheminlegendaire + writepc4
        };

                                                                            usepvpot[message.author.id] = {
                                                                             usepvpot: uusepvpot - multiplevariablepv
                                                                             };
                                                                              usedefpot[message.author.id] = {
                                                                                    usedefpot: uusedefpot - multiplevariabledef
                                                                                 };
                                                                                   useatkpot[message.author.id] = {
                                                                                         useatkpot: uuseatkpot - multiplevariableatk
                                                                                 };
           fs.writeFile("./parchemincommun.json", JSON.stringify(parchemincommun), (err) => {
             if (err) console.log(err)
           });
           fs.writeFile("./parcheminlegendaire.json", JSON.stringify(parcheminlegendaire), (err) => {
            if (err) console.log(err)
          });
           fs.writeFile("./parcheminepic.json", JSON.stringify(parcheminepic), (err) => {
            if (err) console.log(err)
          });
          fs.writeFile("./experienceclasse.json", JSON.stringify(xpclasse), (err) => {
            if (err) console.log(err)
          });
           fs.writeFile("./parcheminrare.json", JSON.stringify(parcheminrare), (err) => {
            if (err) console.log(err)
          });
          fs.writeFile("./etagec1.json", JSON.stringify(etagec1), (err) => {
           if (err) console.log(err)
           });
          fs.writeFile("./Pv.json", JSON.stringify(Pv), (err) => {
            if (err) console.log(err)
          });
         fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
          if (err) console.log(err)
         });
                 fs.writeFile("./experience.json", JSON.stringify(xp), (err) => {
                   if (err) console.log(err)
                   });
                 
                     
                                     fs.writeFile("./usepvpot.json", JSON.stringify(usepvpot), (err) => {
                                       if (err) console.log(err)
                                     });
                                     fs.writeFile("./useatkpot.json", JSON.stringify(useatkpot), (err) => {
                                       if (err) console.log(err)
                                     });
                                     fs.writeFile("./usedefpot.json", JSON.stringify(usedefpot), (err) => {
                                       if (err) console.log(err)
                                     });



        message.channel.send(`Combat opposant <@${message.author.id}> et **${petnameinv2}** face à ${bossnamec1}\n**__Tour 1:__**\n**${message.author.username}** et ${petnameinv2} attaquent **${bossnamec1}**, il perd ${Math.trunc(coupplayerc1/(Math.pow(1.1, turncombat)))} PV (${Math.trunc(pvbaseboss - (coupplayerc1/ (Math.pow(1.1, turncombat))))} PV's restants)\n**${bossnamec1}** attaque **${message.author.username}** et **${petnameinv2}**, ils perdent ${Math.trunc(coupbossc1/ (Math.pow(1.1, turncombat)) )} PV (${Math.trunc(((uPv+petpvboosted)/2) - (coupbossc1/(Math.pow(1.1, turncombat))))} PV's restants)${ligneoptionnelle}\n\nBien joué ${message.author.username} vous avez battu ${bossnamec1}!\nVous gagnez ${Math.trunc(bossdropxpc1)} ${xp1emote} ainsi que ${Math.trunc(bossdropxpcc1)} ${xp2emote}${phrasedeuxdrop}`)
      }
        if(pvjoueur1 <= 0 && bosspvmax <= 0){
          let ligneoptionnelle2 = `\n...\n**__Tour ${turncombat}:__** \n**${message.author.username}** **${petnameinv2}** attaquent **${bossnamec1}**, il perd ${Math.trunc(coupplayerc1)} PV (0 PV's restants)\n**${bossnamec1}** attaque **${message.author.username}** et **${petnameinv2}**, ils perdent ${Math.trunc(coupbossc1)} PV (0 PV's restants)`
          if(turncombat === 1) {
           ligneoptionnelle1 = ""
         }
          Pv[message.author.id] = {
            Pv: pet40effect1 + pet19effect1 + pet25effect1
          };
 
    
        usepvpot[message.author.id] = {
        usepvpot: uusepvpot - multiplevariablepv
        };
         usedefpot[message.author.id] = {
               usedefpot: uusedefpot - multiplevariabledef
            };
              useatkpot[message.author.id] = {
                    useatkpot: uuseatkpot - multiplevariableatk
            };
    
  
         fs.writeFile("./Pv.json", JSON.stringify(Pv), (err) => {
           if (err) console.log(err)
         });
         fs.writeFile("./usepvpot.json", JSON.stringify(usepvpot), (err) => {
          if (err) console.log(err)
        });
        fs.writeFile("./useatkpot.json", JSON.stringify(useatkpot), (err) => {
          if (err) console.log(err)
        });
        fs.writeFile("./usedefpot.json", JSON.stringify(usedefpot), (err) => {
          if (err) console.log(err)
        });
     

        message.channel.send(`Combat opposant <@${message.author.id}> et **${petnameinv2}** face à ${bossnamec1}\n**__Tour 1:__**\n**${message.author.username}** et **${petnameinv2}** attaquent **${bossnamec1}**, il perd ${Math.trunc(coupplayerc1/(Math.pow(1.1, turncombat)))} PV (${Math.trunc(pvbaseboss - (coupplayerc1/ (Math.pow(1.1, turncombat))))} PV's restants)\n**${bossnamec1}** attaque **${message.author.username}** et **${petnameinv2}**, ils perdent ${Math.trunc(coupbossc1/ (Math.pow(1.1, turncombat)))} PV (${Math.trunc(((uPv+petpvboosted)/2) - (coupbossc1 / (Math.pow(1.1, turncombat))))} PV's restants)${ligneoptionnelle2}\n${message.author.username} et ${petnameinv2}, vous êtes mort avec le boss, vous ne réussissez pas à passer cet étage, une prochaine fois peut-être?`)
        }
      }
    }
  }

















    if(message.content === "!donjon 1 a" && uclassen > 0){
      if(uPv <= 0  && uetage <= 30) message.channel.send("Tu es trop faible pour combattre");
      if(uetage >= 31) message.channel.send(`Vous avez déjà fini ce donjon, faites ${trucbizarre}!donjon 1 reset${trucbizarre} pour le reset.`)
      if(uPv > 0 && uetage <= 30) {
       let turncombat = 0
       let pvjoueur1 = uPv
       let pvbaseboss = bosspvmax
        while(pvjoueur1 > 0 && bosspvmax > 0) {

          turncombat++
          bosspvmax = bosspvmax-coupplayer
          pvjoueur1= pvjoueur1 - coupboss
          coupplayer  = coupplayer *1.1
          coupboss = coupboss *1.1
    
          if(pvjoueur1 <= 0 && bosspvmax > 0){

            Pv[message.author.id] = {
              Pv: pet40effect1 + pet19effect1 + pet25effect1
            };
           nbchest[message.author.id] = {
            nbchest: Math.floor(Math.random() * 100) + 1
           };
            nbchest2[message.author.id] = {
              nbchest2: Math.floor(Math.random() * 100) + 1
           };
           nbchest3[message.author.id] = {
            nbchest3: Math.floor(Math.random() * 100) + 1
                 };
                 nbchest4[message.author.id] = {
                  nbchest4: Math.floor(Math.random() * 100) + 1
               };
               nbchest5[message.author.id] = {
                nbchest5: Math.floor(Math.random() * 100) + 1
             };
      
          usepvpot[message.author.id] = {
          usepvpot: uusepvpot - multiplevariablepv
          };
           usedefpot[message.author.id] = {
                 usedefpot: uusedefpot - multiplevariabledef
              };
                useatkpot[message.author.id] = {
                      useatkpot: uuseatkpot - multiplevariableatk
              };
      
    
           fs.writeFile("./Pv.json", JSON.stringify(Pv), (err) => {
             if (err) console.log(err)
           });
           fs.writeFile("./usepvpot.json", JSON.stringify(usepvpot), (err) => {
            if (err) console.log(err)
          });
          fs.writeFile("./useatkpot.json", JSON.stringify(useatkpot), (err) => {
            if (err) console.log(err)
          });
          fs.writeFile("./usedefpot.json", JSON.stringify(usedefpot), (err) => {
            if (err) console.log(err)
          });
                   fs.writeFile("./nbchest.json", JSON.stringify(nbchest), (err) => {
                    if (err) console.log(err)
                  });
                  fs.writeFile("./nbchest2.json", JSON.stringify(nbchest2), (err) => {
                    if (err) console.log(err)
                  });
                  fs.writeFile("./nbchest3.json", JSON.stringify(nbchest3), (err) => {
                    if (err) console.log(err)
                  });
                  fs.writeFile("./nbchest4.json", JSON.stringify(nbchest4), (err) => {
                    if (err) console.log(err)
                  });
                  fs.writeFile("./nbchest5.json", JSON.stringify(nbchest5), (err) => {
                    if (err) console.log(err)
                  });
                  let ligneoptionnelle1 = `\n...\n**__Tour ${turncombat}:__** \n**${message.author.username}** attaque **${bossname}**, il perd ${Math.trunc(coupplayer)} PV (${Math.trunc(bosspvmax)} PV's restants)\n**${bossname}** attaque **${message.author.username}**, il perd ${Math.trunc(coupboss)} PV (0 PV's restants)`
                  if(turncombat === 1) {
                   ligneoptionnelle1 = ""
                 }
            message.channel.send(`Combat entre <@${message.author.id}> et ${bossname}\n**__Tour 1:__**\n**${message.author.username}** attaque **${bossname}**, il perd ${Math.trunc(coupplayer/(Math.pow(1.1, turncombat)))} PV (${Math.trunc(pvbaseboss - (coupplayer/ (Math.pow(1.1, turncombat))))} PV's restants)\n${bossname} attaque ${message.author.username}, il perd ${Math.trunc(coupboss/ (Math.pow(1.1, turncombat) ))} PV (${Math.trunc(uPv - (coupboss/(Math.pow(1.1, turncombat))))} PV's restants)${ligneoptionnelle1}\n${message.author.username} a perdu face a ${bossname}.`)
          }

          if(pvjoueur1 > 0 && bosspvmax <= 0){
            let ligneoptionnelle = `\n...\n**__Tour ${turncombat}:__** \n**${message.author.username}** attaque **${bossname}**, il perd ${Math.trunc(coupplayer)} PV (0 PV's restants)`
            if(turncombat === 1) {
             ligneoptionnelle = ""
           }
            etage[message.author.id] = {
              etage: uetage + 1
             };
             xp[message.author.id] = {
              xp: xpactuel + Math.trunc(xpdropx)
             };
             Pieceor[message.author.id] = {
              Pieceor: uPieceor + Math.trunc(goldrop)
             };
             
              Pv[message.author.id] = {
                Pv: Math.trunc(pvjoueur1)
              };
         
   
             item6[message.author.id] = {
               item6: uitem6 + nb6
             };
             item12[message.author.id] = {
               item12: uitem12 + nb12
             };
            
             boxcommune[message.author.id] = {
               boxcommune: uboxcommune + dcc1
             };
      
             nbchest[message.author.id] = {
              nbchest: Math.floor(Math.random() * 100) + 1
             };
              nbchest2[message.author.id] = {
                nbchest2: Math.floor(Math.random() * 100) + 1
             };
             nbchest3[message.author.id] = {
              nbchest3: Math.floor(Math.random() * 100) + 1
                   };
                   nbchest4[message.author.id] = {
                    nbchest4: Math.floor(Math.random() * 100) + 1
                 };
                 nbchest5[message.author.id] = {
                  nbchest5: Math.floor(Math.random() * 100) + 1
               };

                                                                                usepvpot[message.author.id] = {
                                                                                 usepvpot: uusepvpot - multiplevariablepv
                                                                                 };
                                                                                  usedefpot[message.author.id] = {
                                                                                        usedefpot: uusedefpot - multiplevariabledef
                                                                                     };
                                                                                       useatkpot[message.author.id] = {
                                                                                             useatkpot: uuseatkpot - multiplevariableatk
                                                                                     };
               fs.writeFile("./item6.json", JSON.stringify(item6), (err) => {
                 if (err) console.log(err)
               });
              
               fs.writeFile("./item12.json", JSON.stringify(item12), (err) => {
                 if (err) console.log(err)
               });

              fs.writeFile("./etage.json", JSON.stringify(etage), (err) => {
               if (err) console.log(err)
               });
              fs.writeFile("./Pv.json", JSON.stringify(Pv), (err) => {
                if (err) console.log(err)
              });
             fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
              if (err) console.log(err)
             });
                     fs.writeFile("./experience.json", JSON.stringify(xp), (err) => {
                       if (err) console.log(err)
                       });
                       fs.writeFile("./boxcommune.json", JSON.stringify(boxcommune), (err) => {
                         if (err) console.log(err)
                         });
                         
                               fs.writeFile("./nbchest.json", JSON.stringify(nbchest), (err) => {
                                 if (err) console.log(err)
                                 });
                                 fs.writeFile("./nbchest2.json", JSON.stringify(nbchest2), (err) => {
                                   if (err) console.log(err)
                                   });
                                   fs.writeFile("./nbchest3.json", JSON.stringify(nbchest3), (err) => {
                                     if (err) console.log(err)
                                     });
                                     fs.writeFile("./nbchest4.json", JSON.stringify(nbchest4), (err) => {
                                       if (err) console.log(err)
                                       });
                                       fs.writeFile("./nbchest5.json", JSON.stringify(nbchest5), (err) => {
                                         if (err) console.log(err)
                                         });
                                         fs.writeFile("./usepvpot.json", JSON.stringify(usepvpot), (err) => {
                                           if (err) console.log(err)
                                         });
                                         fs.writeFile("./useatkpot.json", JSON.stringify(useatkpot), (err) => {
                                           if (err) console.log(err)
                                         });
                                         fs.writeFile("./usedefpot.json", JSON.stringify(usedefpot), (err) => {
                                           if (err) console.log(err)
                                         });



            message.channel.send(`Combat entre <@${message.author.id}> et ${bossname}\n**__Tour 1:__**\n**${message.author.username}** attaque **${bossname}**, il perd ${Math.trunc(coupplayer/(Math.pow(1.1, turncombat)))} PV (${Math.trunc(pvbaseboss - (coupplayer/ (Math.pow(1.1, turncombat))))} PV's restants)\n**${bossname}** attaque **${message.author.username}**, il perd ${Math.trunc(coupboss/ (Math.pow(1.1, turncombat)) )} PV (${Math.trunc(uPv - (coupboss/(Math.pow(1.1, turncombat))))} PV's restants)${ligneoptionnelle}\n\nBien joué ${message.author.username} vous avez battu ${bossname}!\nVous gagnez ${Math.trunc(goldrop)} ${POemote} ainsi que ${Math.trunc(xpdropx)} ${xp1emote}${pepic6}${pepic12}${messagedropcommon}`)
          }
            if(pvjoueur1 <= 0 && bosspvmax <= 0){
              let ligneoptionnelle2 = `\n...\n**__Tour ${turncombat}:__** \n**${message.author.username}** attaque **${bossname}**, il perd ${Math.trunc(coupplayer)} PV (0 PV's restants)\n**${bossname}** attaque **${message.author.username}**, il perd ${Math.trunc(coupboss)} PV (0 PV's restants)`
              if(turncombat === 1) {
               ligneoptionnelle1 = ""
             }
              Pv[message.author.id] = {
                Pv: pet40effect1 + pet19effect1 + pet25effect1
              };
             nbchest[message.author.id] = {
              nbchest: Math.floor(Math.random() * 100) + 1
             };
              nbchest2[message.author.id] = {
                nbchest2: Math.floor(Math.random() * 100) + 1
             };
             nbchest3[message.author.id] = {
              nbchest3: Math.floor(Math.random() * 100) + 1
                   };
                   nbchest4[message.author.id] = {
                    nbchest4: Math.floor(Math.random() * 100) + 1
                 };
                 nbchest5[message.author.id] = {
                  nbchest5: Math.floor(Math.random() * 100) + 1
               };
        
            usepvpot[message.author.id] = {
            usepvpot: uusepvpot - multiplevariablepv
            };
             usedefpot[message.author.id] = {
                   usedefpot: uusedefpot - multiplevariabledef
                };
                  useatkpot[message.author.id] = {
                        useatkpot: uuseatkpot - multiplevariableatk
                };
        
      
             fs.writeFile("./Pv.json", JSON.stringify(Pv), (err) => {
               if (err) console.log(err)
             });
             fs.writeFile("./usepvpot.json", JSON.stringify(usepvpot), (err) => {
              if (err) console.log(err)
            });
            fs.writeFile("./useatkpot.json", JSON.stringify(useatkpot), (err) => {
              if (err) console.log(err)
            });
            fs.writeFile("./usedefpot.json", JSON.stringify(usedefpot), (err) => {
              if (err) console.log(err)
            });
                     fs.writeFile("./nbchest.json", JSON.stringify(nbchest), (err) => {
                      if (err) console.log(err)
                    });
                    fs.writeFile("./nbchest2.json", JSON.stringify(nbchest2), (err) => {
                      if (err) console.log(err)
                    });
                    fs.writeFile("./nbchest3.json", JSON.stringify(nbchest3), (err) => {
                      if (err) console.log(err)
                    });
                    fs.writeFile("./nbchest4.json", JSON.stringify(nbchest4), (err) => {
                      if (err) console.log(err)
                    });
                    fs.writeFile("./nbchest5.json", JSON.stringify(nbchest5), (err) => {
                      if (err) console.log(err)
                    });

            message.channel.send(`Combat entre <@${message.author.id}> et ${bossname}\n**__Tour 1:__**\n**${message.author.username}** attaque **${bossname}**, il perd ${Math.trunc(coupplayer/(Math.pow(1.1, turncombat)))} PV (${Math.trunc(pvbaseboss - (coupplayer/ (Math.pow(1.1, turncombat))))} PV's restants)\n**${bossname}** attaque **${message.author.username}**, il perd ${Math.trunc(coupboss/ (Math.pow(1.1, turncombat)))} PV (${Math.trunc(uPv - (coupboss / (Math.pow(1.1, turncombat))))} PV's restants)${ligneoptionnelle2}\n${message.author.username}, vous êtes mort avec le boss, vous ne réussissez pas à passer cet étage, une prochaine fois peut-être?`)
            }
          }
        }
      }
    



      if(message.content === "!donjon 2 a" && uclassen > 0){
        if(uPv <= 0  && uetage2 <= 18) message.channel.send("Tu es trop faible pour combattre");
        if(uetage2 >= 19) message.channel.send(`Vous avez déjà fini ce donjon, faites ${trucbizarre}!donjon 2 reset${trucbizarre} pour le reset.`)
        if(uPv > 0 && uetage2 <= 18 && udonjonunlock2!=0) {
         let turncombat = 0
         let pvjoueur1 = uPv
         let pvbaseboss = bosspvmax2
          while(pvjoueur1 > 0 && bosspvmax2 > 0) {
  
            turncombat++
            bosspvmax2 = bosspvmax2-coupplayer2
            pvjoueur1= pvjoueur1 - coupboss2
            coupplayer2  = coupplayer2 *1.1
            coupboss2 = coupboss2 *1.1
      
            if(pvjoueur1 <= 0 && bosspvmax2 > 0){
  
              Pv[message.author.id] = {
                Pv: pet40effect1 + pet19effect1 + pet25effect1
              };
             nbchest[message.author.id] = {
              nbchest: Math.floor(Math.random() * 100) + 1
             };
              nbchest2[message.author.id] = {
                nbchest2: Math.floor(Math.random() * 100) + 1
             };
             nbchest3[message.author.id] = {
              nbchest3: Math.floor(Math.random() * 100) + 1
                   };
                   nbchest4[message.author.id] = {
                    nbchest4: Math.floor(Math.random() * 100) + 1
                 };
                 nbchest5[message.author.id] = {
                  nbchest5: Math.floor(Math.random() * 100) + 1
               };
        
            usepvpot[message.author.id] = {
            usepvpot: uusepvpot - multiplevariablepv
            };
             usedefpot[message.author.id] = {
                   usedefpot: uusedefpot - multiplevariabledef
                };
                  useatkpot[message.author.id] = {
                        useatkpot: uuseatkpot - multiplevariableatk
                };
        
      
             fs.writeFile("./Pv.json", JSON.stringify(Pv), (err) => {
               if (err) console.log(err)
             });
             fs.writeFile("./usepvpot.json", JSON.stringify(usepvpot), (err) => {
              if (err) console.log(err)
            });
            fs.writeFile("./useatkpot.json", JSON.stringify(useatkpot), (err) => {
              if (err) console.log(err)
            });
            fs.writeFile("./usedefpot.json", JSON.stringify(usedefpot), (err) => {
              if (err) console.log(err)
            });
                     fs.writeFile("./nbchest.json", JSON.stringify(nbchest), (err) => {
                      if (err) console.log(err)
                    });
                    fs.writeFile("./nbchest2.json", JSON.stringify(nbchest2), (err) => {
                      if (err) console.log(err)
                    });
                    fs.writeFile("./nbchest3.json", JSON.stringify(nbchest3), (err) => {
                      if (err) console.log(err)
                    });
                    fs.writeFile("./nbchest4.json", JSON.stringify(nbchest4), (err) => {
                      if (err) console.log(err)
                    });
                    fs.writeFile("./nbchest5.json", JSON.stringify(nbchest5), (err) => {
                      if (err) console.log(err)
                    });
                    let ligneoptionnelle1 = `\n...\n**__Tour ${turncombat}:__** \n**${message.author.username}** attaque **${bossname2}**, il perd ${Math.trunc(coupplayer2)} PV (${Math.trunc(bosspvmax2)} PV's restants)\n**${bossname2}** attaque **${message.author.username}**, il perd ${Math.trunc(coupboss2)} PV (0 PV's restants)`
                    if(turncombat === 1) {
                     ligneoptionnelle1 = ""
                   }
              message.channel.send(`Combat entre <@${message.author.id}> et ${bossname2}\n**__Tour 1:__**\n**${message.author.username}** attaque **${bossname2}**, il perd ${Math.trunc(coupplayer2/(Math.pow(1.1, turncombat)))} PV (${Math.trunc(pvbaseboss - (coupplayer2/ (Math.pow(1.1, turncombat))))} PV's restants)\n${bossname2} attaque ${message.author.username}, il perd ${Math.trunc(coupboss2/ (Math.pow(1.1, turncombat) ))} PV (${Math.trunc(uPv - (coupboss2/(Math.pow(1.1, turncombat))))} PV's restants)${ligneoptionnelle1}\n${message.author.username} a perdu face a ${bossname2}.`)
            }
  
            if(pvjoueur1 > 0 && bosspvmax2 <= 0){
              let ligneoptionnelle = `\n...\n**__Tour ${turncombat}:__** \n**${message.author.username}** attaque **${bossname2}**, il perd ${Math.trunc(coupplayer2)} PV (0 PV's restants)`
              if(turncombat === 1) {
               ligneoptionnelle = ""
             }
              etage2[message.author.id] = {
                etage2: uetage2 + 1
               };
               xp[message.author.id] = {
                xp: xpactuel + Math.trunc(xpdropx2)
               };
               Pieceor[message.author.id] = {
                Pieceor: uPieceor + Math.trunc(goldrop2)
               };
               
                Pv[message.author.id] = {
                  Pv: Math.trunc(pvjoueur1)
                };
           
     
           
               item20[message.author.id] = {
                 item20: uitem20 + nb20
               };
              
               boxcommune[message.author.id] = {
                 boxcommune: uboxcommune + dcc2
               };
               boxrare[message.author.id] = {
                boxrare: uboxrare + dcr2
              };
               nbchest[message.author.id] = {
                nbchest: Math.floor(Math.random() * 100) + 1
               };
                nbchest2[message.author.id] = {
                  nbchest2: Math.floor(Math.random() * 100) + 1
               };
               nbchest3[message.author.id] = {
                nbchest3: Math.floor(Math.random() * 100) + 1
                     };
                     nbchest4[message.author.id] = {
                      nbchest4: Math.floor(Math.random() * 100) + 1
                   };
                   nbchest5[message.author.id] = {
                    nbchest5: Math.floor(Math.random() * 100) + 1
                 };
  
                                                                                  usepvpot[message.author.id] = {
                                                                                   usepvpot: uusepvpot - multiplevariablepv
                                                                                   };
                                                                                    usedefpot[message.author.id] = {
                                                                                          usedefpot: uusedefpot - multiplevariabledef
                                                                                       };
                                                                                         useatkpot[message.author.id] = {
                                                                                               useatkpot: uuseatkpot - multiplevariableatk
                                                                                       };
                 fs.writeFile("./item20.json", JSON.stringify(item20), (err) => {
                   if (err) console.log(err)
                 });
                
  
                fs.writeFile("./etage2.json", JSON.stringify(etage2), (err) => {
                 if (err) console.log(err)
                 });
                fs.writeFile("./Pv.json", JSON.stringify(Pv), (err) => {
                  if (err) console.log(err)
                });
               fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
                if (err) console.log(err)
               });
                       fs.writeFile("./experience.json", JSON.stringify(xp), (err) => {
                         if (err) console.log(err)
                         });
                         fs.writeFile("./boxcommune.json", JSON.stringify(boxcommune), (err) => {
                           if (err) console.log(err)
                           });
                           fs.writeFile("./boxrare.json", JSON.stringify(boxrare), (err) => {
                            if (err) console.log(err)
                            });
                                 fs.writeFile("./nbchest.json", JSON.stringify(nbchest), (err) => {
                                   if (err) console.log(err)
                                   });
                                   fs.writeFile("./nbchest2.json", JSON.stringify(nbchest2), (err) => {
                                     if (err) console.log(err)
                                     });
                                     fs.writeFile("./nbchest3.json", JSON.stringify(nbchest3), (err) => {
                                       if (err) console.log(err)
                                       });
                                       fs.writeFile("./nbchest4.json", JSON.stringify(nbchest4), (err) => {
                                         if (err) console.log(err)
                                         });
                                         fs.writeFile("./nbchest5.json", JSON.stringify(nbchest5), (err) => {
                                           if (err) console.log(err)
                                           });
                                           fs.writeFile("./usepvpot.json", JSON.stringify(usepvpot), (err) => {
                                             if (err) console.log(err)
                                           });
                                           fs.writeFile("./useatkpot.json", JSON.stringify(useatkpot), (err) => {
                                             if (err) console.log(err)
                                           });
                                           fs.writeFile("./usedefpot.json", JSON.stringify(usedefpot), (err) => {
                                             if (err) console.log(err)
                                           });
  
  
  
              message.channel.send(`Combat entre <@${message.author.id}> et ${bossname2}\n**__Tour 1:__**\n**${message.author.username}** attaque **${bossname2}**, il perd ${Math.trunc(coupplayer2/(Math.pow(1.1, turncombat)))} PV (${Math.trunc(pvbaseboss - (coupplayer2/ (Math.pow(1.1, turncombat))))} PV's restants)\n**${bossname2}** attaque **${message.author.username}**, il perd ${Math.trunc(coupboss2/ (Math.pow(1.1, turncombat)) )} PV (${Math.trunc(uPv - (coupboss2/(Math.pow(1.1, turncombat))))} PV's restants)${ligneoptionnelle}\n\nBien joué ${message.author.username} vous avez battu ${bossname2}!\nVous gagnez ${Math.trunc(goldrop2)} ${POemote} ainsi que ${Math.trunc(xpdropx2)} ${xp1emote}${pepic20}${messagedropcommon2}${messagedroprare2}`)
            }
              if(pvjoueur1 <= 0 && bosspvmax2 <= 0){
                let ligneoptionnelle2 = `\n...\n**__Tour ${turncombat}:__** \n**${message.author.username}** attaque **${bossname2}**, il perd ${Math.trunc(coupplayer2)} PV (0 PV's restants)\n**${bossname2}** attaque **${message.author.username}**, il perd ${Math.trunc(coupboss2)} PV (0 PV's restants)`
                if(turncombat === 1) {
                 ligneoptionnelle1 = ""
               }
                Pv[message.author.id] = {
                  Pv: pet40effect1 + pet19effect1 + pet25effect1
                };
               nbchest[message.author.id] = {
                nbchest: Math.floor(Math.random() * 100) + 1
               };
                nbchest2[message.author.id] = {
                  nbchest2: Math.floor(Math.random() * 100) + 1
               };
               nbchest3[message.author.id] = {
                nbchest3: Math.floor(Math.random() * 100) + 1
                     };
                     nbchest4[message.author.id] = {
                      nbchest4: Math.floor(Math.random() * 100) + 1
                   };
                   nbchest5[message.author.id] = {
                    nbchest5: Math.floor(Math.random() * 100) + 1
                 };
          
              usepvpot[message.author.id] = {
              usepvpot: uusepvpot - multiplevariablepv
              };
               usedefpot[message.author.id] = {
                     usedefpot: uusedefpot - multiplevariabledef
                  };
                    useatkpot[message.author.id] = {
                          useatkpot: uuseatkpot - multiplevariableatk
                  };
          
        
               fs.writeFile("./Pv.json", JSON.stringify(Pv), (err) => {
                 if (err) console.log(err)
               });
               fs.writeFile("./usepvpot.json", JSON.stringify(usepvpot), (err) => {
                if (err) console.log(err)
              });
              fs.writeFile("./useatkpot.json", JSON.stringify(useatkpot), (err) => {
                if (err) console.log(err)
              });
              fs.writeFile("./usedefpot.json", JSON.stringify(usedefpot), (err) => {
                if (err) console.log(err)
              });
                       fs.writeFile("./nbchest.json", JSON.stringify(nbchest), (err) => {
                        if (err) console.log(err)
                      });
                      fs.writeFile("./nbchest2.json", JSON.stringify(nbchest2), (err) => {
                        if (err) console.log(err)
                      });
                      fs.writeFile("./nbchest3.json", JSON.stringify(nbchest3), (err) => {
                        if (err) console.log(err)
                      });
                      fs.writeFile("./nbchest4.json", JSON.stringify(nbchest4), (err) => {
                        if (err) console.log(err)
                      });
                      fs.writeFile("./nbchest5.json", JSON.stringify(nbchest5), (err) => {
                        if (err) console.log(err)
                      });
  
              message.channel.send(`Combat entre <@${message.author.id}> et ${bossname2}\n**__Tour 1:__**\n**${message.author.username}** attaque **${bossname2}**, il perd ${Math.trunc(coupplayer2/(Math.pow(1.1, turncombat)))} PV (${Math.trunc(pvbaseboss - (coupplayer2/ (Math.pow(1.1, turncombat))))} PV's restants)\n**${bossname2}** attaque **${message.author.username}**, il perd ${Math.trunc(coupboss2/ (Math.pow(1.1, turncombat)))} PV (${Math.trunc(uPv - (coupboss2 / (Math.pow(1.1, turncombat))))} PV's restants)${ligneoptionnelle2}\n${message.author.username}, vous êtes mort avec le boss, vous ne réussissez pas à passer cet étage, une prochaine fois peut-être?`)
              }
            }
          } 
        }
      
        if(message.content === "!donjon 3 a" && uclassen > 0){
          if(uPv <= 0  && uetage3 <= 16) message.channel.send("Tu es trop faible pour combattre");
          if(uetage3 >= 17) message.channel.send(`Vous avez déjà fini ce donjon, faites ${trucbizarre}!donjon 3 reset${trucbizarre} pour le reset.`)
          if(uPv > 0 && uetage3 <= 16 && udonjonunlock3!=0) {
           let turncombat = 0
           let pvjoueur1 = uPv
           let pvbaseboss = bosspvmax3
            while(pvjoueur1 > 0 && bosspvmax3 > 0) {
      
              turncombat++
              bosspvmax3 = bosspvmax3-coupplayer3
              pvjoueur1= pvjoueur1 - coupboss3
              coupplayer3  = coupplayer3 *1.1
              coupboss3 = coupboss3 *1.1
        
              if(pvjoueur1 <= 0 && bosspvmax3 > 0){
      
                Pv[message.author.id] = {
                  Pv: pet40effect1 + pet19effect1 + pet25effect1
                };
               nbchest[message.author.id] = {
                nbchest: Math.floor(Math.random() * 100) + 1
               };
                nbchest2[message.author.id] = {
                  nbchest2: Math.floor(Math.random() * 100) + 1
               };
               nbchest3[message.author.id] = {
                nbchest3: Math.floor(Math.random() * 100) + 1
                     };
                     nbchest4[message.author.id] = {
                      nbchest4: Math.floor(Math.random() * 100) + 1
                   };
                   nbchest5[message.author.id] = {
                    nbchest5: Math.floor(Math.random() * 100) + 1
                 };
          
              usepvpot[message.author.id] = {
              usepvpot: uusepvpot - multiplevariablepv
              };
               usedefpot[message.author.id] = {
                     usedefpot: uusedefpot - multiplevariabledef
                  };
                    useatkpot[message.author.id] = {
                          useatkpot: uuseatkpot - multiplevariableatk
                  };
          
        
               fs.writeFile("./Pv.json", JSON.stringify(Pv), (err) => {
                 if (err) console.log(err)
               });
               fs.writeFile("./usepvpot.json", JSON.stringify(usepvpot), (err) => {
                if (err) console.log(err)
              });
              fs.writeFile("./useatkpot.json", JSON.stringify(useatkpot), (err) => {
                if (err) console.log(err)
              });
              fs.writeFile("./usedefpot.json", JSON.stringify(usedefpot), (err) => {
                if (err) console.log(err)
              });
                       fs.writeFile("./nbchest.json", JSON.stringify(nbchest), (err) => {
                        if (err) console.log(err)
                      });
                      fs.writeFile("./nbchest2.json", JSON.stringify(nbchest2), (err) => {
                        if (err) console.log(err)
                      });
                      fs.writeFile("./nbchest3.json", JSON.stringify(nbchest3), (err) => {
                        if (err) console.log(err)
                      });
                      fs.writeFile("./nbchest4.json", JSON.stringify(nbchest4), (err) => {
                        if (err) console.log(err)
                      });
                      fs.writeFile("./nbchest5.json", JSON.stringify(nbchest5), (err) => {
                        if (err) console.log(err)
                      });
                      let ligneoptionnelle1 = `\n...\n**__Tour ${turncombat}:__** \n**${message.author.username}** attaque **${bossname3}**, il perd ${Math.trunc(coupplayer3)} PV (${Math.trunc(bosspvmax3)} PV's restants)\n**${bossname3}** attaque **${message.author.username}**, il perd ${Math.trunc(coupboss3)} PV (0 PV's restants)`
                      if(turncombat === 1) {
                       ligneoptionnelle1 = ""
                     }
                message.channel.send(`Combat entre <@${message.author.id}> et ${bossname3}\n**__Tour 1:__**\n**${message.author.username}** attaque **${bossname3}**, il perd ${Math.trunc(coupplayer3/(Math.pow(1.1, turncombat)))} PV (${Math.trunc(pvbaseboss - (coupplayer3/ (Math.pow(1.1, turncombat))))} PV's restants)\n${bossname3} attaque ${message.author.username}, il perd ${Math.trunc(coupboss3/ (Math.pow(1.1, turncombat) ))} PV (${Math.trunc(uPv - (coupboss3/(Math.pow(1.1, turncombat))))} PV's restants)${ligneoptionnelle1}\n${message.author.username} a perdu face a ${bossname3}.`)
              }
      
              if(pvjoueur1 > 0 && bosspvmax3 <= 0){
                let ligneoptionnelle = `\n...\n**__Tour ${turncombat}:__** \n**${message.author.username}** attaque **${bossname3}**, il perd ${Math.trunc(coupplayer3)} PV (0 PV's restants)`
                if(turncombat === 1) {
                 ligneoptionnelle = ""
               }
                etage3[message.author.id] = {
                  etage3: uetage3 + 1
                 };
                 xp[message.author.id] = {
                  xp: xpactuel + Math.trunc(xpdropx3)
                 };
                 Pieceor[message.author.id] = {
                  Pieceor: uPieceor + Math.trunc(goldrop3)
                 };
                 
                  Pv[message.author.id] = {
                    Pv: Math.trunc(pvjoueur1)
                  };
                
                 boxcommune[message.author.id] = {
                   boxcommune: uboxcommune + dcc3
                 };
                 boxrare[message.author.id] = {
                  boxrare: uboxrare + dcr3
                };
                 nbchest[message.author.id] = {
                  nbchest: Math.floor(Math.random() * 100) + 1
                 };
                  nbchest2[message.author.id] = {
                    nbchest2: Math.floor(Math.random() * 100) + 1
                 };
                 nbchest3[message.author.id] = {
                  nbchest3: Math.floor(Math.random() * 100) + 1
                       };
                       nbchest4[message.author.id] = {
                        nbchest4: Math.floor(Math.random() * 100) + 1
                     };
                     nbchest5[message.author.id] = {
                      nbchest5: Math.floor(Math.random() * 100) + 1
                   };
      
                                                                                    usepvpot[message.author.id] = {
                                                                                     usepvpot: uusepvpot - multiplevariablepv
                                                                                     };
                                                                                      usedefpot[message.author.id] = {
                                                                                            usedefpot: uusedefpot - multiplevariabledef
                                                                                         };
                                                                                           useatkpot[message.author.id] = {
                                                                                                 useatkpot: uuseatkpot - multiplevariableatk
                                                                                         };
      
                  
      
                  fs.writeFile("./etage3.json", JSON.stringify(etage3), (err) => {
                   if (err) console.log(err)
                   });
                  fs.writeFile("./Pv.json", JSON.stringify(Pv), (err) => {
                    if (err) console.log(err)
                  });
                 fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
                  if (err) console.log(err)
                 });
                         fs.writeFile("./experience.json", JSON.stringify(xp), (err) => {
                           if (err) console.log(err)
                           });
                           fs.writeFile("./boxcommune.json", JSON.stringify(boxcommune), (err) => {
                             if (err) console.log(err)
                             });
                             fs.writeFile("./boxrare.json", JSON.stringify(boxrare), (err) => {
                              if (err) console.log(err)
                              });
                                   fs.writeFile("./nbchest.json", JSON.stringify(nbchest), (err) => {
                                     if (err) console.log(err)
                                     });
                                     fs.writeFile("./nbchest2.json", JSON.stringify(nbchest2), (err) => {
                                       if (err) console.log(err)
                                       });
                                       fs.writeFile("./nbchest3.json", JSON.stringify(nbchest3), (err) => {
                                         if (err) console.log(err)
                                         });
                                         fs.writeFile("./nbchest4.json", JSON.stringify(nbchest4), (err) => {
                                           if (err) console.log(err)
                                           });
                                           fs.writeFile("./nbchest5.json", JSON.stringify(nbchest5), (err) => {
                                             if (err) console.log(err)
                                             });
                                             fs.writeFile("./usepvpot.json", JSON.stringify(usepvpot), (err) => {
                                               if (err) console.log(err)
                                             });
                                             fs.writeFile("./useatkpot.json", JSON.stringify(useatkpot), (err) => {
                                               if (err) console.log(err)
                                             });
                                             fs.writeFile("./usedefpot.json", JSON.stringify(usedefpot), (err) => {
                                               if (err) console.log(err)
                                             });
      
      
      
                message.channel.send(`Combat entre <@${message.author.id}> et ${bossname3}\n**__Tour 1:__**\n**${message.author.username}** attaque **${bossname3}**, il perd ${Math.trunc(coupplayer3/(Math.pow(1.1, turncombat)))} PV (${Math.trunc(pvbaseboss - (coupplayer3/ (Math.pow(1.1, turncombat))))} PV's restants)\n**${bossname3}** attaque **${message.author.username}**, il perd ${Math.trunc(coupboss3/ (Math.pow(1.1, turncombat)) )} PV (${Math.trunc(uPv - (coupboss3/(Math.pow(1.1, turncombat))))} PV's restants)${ligneoptionnelle}\n\nBien joué ${message.author.username} vous avez battu ${bossname3}!\nVous gagnez ${Math.trunc(goldrop3)} ${POemote} ainsi que ${Math.trunc(xpdropx3)} ${xp1emote}${messagedropcommon3}${messagedroprare3}`)
              }
                if(pvjoueur1 <= 0 && bosspvmax3 <= 0){
                  let ligneoptionnelle2 = `\n...\n**__Tour ${turncombat}:__** \n**${message.author.username}** attaque **${bossname3}**, il perd ${Math.trunc(coupplayer3)} PV (0 PV's restants)\n**${bossname3}** attaque **${message.author.username}**, il perd ${Math.trunc(coupboss3)} PV (0 PV's restants)`
                  if(turncombat === 1) {
                   ligneoptionnelle1 = ""
                 }
                  Pv[message.author.id] = {
                    Pv: pet40effect1 + pet19effect1 + pet25effect1
                  };
                 nbchest[message.author.id] = {
                  nbchest: Math.floor(Math.random() * 100) + 1
                 };
                  nbchest2[message.author.id] = {
                    nbchest2: Math.floor(Math.random() * 100) + 1
                 };
                 nbchest3[message.author.id] = {
                  nbchest3: Math.floor(Math.random() * 100) + 1
                       };
                       nbchest4[message.author.id] = {
                        nbchest4: Math.floor(Math.random() * 100) + 1
                     };
                     nbchest5[message.author.id] = {
                      nbchest5: Math.floor(Math.random() * 100) + 1
                   };
            
                usepvpot[message.author.id] = {
                usepvpot: uusepvpot - multiplevariablepv
                };
                 usedefpot[message.author.id] = {
                       usedefpot: uusedefpot - multiplevariabledef
                    };
                      useatkpot[message.author.id] = {
                            useatkpot: uuseatkpot - multiplevariableatk
                    };
            
          
                 fs.writeFile("./Pv.json", JSON.stringify(Pv), (err) => {
                   if (err) console.log(err)
                 });
                 fs.writeFile("./usepvpot.json", JSON.stringify(usepvpot), (err) => {
                  if (err) console.log(err)
                });
                fs.writeFile("./useatkpot.json", JSON.stringify(useatkpot), (err) => {
                  if (err) console.log(err)
                });
                fs.writeFile("./usedefpot.json", JSON.stringify(usedefpot), (err) => {
                  if (err) console.log(err)
                });
                         fs.writeFile("./nbchest.json", JSON.stringify(nbchest), (err) => {
                          if (err) console.log(err)
                        });
                        fs.writeFile("./nbchest2.json", JSON.stringify(nbchest2), (err) => {
                          if (err) console.log(err)
                        });
                        fs.writeFile("./nbchest3.json", JSON.stringify(nbchest3), (err) => {
                          if (err) console.log(err)
                        });
                        fs.writeFile("./nbchest4.json", JSON.stringify(nbchest4), (err) => {
                          if (err) console.log(err)
                        });
                        fs.writeFile("./nbchest5.json", JSON.stringify(nbchest5), (err) => {
                          if (err) console.log(err)
                        });
      
                message.channel.send(`Combat entre <@${message.author.id}> et ${bossname3}\n**__Tour 1:__**\n**${message.author.username}** attaque **${bossname3}**, il perd ${Math.trunc(coupplayer3/(Math.pow(1.1, turncombat)))} PV (${Math.trunc(pvbaseboss - (coupplayer3/ (Math.pow(1.1, turncombat))))} PV's restants)\n**${bossname3}** attaque **${message.author.username}**, il perd ${Math.trunc(coupboss3/ (Math.pow(1.1, turncombat)))} PV (${Math.trunc(uPv - (coupboss3 / (Math.pow(1.1, turncombat))))} PV's restants)${ligneoptionnelle2}\n${message.author.username}, vous êtes mort avec le boss, vous ne réussissez pas à passer cet étage, une prochaine fois peut-être?`)
                }
              }
            } 
          }
          if(message.content === "!donjon 4 a" && uclassen > 0){
            if(uPv <= 0  && uetage4 <= 17) message.channel.send("Tu es trop faible pour combattre");
            if(uetage4 >= 18) message.channel.send(`Vous avez déjà fini ce donjon, faites ${trucbizarre}!donjon 4 reset${trucbizarre} pour le reset.`)
            if(uPv > 0 && uetage4 <= 17 && udonjonunlock4 != 0) {
             let turncombat = 0
             let pvjoueur1 = uPv
             let pvbaseboss = bosspvmax4
              while(pvjoueur1 > 0 && bosspvmax4 > 0) {
        
                turncombat++
                bosspvmax4 = bosspvmax4-coupplayer4
                pvjoueur1= pvjoueur1 - coupboss4
                coupplayer4  = coupplayer4 *1.1
                coupboss4 = coupboss4 *1.1
          
                if(pvjoueur1 <= 0 && bosspvmax4 > 0){
        
                  Pv[message.author.id] = {
                    Pv: pet40effect1 + pet19effect1 + pet25effect1
                  };
                 nbchest[message.author.id] = {
                  nbchest: Math.floor(Math.random() * 100) + 1
                 };
                  nbchest2[message.author.id] = {
                    nbchest2: Math.floor(Math.random() * 100) + 1
                 };
                 nbchest3[message.author.id] = {
                  nbchest3: Math.floor(Math.random() * 100) + 1
                       };
                       nbchest4[message.author.id] = {
                        nbchest4: Math.floor(Math.random() * 100) + 1
                     };
                     nbchest5[message.author.id] = {
                      nbchest5: Math.floor(Math.random() * 100) + 1
                   };
            
                usepvpot[message.author.id] = {
                usepvpot: uusepvpot - multiplevariablepv
                };
                 usedefpot[message.author.id] = {
                       usedefpot: uusedefpot - multiplevariabledef
                    };
                      useatkpot[message.author.id] = {
                            useatkpot: uuseatkpot - multiplevariableatk
                    };
            
          
                 fs.writeFile("./Pv.json", JSON.stringify(Pv), (err) => {
                   if (err) console.log(err)
                 });
                 fs.writeFile("./usepvpot.json", JSON.stringify(usepvpot), (err) => {
                  if (err) console.log(err)
                });
                fs.writeFile("./useatkpot.json", JSON.stringify(useatkpot), (err) => {
                  if (err) console.log(err)
                });
                fs.writeFile("./usedefpot.json", JSON.stringify(usedefpot), (err) => {
                  if (err) console.log(err)
                });
                         fs.writeFile("./nbchest.json", JSON.stringify(nbchest), (err) => {
                          if (err) console.log(err)
                        });
                        fs.writeFile("./nbchest2.json", JSON.stringify(nbchest2), (err) => {
                          if (err) console.log(err)
                        });
                        fs.writeFile("./nbchest3.json", JSON.stringify(nbchest3), (err) => {
                          if (err) console.log(err)
                        });
                        fs.writeFile("./nbchest4.json", JSON.stringify(nbchest4), (err) => {
                          if (err) console.log(err)
                        });
                        fs.writeFile("./nbchest5.json", JSON.stringify(nbchest5), (err) => {
                          if (err) console.log(err)
                        });
                        let ligneoptionnelle1 = `\n...\n**__Tour ${turncombat}:__** \n**${message.author.username}** attaque **${bossname4}**, il perd ${Math.trunc(coupplayer4)} PV (${Math.trunc(bosspvmax4)} PV's restants)\n**${bossname4}** attaque **${message.author.username}**, il perd ${Math.trunc(coupboss4)} PV (0 PV's restants)`
                        if(turncombat === 1) {
                         ligneoptionnelle1 = ""
                       }
                  message.channel.send(`Combat entre <@${message.author.id}> et ${bossname4}\n**__Tour 1:__**\n**${message.author.username}** attaque **${bossname4}**, il perd ${Math.trunc(coupplayer4/(Math.pow(1.1, turncombat)))} PV (${Math.trunc(pvbaseboss - (coupplayer4/ (Math.pow(1.1, turncombat))))} PV's restants)\n${bossname4} attaque ${message.author.username}, il perd ${Math.trunc(coupboss4/ (Math.pow(1.1, turncombat) ))} PV (${Math.trunc(uPv - (coupboss4/(Math.pow(1.1, turncombat))))} PV's restants)${ligneoptionnelle1}\n${message.author.username} a perdu face a ${bossname4}.`)
                }
        
                if(pvjoueur1 > 0 && bosspvmax4 <= 0){
                  let ligneoptionnelle = `\n...\n**__Tour ${turncombat}:__** \n**${message.author.username}** attaque **${bossname4}**, il perd ${Math.trunc(coupplayer4)} PV (0 PV's restants)`
                  if(turncombat === 1) {
                   ligneoptionnelle = ""
                 }
                  etage4[message.author.id] = {
                    etage4: uetage4 + 1
                   };
                   xp[message.author.id] = {
                    xp: xpactuel + Math.trunc(xpdropx4)
                   };
                   Pieceor[message.author.id] = {
                    Pieceor: uPieceor + Math.trunc(goldrop4)
                   };
                   
                    Pv[message.author.id] = {
                      Pv: Math.trunc(pvjoueur1)
                    };
               
         
               
                   item29[message.author.id] = {
                     item29: uitem29 + nb29
                   };
                  
                   boxcommune[message.author.id] = {
                     boxcommune: uboxcommune + dcc4
                   };
                   boxrare[message.author.id] = {
                    boxrare: uboxrare + dcr4
                  };
                  boxepique[message.author.id] = {
                    boxepique: uboxepique + dce4
                  };
                   nbchest[message.author.id] = {
                    nbchest: Math.floor(Math.random() * 100) + 1
                   };
                    nbchest2[message.author.id] = {
                      nbchest2: Math.floor(Math.random() * 100) + 1
                   };
                   nbchest3[message.author.id] = {
                    nbchest3: Math.floor(Math.random() * 100) + 1
                         };
                         nbchest4[message.author.id] = {
                          nbchest4: Math.floor(Math.random() * 100) + 1
                       };
                       nbchest5[message.author.id] = {
                        nbchest5: Math.floor(Math.random() * 100) + 1
                     };
        
                                                                                      usepvpot[message.author.id] = {
                                                                                       usepvpot: uusepvpot - multiplevariablepv
                                                                                       };
                                                                                        usedefpot[message.author.id] = {
                                                                                              usedefpot: uusedefpot - multiplevariabledef
                                                                                           };
                                                                                             useatkpot[message.author.id] = {
                                                                                                   useatkpot: uuseatkpot - multiplevariableatk
                                                                                           };
        
                    
                                                                                           fs.writeFile("./item29.json", JSON.stringify(item29), (err) => {
                                                                                            if (err) console.log(err)
                                                                                            });
        
                                                                                            fs.writeFile("./etage4.json", JSON.stringify(etage4), (err) => {
                                                                                                if (err) console.log(err)
                                                                                                });
                    fs.writeFile("./boxepique.json", JSON.stringify(boxepique), (err) => {
                     if (err) console.log(err)
                     });
                    fs.writeFile("./Pv.json", JSON.stringify(Pv), (err) => {
                      if (err) console.log(err)
                    });
                   fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
                    if (err) console.log(err)
                   });
                           fs.writeFile("./experience.json", JSON.stringify(xp), (err) => {
                             if (err) console.log(err)
                             });
                             fs.writeFile("./boxcommune.json", JSON.stringify(boxcommune), (err) => {
                               if (err) console.log(err)
                               });
                               fs.writeFile("./boxrare.json", JSON.stringify(boxrare), (err) => {
                                if (err) console.log(err)
                                });
                                     fs.writeFile("./nbchest.json", JSON.stringify(nbchest), (err) => {
                                       if (err) console.log(err)
                                       });
                                       fs.writeFile("./nbchest2.json", JSON.stringify(nbchest2), (err) => {
                                         if (err) console.log(err)
                                         });
                                         fs.writeFile("./nbchest3.json", JSON.stringify(nbchest3), (err) => {
                                           if (err) console.log(err)
                                           });
                                           fs.writeFile("./nbchest4.json", JSON.stringify(nbchest4), (err) => {
                                             if (err) console.log(err)
                                             });
                                             fs.writeFile("./nbchest5.json", JSON.stringify(nbchest5), (err) => {
                                               if (err) console.log(err)
                                               });
                                               fs.writeFile("./usepvpot.json", JSON.stringify(usepvpot), (err) => {
                                                 if (err) console.log(err)
                                               });
                                               fs.writeFile("./useatkpot.json", JSON.stringify(useatkpot), (err) => {
                                                 if (err) console.log(err)
                                               });
                                               fs.writeFile("./usedefpot.json", JSON.stringify(usedefpot), (err) => {
                                                 if (err) console.log(err)
                                               });
        
        
        
                  message.channel.send(`Combat entre <@${message.author.id}> et ${bossname4}\n**__Tour 1:__**\n**${message.author.username}** attaque **${bossname4}**, il perd ${Math.trunc(coupplayer4/(Math.pow(1.1, turncombat)))} PV (${Math.trunc(pvbaseboss - (coupplayer4/ (Math.pow(1.1, turncombat))))} PV's restants)\n**${bossname4}** attaque **${message.author.username}**, il perd ${Math.trunc(coupboss4/ (Math.pow(1.1, turncombat)) )} PV (${Math.trunc(uPv - (coupboss4/(Math.pow(1.1, turncombat))))} PV's restants)${ligneoptionnelle}\n\nBien joué ${message.author.username} vous avez battu ${bossname4}!\nVous gagnez ${Math.trunc(goldrop4)} ${POemote} ainsi que ${Math.trunc(xpdropx4)} ${xp1emote}${messagedropcommon4}${messagedroprare4}${messagedropepic4}`)
                }
                  if(pvjoueur1 <= 0 && bosspvmax4 <= 0){
                    let ligneoptionnelle2 = `\n...\n**__Tour ${turncombat}:__** \n**${message.author.username}** attaque **${bossname4}**, il perd ${Math.trunc(coupplayer4)} PV (0 PV's restants)\n**${bossname4}** attaque **${message.author.username}**, il perd ${Math.trunc(coupboss4)} PV (0 PV's restants)`
                    if(turncombat === 1) {
                     ligneoptionnelle1 = ""
                   }
                    Pv[message.author.id] = {
                      Pv: pet40effect1 + pet19effect1 + pet25effect1
                    };
                   nbchest[message.author.id] = {
                    nbchest: Math.floor(Math.random() * 100) + 1
                   };
                    nbchest2[message.author.id] = {
                      nbchest2: Math.floor(Math.random() * 100) + 1
                   };
                   nbchest3[message.author.id] = {
                    nbchest3: Math.floor(Math.random() * 100) + 1
                         };
                         nbchest4[message.author.id] = {
                          nbchest4: Math.floor(Math.random() * 100) + 1
                       };
                       nbchest5[message.author.id] = {
                        nbchest5: Math.floor(Math.random() * 100) + 1
                     };
              
                  usepvpot[message.author.id] = {
                  usepvpot: uusepvpot - multiplevariablepv
                  };
                   usedefpot[message.author.id] = {
                         usedefpot: uusedefpot - multiplevariabledef
                      };
                        useatkpot[message.author.id] = {
                              useatkpot: uuseatkpot - multiplevariableatk
                      };
              
            
                   fs.writeFile("./Pv.json", JSON.stringify(Pv), (err) => {
                     if (err) console.log(err)
                   });
                   fs.writeFile("./usepvpot.json", JSON.stringify(usepvpot), (err) => {
                    if (err) console.log(err)
                  });
                  fs.writeFile("./useatkpot.json", JSON.stringify(useatkpot), (err) => {
                    if (err) console.log(err)
                  });
                  fs.writeFile("./usedefpot.json", JSON.stringify(usedefpot), (err) => {
                    if (err) console.log(err)
                  });
                           fs.writeFile("./nbchest.json", JSON.stringify(nbchest), (err) => {
                            if (err) console.log(err)
                          });
                          fs.writeFile("./nbchest2.json", JSON.stringify(nbchest2), (err) => {
                            if (err) console.log(err)
                          });
                          fs.writeFile("./nbchest3.json", JSON.stringify(nbchest3), (err) => {
                            if (err) console.log(err)
                          });
                          fs.writeFile("./nbchest4.json", JSON.stringify(nbchest4), (err) => {
                            if (err) console.log(err)
                          });
                          fs.writeFile("./nbchest5.json", JSON.stringify(nbchest5), (err) => {
                            if (err) console.log(err)
                          });
        
                  message.channel.send(`Combat entre <@${message.author.id}> et ${bossname4}\n**__Tour 1:__**\n**${message.author.username}** attaque **${bossname4}**, il perd ${Math.trunc(coupplayer4/(Math.pow(1.1, turncombat)))} PV (${Math.trunc(pvbaseboss - (coupplayer4/ (Math.pow(1.1, turncombat))))} PV's restants)\n**${bossname4}** attaque **${message.author.username}**, il perd ${Math.trunc(coupboss4/ (Math.pow(1.1, turncombat)))} PV (${Math.trunc(uPv - (coupboss4 / (Math.pow(1.1, turncombat))))} PV's restants)${ligneoptionnelle2}\n${message.author.username}, vous êtes mort avec le boss, vous ne réussissez pas à passer cet étage, une prochaine fois peut-être?`)
                  }
                }
              } 
            }
            if(message.content === "!donjon 5 a" && uclassen > 0){
              if(uPv <= 0  && uetage5 <= 11) message.channel.send("Tu es trop faible pour combattre");
              if(uetage5 >= 12) message.channel.send(`Vous avez déjà fini ce donjon, faites ${trucbizarre}!donjon 5 reset${trucbizarre} pour le reset.`)
              if(uPv > 0 && uetage5 <= 11 && udonjonunlock5 != 0) {
               let turncombat = 0
               let pvjoueur1 = uPv
               let pvbaseboss = bosspvmax5
                while(pvjoueur1 > 0 && bosspvmax5 > 0) {
          
                  turncombat++
                  bosspvmax5 = bosspvmax5-coupplayer5
                  pvjoueur1= pvjoueur1 - coupboss5
                  coupplayer5  = coupplayer5 *1.1
                  coupboss5 = coupboss5 *1.1
            
                  if(pvjoueur1 <= 0 && bosspvmax5 > 0){
          
                    Pv[message.author.id] = {
                      Pv: pet40effect1 + pet19effect1 + pet25effect1
                    };
                   nbchest[message.author.id] = {
                    nbchest: Math.floor(Math.random() * 100) + 1
                   };
                    nbchest2[message.author.id] = {
                      nbchest2: Math.floor(Math.random() * 100) + 1
                   };
                   nbchest3[message.author.id] = {
                    nbchest3: Math.floor(Math.random() * 100) + 1
                         };
                         nbchest4[message.author.id] = {
                          nbchest4: Math.floor(Math.random() * 100) + 1
                       };
                       nbchest5[message.author.id] = {
                        nbchest5: Math.floor(Math.random() * 100) + 1
                     };
              
                  usepvpot[message.author.id] = {
                  usepvpot: uusepvpot - multiplevariablepv
                  };
                   usedefpot[message.author.id] = {
                         usedefpot: uusedefpot - multiplevariabledef
                      };
                        useatkpot[message.author.id] = {
                              useatkpot: uuseatkpot - multiplevariableatk
                      };
              
            
                   fs.writeFile("./Pv.json", JSON.stringify(Pv), (err) => {
                     if (err) console.log(err)
                   });
                   fs.writeFile("./usepvpot.json", JSON.stringify(usepvpot), (err) => {
                    if (err) console.log(err)
                  });
                  fs.writeFile("./useatkpot.json", JSON.stringify(useatkpot), (err) => {
                    if (err) console.log(err)
                  });
                  fs.writeFile("./usedefpot.json", JSON.stringify(usedefpot), (err) => {
                    if (err) console.log(err)
                  });
                           fs.writeFile("./nbchest.json", JSON.stringify(nbchest), (err) => {
                            if (err) console.log(err)
                          });
                          fs.writeFile("./nbchest2.json", JSON.stringify(nbchest2), (err) => {
                            if (err) console.log(err)
                          });
                          fs.writeFile("./nbchest3.json", JSON.stringify(nbchest3), (err) => {
                            if (err) console.log(err)
                          });
                          fs.writeFile("./nbchest4.json", JSON.stringify(nbchest4), (err) => {
                            if (err) console.log(err)
                          });
                          fs.writeFile("./nbchest5.json", JSON.stringify(nbchest5), (err) => {
                            if (err) console.log(err)
                          });
                          let ligneoptionnelle1 = `\n...\n**__Tour ${turncombat}:__** \n**${message.author.username}** attaque **${bossname5}**, il perd ${Math.trunc(coupplayer5)} PV (${Math.trunc(bosspvmax5)} PV's restants)\n**${bossname5}** attaque **${message.author.username}**, il perd ${Math.trunc(coupboss5)} PV (0 PV's restants)`
                          if(turncombat === 1) {
                           ligneoptionnelle1 = ""
                         }
                    message.channel.send(`Combat entre <@${message.author.id}> et ${bossname5}\n**__Tour 1:__**\n**${message.author.username}** attaque **${bossname5}**, il perd ${Math.trunc(coupplayer5/(Math.pow(1.1, turncombat)))} PV (${Math.trunc(pvbaseboss - (coupplayer5/ (Math.pow(1.1, turncombat))))} PV's restants)\n${bossname5} attaque ${message.author.username}, il perd ${Math.trunc(coupboss5/ (Math.pow(1.1, turncombat) ))} PV (${Math.trunc(uPv - (coupboss5/(Math.pow(1.1, turncombat))))} PV's restants)${ligneoptionnelle1}\n${message.author.username} a perdu face a ${bossname5}.`)
                  }
          
                  if(pvjoueur1 > 0 && bosspvmax5 <= 0){
                    let ligneoptionnelle = `\n...\n**__Tour ${turncombat}:__** \n**${message.author.username}** attaque **${bossname5}**, il perd ${Math.trunc(coupplayer5)} PV (0 PV's restants)`
                    if(turncombat === 1) {
                     ligneoptionnelle = ""
                   }
                    etage5[message.author.id] = {
                      etage5: uetage5 + 1
                     };
                     xp[message.author.id] = {
                      xp: xpactuel + Math.trunc(xpdropx5)
                     };
                     Pieceor[message.author.id] = {
                      Pieceor: uPieceor + Math.trunc(goldrop5)
                     };
                     
                      Pv[message.author.id] = {
                        Pv: Math.trunc(pvjoueur1)
                      };
                 
           
                 
                     item23[message.author.id] = {
                       item23: uitem23 + nb23
                     };
                     item39[message.author.id] = {
                      item39: uitem39 + nb39
                    };
                    item27[message.author.id] = {
                      item27: uitem27 + nb27
                    };
                    item26[message.author.id] = {
                      item26: uitem26 + nb26
                    };
                    item28[message.author.id] = {
                      item28: uitem28 + nb28
                    };
                     boxcommune[message.author.id] = {
                       boxcommune: uboxcommune + dcc5
                     };
                     boxrare[message.author.id] = {
                      boxrare: uboxrare + dcr5
                    };
                    boxepique[message.author.id] = {
                      boxepique: uboxepique + dce5
                    };
                    mysterybox[message.author.id] = {
                      mysterybox: umysterybox + dcm5
                    };
                     nbchest[message.author.id] = {
                      nbchest: Math.floor(Math.random() * 100) + 1
                     };
                      nbchest2[message.author.id] = {
                        nbchest2: Math.floor(Math.random() * 100) + 1
                     };
                     nbchest3[message.author.id] = {
                      nbchest3: Math.floor(Math.random() * 100) + 1
                           };
                           nbchest4[message.author.id] = {
                            nbchest4: Math.floor(Math.random() * 100) + 1
                         };
                         nbchest5[message.author.id] = {
                          nbchest5: Math.floor(Math.random() * 100) + 1
                       };
          
                                                                                        usepvpot[message.author.id] = {
                                                                                         usepvpot: uusepvpot - multiplevariablepv
                                                                                         };
                                                                                          usedefpot[message.author.id] = {
                                                                                                usedefpot: uusedefpot - multiplevariabledef
                                                                                             };
                                                                                               useatkpot[message.author.id] = {
                                                                                                     useatkpot: uuseatkpot - multiplevariableatk
                                                                                             };
          
                                                                                             fs.writeFile("./item23.json", JSON.stringify(item23), (err) => {
                                                                                              if (err) console.log(err)
                                                                                              });
                                                                                             fs.writeFile("./item39.json", JSON.stringify(item39), (err) => {
                                                                                              if (err) console.log(err)
                                                                                              });
                                                                                              fs.writeFile("./item28.json", JSON.stringify(item28), (err) => {
                                                                                                if (err) console.log(err)
                                                                                                }); 
                                                                                                fs.writeFile("./item26.json", JSON.stringify(item26), (err) => {
                                                                                                  if (err) console.log(err)
                                                                                                  });
                                                                                                  fs.writeFile("./item27.json", JSON.stringify(item27), (err) => {
                                                                                                    if (err) console.log(err)
                                                                                                    });
                                                                                              fs.writeFile("./etage5.json", JSON.stringify(etage5), (err) => {
                                                                                                  if (err) console.log(err)
                                                                                                  });
                      fs.writeFile("./boxepique.json", JSON.stringify(boxepique), (err) => {
                       if (err) console.log(err)
                       });
                       fs.writeFile("./mysterybox.json", JSON.stringify(mysterybox), (err) => {
                          if (err) console.log(err)
                          });
                      fs.writeFile("./Pv.json", JSON.stringify(Pv), (err) => {
                        if (err) console.log(err)
                      });
                     fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
                      if (err) console.log(err)
                     });
                             fs.writeFile("./experience.json", JSON.stringify(xp), (err) => {
                               if (err) console.log(err)
                               });
                               fs.writeFile("./boxcommune.json", JSON.stringify(boxcommune), (err) => {
                                 if (err) console.log(err)
                                 });
                                 fs.writeFile("./boxrare.json", JSON.stringify(boxrare), (err) => {
                                  if (err) console.log(err)
                                  });
                                       fs.writeFile("./nbchest.json", JSON.stringify(nbchest), (err) => {
                                         if (err) console.log(err)
                                         });
                                         fs.writeFile("./nbchest2.json", JSON.stringify(nbchest2), (err) => {
                                           if (err) console.log(err)
                                           });
                                           fs.writeFile("./nbchest3.json", JSON.stringify(nbchest3), (err) => {
                                             if (err) console.log(err)
                                             });
                                             fs.writeFile("./nbchest4.json", JSON.stringify(nbchest4), (err) => {
                                               if (err) console.log(err)
                                               });
                                               fs.writeFile("./nbchest5.json", JSON.stringify(nbchest5), (err) => {
                                                 if (err) console.log(err)
                                                 });
                                                 fs.writeFile("./usepvpot.json", JSON.stringify(usepvpot), (err) => {
                                                   if (err) console.log(err)
                                                 });
                                                 fs.writeFile("./useatkpot.json", JSON.stringify(useatkpot), (err) => {
                                                   if (err) console.log(err)
                                                 });
                                                 fs.writeFile("./usedefpot.json", JSON.stringify(usedefpot), (err) => {
                                                   if (err) console.log(err)
                                                 });
          
          
          
                    message.channel.send(`Combat entre <@${message.author.id}> et ${bossname5}\n**__Tour 1:__**\n**${message.author.username}** attaque **${bossname5}**, il perd ${Math.trunc(coupplayer5/(Math.pow(1.1, turncombat)))} PV (${Math.trunc(pvbaseboss - (coupplayer5/ (Math.pow(1.1, turncombat))))} PV's restants)\n**${bossname5}** attaque **${message.author.username}**, il perd ${Math.trunc(coupboss5/ (Math.pow(1.1, turncombat)) )} PV (${Math.trunc(uPv - (coupboss5/(Math.pow(1.1, turncombat))))} PV's restants)${ligneoptionnelle}\n\nBien joué ${message.author.username} vous avez battu ${bossname5}!\nVous gagnez ${Math.trunc(goldrop5)} ${POemote} ainsi que ${Math.trunc(xpdropx5)} ${xp1emote}${pepic23}${pepic39}${pepic26}${pepic27}${pepic28}${messagedropcommon5}${messagedroprare5}${messagedropepic5}${messagedropmystere5}`)
                  }
                    if(pvjoueur1 <= 0 && bosspvmax5 <= 0){
                      let ligneoptionnelle2 = `\n...\n**__Tour ${turncombat}:__** \n**${message.author.username}** attaque **${bossname5}**, il perd ${Math.trunc(coupplayer5)} PV (0 PV's restants)\n**${bossname5}** attaque **${message.author.username}**, il perd ${Math.trunc(coupboss5)} PV (0 PV's restants)`
                      if(turncombat === 1) {
                       ligneoptionnelle1 = ""
                     }
                      Pv[message.author.id] = {
                        Pv: pet40effect1 + pet19effect1 + pet25effect1
                      };
                     nbchest[message.author.id] = {
                      nbchest: Math.floor(Math.random() * 100) + 1
                     };
                      nbchest2[message.author.id] = {
                        nbchest2: Math.floor(Math.random() * 100) + 1
                     };
                     nbchest3[message.author.id] = {
                      nbchest3: Math.floor(Math.random() * 100) + 1
                           };
                           nbchest4[message.author.id] = {
                            nbchest4: Math.floor(Math.random() * 100) + 1
                         };
                         nbchest5[message.author.id] = {
                          nbchest5: Math.floor(Math.random() * 100) + 1
                       };
                
                    usepvpot[message.author.id] = {
                    usepvpot: uusepvpot - multiplevariablepv
                    };
                     usedefpot[message.author.id] = {
                           usedefpot: uusedefpot - multiplevariabledef
                        };
                          useatkpot[message.author.id] = {
                                useatkpot: uuseatkpot - multiplevariableatk
                        };
                
              
                     fs.writeFile("./Pv.json", JSON.stringify(Pv), (err) => {
                       if (err) console.log(err)
                     });
                     fs.writeFile("./usepvpot.json", JSON.stringify(usepvpot), (err) => {
                      if (err) console.log(err)
                    });
                    fs.writeFile("./useatkpot.json", JSON.stringify(useatkpot), (err) => {
                      if (err) console.log(err)
                    });
                    fs.writeFile("./usedefpot.json", JSON.stringify(usedefpot), (err) => {
                      if (err) console.log(err)
                    });
                             fs.writeFile("./nbchest.json", JSON.stringify(nbchest), (err) => {
                              if (err) console.log(err)
                            });
                            fs.writeFile("./nbchest2.json", JSON.stringify(nbchest2), (err) => {
                              if (err) console.log(err)
                            });
                            fs.writeFile("./nbchest3.json", JSON.stringify(nbchest3), (err) => {
                              if (err) console.log(err)
                            });
                            fs.writeFile("./nbchest4.json", JSON.stringify(nbchest4), (err) => {
                              if (err) console.log(err)
                            });
                            fs.writeFile("./nbchest5.json", JSON.stringify(nbchest5), (err) => {
                              if (err) console.log(err)
                            });
          
                    message.channel.send(`Combat entre <@${message.author.id}> et ${bossname5}\n**__Tour 1:__**\n**${message.author.username}** attaque **${bossname5}**, il perd ${Math.trunc(coupplayer5/(Math.pow(1.1, turncombat)))} PV (${Math.trunc(pvbaseboss - (coupplayer5/ (Math.pow(1.1, turncombat))))} PV's restants)\n**${bossname5}** attaque **${message.author.username}**, il perd ${Math.trunc(coupboss5/ (Math.pow(1.1, turncombat)))} PV (${Math.trunc(uPv - (coupboss5 / (Math.pow(1.1, turncombat))))} PV's restants)${ligneoptionnelle2}\n${message.author.username}, vous êtes mort avec le boss, vous ne réussissez pas à passer cet étage, une prochaine fois peut-être?`)
                    }
                  }
                } 
              }
          let armeattaquedef = 0
          let armeattaquepv = 0
          let donjon2name = '?'
          let donjon3name = '?'
          let donjon4name = '?'
          let donjon5name = '?'

          let donjonprice2 = ""
          let donjonprice3 = ""
          let donjonprice4 = ""
          let donjonprice5 = ""
  
                let kemote2 = ""
                let kemote3 = ""
                let kemote4 = ""
                let kemote5 = ""

          if(uresetower >= 2 && udonjonunlock2 === 0) {
            donjonprice2= '\n``Coût de débloquage: 100``'
            kemote2 = `${POemote}`
          }
          if(uresetower2 >= 2 && udonjonunlock3 === 0) {
            donjonprice3= '\n``Coût de débloquage: 350``'
            kemote3 = `${POemote}`
          }
          if(uresetower3 >= 3 && udonjonunlock4 === 0) {
            donjonprice4= '\n``Coût de débloquage: 1``'
            kemote4 = `${PPlemote}`
          }
          if(uresetower4 >= 5 && udonjonunlock5 === 0) {
            donjonprice5= '\n``Coût de débloquage: 2``'
            kemote5 = `${PPlemote}`
          }

          if(uresetower >= 2 && udonjonunlock2 >= 1) {
            donjonprice2= '\n``Coût de débloquage: ✅``'
          }
          if(uresetower2 >= 2 && udonjonunlock3 >= 1) {
            donjonprice3= '\n``Coût de débloquage: ✅``'
          }
          if(uresetower3 >= 3 && udonjonunlock4 >= 1) {
            donjonprice4= '\n``Coût de débloquage: ✅``'
          }
          if(uresetower4 >= 5 && udonjonunlock5 >= 1) {
            donjonprice5= '\n``Coût de débloquage: ✅``'
          }

          if(uresetower >= 2){
            donjon2name = '**La Grotte**'
          }
          if(uresetower2 >= 2){
            donjon3name = '**Temple sous-marin**'
          }
          if(uresetower3 >= 3){
            donjon4name = '**Île Celeste**'
          }
          if(uresetower4 >= 5){
            donjon5name = '**Catacombes**'
          }

let boT = '``Note:Pour débloquer un donjon, faites !donjon unlock [Numero du donjon]``'
          if(message.content === "!donjon" && uclassen > 0)
          message.channel.send(`🗺️ __Carte des donjons:__\nDonjon 0: **Tour Mirage** (Pet requis)\nDonjon 1: **La Tour**\nDonjon 2: ${donjon2name}${donjonprice2}${kemote2}\nDonjon 3: ${donjon3name}${donjonprice3}${kemote3}\nDonjon 4: ${donjon4name}${donjonprice4}${kemote4}\nDonjon 5: ${donjon5name}${donjonprice5}${kemote5}\n${boT}`)
          if(message.content === "!donjon 0" && uclassen > 0){
            if(uetage <=100 && upetselect === 0 ) message.channel.send(`Pour accéder a ce donjon il te faut un pet, pour en sélectionner un, faites ${trucbizarre}!pet select [ID]${trucbizarre}`)
            if(uetage <= 100 && upetselect !=0){
           message.channel.send(`Tu es à l'étage ${uetagec1} de la tour des mirages, le prochain boss est:\n**${bossnamec1}**: ${Math.trunc(bossatkmaxc1)} ATK/${Math.trunc(bossdefmaxc1)} DEF/${Math.trunc(bosspvmaxc1)} PV\nPour l'attaquer, faites ${trucbizarre}!donjon 0 a${trucbizarre}`)
            }
            if(uetage === 100){ message.channel.send("Coming Soon...")
            }
          }
          
          if(message.content === "!donjon 1" && uclassen > 0){
            if(uetage < 31){
           message.channel.send(`Tu es à l'étage ${uetage} de la tour, le prochain boss est:\n**${bossname}**: ${Math.trunc(bossatkmax)} ATK/${Math.trunc(bossdefmax)} DEF/${Math.trunc(bosspvmax)} PV\nPour l'attaquer, faites ${trucbizarre}!donjon 1 a${trucbizarre}`)
            }
            if(uetage === 31){ message.channel.send("Il n'y a plus de boss, vous pouvez retourner à l'entrée de ce donjon, en faisant ``!donjon 1 reset``.\n**Note:** A chaque reset vous gagnez des fragments, toutefois les monstres deviennent plus puissant.")
            }
          }
           if(message.content === "!donjon 2" && uclassen > 0) {
             if(uresetower <= 1 || udonjonunlock2 === 0) message.channel.send("Ce donjon n'a pas encore été débloqué.");
             if(uresetower >= 2 && udonjonunlock2 >= 1 && uetage2 <= 18) message.channel.send(`Tu es à l'étage ${uetage2} de la grotte, le prochain boss est:\n**${bossname2}**: ${Math.trunc(bossatkmax2)} ATK/${Math.trunc(bossdefmax2)} DEF/${Math.trunc(bosspvmax2)} PV\nPour l'attaquer, faites ${trucbizarre}!donjon 2 a${trucbizarre}`)
             if(uetage2 === 19) message.channel.send("Il n'y a plus de boss, vous pouvez retourner à l'entrée de ce donjon, en faisant ``!donjon 2 reset``.\n**Note:** A chaque reset vous gagnez des fragments, toutefois les monstres deviennent plus puissant.")
           }
           if(message.content === "!donjon 3" && uclassen > 0) {
            if(uresetower2 <= 1 || udonjonunlock3 === 0) message.channel.send("Ce donjon n'a pas encore été débloqué.");
            if(uresetower2 >= 2 && udonjonunlock3 >= 1 && uetage3 <= 16) message.channel.send(`Tu es à l'étage ${uetage3} du temple sous-marin, le prochain boss est:\n**${bossname4}**: ${Math.trunc(bossatkmax3)} ATK/${Math.trunc(bossdefmax3)} DEF/${Math.trunc(bosspvmax3)} PV\nPour l'attaquer, faites ${trucbizarre}!donjon 3 a${trucbizarre}`)
            if(uetage3 === 17) message.channel.send("Il n'y a plus de boss, vous pouvez retourner à l'entrée de ce donjon, en faisant ``!donjon 3 reset``.\n**Note:** A chaque reset vous gagnez des fragments, toutefois les monstres deviennent plus puissant.")

          }
          if(message.content === "!donjon 4" && uclassen > 0) {
            if(uresetower3 <= 2 || udonjonunlock4 === 0) message.channel.send("Ce donjon n'a pas encore été débloqué.");
            if(uresetower3 >= 3 && udonjonunlock4 >= 1 && uetage5 <= 17)  message.channel.send(`Tu es à l'étage ${uetage5} de L'île Celeste, le prochain boss est:\n**${bossname4}**: ${Math.trunc(bossatkmax4)} ATK/${Math.trunc(bossdefmax4)} DEF/${Math.trunc(bosspvmax4)} PV\nPour l'attaquer, faites ${trucbizarre}!donjon 4 a${trucbizarre}`)
            if(uetage5 === 18) message.channel.send("Il n'y a plus de boss, vous pouvez retourner à l'entrée de ce donjon, en faisant ``!donjon 4 reset``.\n**Note:** A chaque reset vous gagnez des fragments, toutefois les monstres deviennent plus puissant.")

          }
          if(message.content === "!donjon 5" && uclassen > 0) {
            if(uresetower4 <= 4 || udonjonunlock5 === 0) message.channel.send("Ce donjon n'a pas encore été débloqué.");
            if(uresetower4 >= 5 && udonjonunlock5 >= 1 && uetage5 <= 11) message.channel.send(`Tu es à l'étage ${uetage5} des Catacombes, le prochain boss est:\n**${bossname5}**: ${Math.trunc(bossatkmax5)} ATK/${Math.trunc(bossdefmax5)} DEF/${Math.trunc(bosspvmax5)} PV\nPour l'attaquer, faites ${trucbizarre}!donjon 5 a${trucbizarre}`)
            if(uetage5 === 12) message.channel.send("Il n'y a plus de boss, vous pouvez retourner à l'entrée de ce donjon, en faisant ``!donjon 5 reset``.\n**Note:** A chaque reset vous gagnez des fragments, toutefois les monstres deviennent plus puissant.")

          }


let bonusatkarme = require("./bonusatkarme.json");
let bonusdefarme = require("./bonusdefarme.json");
let bonuspvarme = require("./bonuspvarme.json");
if(!bonusatkarme[message.author.id]){
  bonusatkarme[message.author.id] = {
    bonusatkarme: 0
  };

fs.writeFile("./bonusatkarme.json", JSON.stringify(bonusatkarme), (err) => {
  if (err) console.log(err)
});
};
if(!bonusdefarme[message.author.id]){
  bonusdefarme[message.author.id] = {
    bonusdefarme: 0
  };

fs.writeFile("./bonusdefarme.json", JSON.stringify(bonusdefarme), (err) => {
  if (err) console.log(err)
});
};
if(!bonuspvarme[message.author.id]){
  bonuspvarme[message.author.id] = {
    bonuspvarme: 0
  };

fs.writeFile("./bonuspvarme.json", JSON.stringify(bonuspvarme), (err) => {
  if (err) console.log(err)
});
};
let ubonusatkarme = bonusatkarme[message.author.id].bonusatkarme;
let ubonusdefarme = bonusdefarme[message.author.id].bonusdefarme;
let ubonuspvarme = bonuspvarme[message.author.id].bonuspvarme;

if(message.content === "!pet select") message.reply(`Fais !pet select [ID du pet] afin de selectionner un pet\n${trucbizarre}Note: Pour retirer un pet, effectuez !remove pet${trucbizarre}`);

if(message.content === "!arme select") message.reply(`Fais !arme select [ID de l'arme] afin de selectionner une arme\n${trucbizarre}Note: Pour retirer une arme, effectuez !remove arme${trucbizarre}`);


if(message.content === "!remove pet" || message.content === "!pet remove" && uclassen > 0) {
  if(upetselect === 0 ) return message.reply("Tu n'as aucun pet selectionné.")
  if(upetselect > 0) {
  
  petselect[message.author.id] = {
    petselect: 0
  };

 
              fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
                if (err) console.log(err)
                });
                message.channel.send(`${message.author.username}, ton pet à bien été retiré!`)
   
};
};


if(message.content === "!pet select 1" && uclassen > 0) {
  if(upet1 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet1 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 1
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Chat [ID:1]")
  };
};
if(message.content === "!pet select 2" && uclassen > 0) {
  if(upet2 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet2 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 2
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Souris [ID:2]")
  };
};
if(message.content === "!pet select 3" && uclassen > 0) {
  if(upet3 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet3 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 3
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Rat [ID:3]")
  };
};
if(message.content === "!pet select 4" && uclassen > 0) {
  if(upet4 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet4 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 4
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Lutin [ID:4]")
  };
};

if(message.content === "!pet select 5" && uclassen > 0) {
  if(upet5 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet5 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 5
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Poney [ID:5]")
  };
};

if(message.content === "!pet select 6" && uclassen > 0) {
  if(upet6 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet6 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 6
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Licorne [ID:6]")
  };
};
if(message.content === "!pet select 7" && uclassen > 0) {
  if(upet7 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet7 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 7
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Hamster [ID:7]")
  };
};
if(message.content === "!pet select 8" && uclassen > 0) {
  if(upet8 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet8 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 8
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Lapin [ID:8]")
  };
};
if(message.content === "!pet select 9" && uclassen > 0) {
  if(upet9 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet9 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 9
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Esprit de la forêt [ID:9]")
  };
};
if(message.content === "!pet select 10" && uclassen > 0) {
  if(upet10 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet10 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 10
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Fantôme [ID:10]")
  };
};
if(message.content === "!pet select 11" && uclassen > 0) {
  if(upet11 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet11 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 11
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Cheval [ID:11]")
  };
};
if(message.content === "!pet select 12" && uclassen > 0) {
  if(upet12 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet12 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 12
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Loup [ID:12]")
  };
};
if(message.content === "!pet select 13" && uclassen > 0) {
  if(upet13 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet13 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 13
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Requin [ID:13]")
  };
};
if(message.content === "!pet select 14" && uclassen > 0) {
  if(upet14 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet14 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 14
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Gardien de la forêt [ID:14]")
  };
};
if(message.content === "!pet select 15" && uclassen > 0) {
  if(upet15 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet15 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 15
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Esprit du feu [ID:15]")
  };
};
if(message.content === "!pet select 16" && uclassen > 0) {
  if(upet16 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet16 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 16
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Poupée Vaudou [ID:16]")
  };
};
if(message.content === "!pet select 17" && uclassen > 0) {
  if(upet17 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet17 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 17
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Liche [ID:17]")
  };
};
if(message.content === "!pet select 18" && uclassen > 0) {
  if(upet18 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet18 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 18
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Vampire [ID:18]")
  };
};
if(message.content === "!pet select 19" && uclassen > 0) {
  if(upet19 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet19 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 19
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Lion [ID:19]")
  };
};
if(message.content === "!pet select 20" && uclassen > 0) {
  if(upet20 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet20 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 20
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Loup-Garou [ID:20]")
  };
};
if(message.content === "!pet select 21" && uclassen > 0) {
  if(upet21 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet21 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 21
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Esprit des ténèbres [ID:21]")
  };
};
if(message.content === "!pet select 22" && uclassen > 0) {
  if(upet22 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet22 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 22
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Esprit de la lumière [ID:22]")
  };
};
if(message.content === "!pet select 23" && uclassen > 0) {
  if(upet23 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet23 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 23
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Momie [ID:23]")
  };
};
if(message.content === "!pet select 24" && uclassen > 0) {
  if(upet24 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet24 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 24
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Loup-Blanc [ID:24]")
  };
};
if(message.content === "!pet select 25" && uclassen > 0) {
  if(upet25 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet25 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 25
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Lion sacré [ID:25]")
  };
};
if(message.content === "!pet select 26" && uclassen > 0) {
  if(upet26 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet26 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 26
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Tigre [ID:26]")
  };
};
if(message.content === "!pet select 41" && uclassen > 0) {
  if(upet41 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet41 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 41
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Niffleur [ID:41]")
  };
};
if(message.content === "!pet select 42" && uclassen > 0) {
  if(upet42 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet42 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 42
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Sombral [ID:42]")
  };
};
if(message.content === "!pet select 27" && uclassen > 0) {
  if(upet27 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet27 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 27
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Tortue géante [ID:27]")
  };
};
if(message.content === "!pet select 28" && uclassen > 0) {
  if(upet28 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet28 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 28
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Petit démon [ID:28]")
  };
};
if(message.content === "!pet select 29" && uclassen > 0) {
  if(upet29 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet29 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 29
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Démon [ID:29]")
  };
};
if(message.content === "!pet select 30" && uclassen > 0) {
  if(upet30 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet30 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 30
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Diablotin [ID:30]")
  };
};
if(message.content === "!pet select 31" && uclassen > 0) {
  if(upet31 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet31 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 31
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Ange [ID:31]")
  };
};
if(message.content === "!pet select 32" && uclassen > 0) {
  if(upet32 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet32 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 32
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Aigle [ID:32]")
  };
};
if(message.content === "!pet select 33" && uclassen > 0) {
  if(upet33 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet33 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 33
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Faucon [ID:33]")
  };
};
if(message.content === "!pet select 34" && uclassen > 0) {
  if(upet34 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet34 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 34
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Golem [ID:34]")
  };
};
if(message.content === "!pet select 35" && uclassen > 0) {
  if(upet35 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet35 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 35
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Archange [ID:35]")
  };
};
if(message.content === "!pet select 36" && uclassen > 0) {
  if(upet36 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet36 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 36
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Cerbère [ID:36]")
  };
};
if(message.content === "!pet select 37" && uclassen > 0) {
  if(upet37 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet37 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 37
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Berserker [ID:37]")
  };
};
if(message.content === "!pet select 38" && uclassen > 0) {
  if(upet38 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet38 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 38
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Basilic [ID:38]")
  };
};
if(message.content === "!pet select 39" && uclassen > 0) {
  if(upet39 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet39 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 39
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Dragon [ID:39]")
  };
};
if(message.content === "!pet select 40" && uclassen > 0) {
  if(upet40 === 0) return message.reply("Tu ne possèdes pas ce pet.");
  if(upetselect > 0) return message.reply("Tu as déjà un pet selectionné, fais !remove pet pour le retirer.")
  if(upet40 > 0, upetselect === 0) {

    petselect[message.author.id] = {
      petselect: 40
    };

 
      fs.writeFile("./petselect.json", JSON.stringify(petselect), (err) => {
        if (err) console.log(err)
        });

                  message.channel.send("Tu as bien selectionné le pet Phoenix [ID:40]")
  };
};


let starinv = ""

let invname = ""
let invemote = ""
if(uarmeselect === 0) {
  invname = ""
  invemote = "<:Interrogation:596735733386051584>"
  starinv = ""
}
if(uarmeselect === 1) {
  invname = item1name
  invemote = item1emote
  starinv = armestar1

}
if(uarmeselect === 2) {
  invname = item2name
  invemote = item2emote
  starinv = armestar2

}
if(uarmeselect === 3) {
  invname = item3name
  invemote = item3emote
  starinv = armestar3

}
if(uarmeselect === 4) {
  invname = item4name
  invemote = item4emote
  starinv = armestar4

}
if(uarmeselect === 5) {
  invname = item5name
  invemote = item5emote
  starinv = armestar5

}
if(uarmeselect === 6) {
  invname = item6name
  invemote = item6emote
  starinv = armestar6

}
if(uarmeselect === 7) {
  invname = item7name
  invemote = item7emote
  starinv = armestar7

}
if(uarmeselect === 8) {
  invname = item8name
  invemote = item8emote
  starinv = armestar8

}
if(uarmeselect === 9) {
  invname = item9name
  invemote = item9emote
  starinv = armestar9

}
if(uarmeselect === 10) {
  invname = item10name
  invemote = item10emote
  starinv = armestar10

}
if(uarmeselect === 11) {
  invname = item11name
  invemote = item11emote
  starinv = armestar11

}
if(uarmeselect === 12) {
  invname = item12name
  invemote = item12emote
  starinv = armestar12

}
if(uarmeselect === 13) {
  invname = item13name
  invemote = item13emote
  starinv = armestar13

}
if(uarmeselect === 14) {
  invname = item14name
  invemote = item14emote
  starinv = armestar14

}
if(uarmeselect === 15) {
  invname = item15name
  invemote = item15emote
  starinv = armestar15

}
if(uarmeselect === 16) {
  invname = item16name
  invemote = item16emote
  starinv = armestar16

}
if(uarmeselect === 17) {
  invname = item17name
  invemote = item17emote
  starinv = armestar17

}
if(uarmeselect === 18) {
  invname = item18name
  invemote = item18emote
  starinv = armestar18

}
if(uarmeselect === 19) {
  invname = item19name
  invemote = item19emote
  starinv = armestar19

}
if(uarmeselect === 20) {
  invname = item20name
  invemote = item20emote
  starinv = armestar20
}
if(uarmeselect === 21) {
  invname = item21name
  invemote = item21emote
  starinv = armestar21
}
if(uarmeselect === 22) {
  invname = item22name
  invemote = item22emote
  starinv = armestar22
}
if(uarmeselect === 23) {
  invname = item23name
  invemote = item23emote
  starinv = armestar23
}
if(uarmeselect === 24) {
  invname = item24name
  invemote = item24emote
  starinv = armestar24
}

if(uarmeselect === 25) {
  invname = item25name
  invemote = item25emote
  starinv = armestar25
}
if(uarmeselect === 26) {
  invname = item26name
  invemote = item26emote
  starinv = armestar26
}
if(uarmeselect === 27) {
  invname = item27name
  invemote = item27emote
  starinv = armestar27
}
if(uarmeselect === 28) {
  invname = item28name
  invemote = item28emote
  starinv = armestar28
}
if(uarmeselect === 29) {
  invname = item29name
  invemote = item29emote
  starinv = armestar29
}
if(uarmeselect === 30) {
  invname = item30name
  invemote = item30emote
  starinv = armestar30
}
if(uarmeselect === 31) {
  invname = item31name
  invemote = item31emote
  starinv = armestar31
}
if(uarmeselect === 32) {
  invname = item32name
  invemote = item32emote
  starinv = armestar32
}
if(uarmeselect === 33) {
  invname = item33name
  invemote = item33emote
  starinv = armestar33
}
if(uarmeselect === 34) {
  invname = item34name
  invemote = item34emote
  starinv = armestar34
}
if(uarmeselect === 35) {
  invname = item35name
  invemote = item35emote
  starinv = armestar35
}
if(uarmeselect === 36) {
  invname = item36name
  invemote = item36emote
  starinv = armestar36
}
if(uarmeselect === 37) {
  invname = item37name
  invemote = item37emote
  starinv = armestar37
}
if(uarmeselect === 38) {
  invname = item38name
  invemote = item38emote
  starinv = armestar38
}
if(uarmeselect === 39) {
  invname = item39name
  invemote = item39emote
  starinv = armestar39
}
if(uarmeselect === 40) {
  invname = item40name
  invemote = item40emote
  starinv = armestar40
}
if(uarmeselect === 41) {
  invname = item41name
  invemote = item41emote
  starinv = armestar41
}
if(uarmeselect === 42) {
  invname = item42name
  invemote = item42emote
  starinv = armestar42
}
if(uarmeselect === 43) {
  invname = item43name
  invemote = item43emote
  starinv = armestar43

}
if(uarmeselect === 43) {
  invname = item43name
  invemote = item43emote
  starinv = armestar43

}if(uarmeselect === 44) {
  invname = item44name
  invemote = item44emote
  starinv = armestar44

} 
let lignegold = ""
let ligneshopgold = ""

let ppldxi = Math.trunc(uPieceor/1000)
if(uPieceor >= 1000) {
  ligneshopgold = `${Math.trunc(uPieceor/1000)} ${PPlemote} et ${Math.trunc(uPieceor- (ppldxi*1000))} ${POemote}`
}
if(uPieceor <= 999 && uPieceor != 0) {
  ligneshopgold = `${Math.trunc(uPieceor)} ${POemote}`
}

if(uPieceor === 0) {
  ligneshopgold = `0 ${POemote}`
}
if(uPieceor >= 1000) {
  lignegold = `\n${PPlemote} **Pièces de Platine**: ${Math.trunc(uPieceor/1000)}\n${POemote} **Pièces d'Or**: ${Math.trunc(uPieceor- (ppldxi*1000))}`
}
if(uPieceor <= 999 && uPieceor != 0) {
  lignegold = `\n${POemote} **Pièces d'Or**: ${Math.trunc(uPieceor)}`
}
if(uPieceor === 0) {
  lignegold = ""
}
let lignerx = `${RXemote}**RxCoins**: ${Math.trunc(uRxCoins)}`

let lignebank = ""
if(uRxCoins != 0 || uPieceor != 0) {
 lignebank = "Banque"
}
let ligneress1 = ""
let pst = 0
let pac = 0
let pfe = 0
let por = 0
let ppl = 0
let pdi = 0
let ppluto = 0
let ppn = 0

if(uPierre != 0) {
  pst= 1
}
if(uAcier != 0){
  pac = 1
}
if(uFer != 0){
  pfe = 1
}
if(uOr != 0){
 por = 1
}
if(uPlatine!= 0){
  ppl = 1
}
if(uDiamant!= 0){
  pdi=1
}
if(uPlutonium!= 0){
  ppluto= 1
}
if(uPierreNoire!= 0){
  ppn= 1
}
let nbresspresente = pst+pac+pfe+por+ppl+pdi+ppluto+ppn
if(nbresspresente === 0){
  nbresspresente = 1
}
let pbc = 0
let pbbl = 0
let pbs = 0
let pgw = 0


if(uBoisdeChêne!= 0){
  pbc = 1
}
if(uBoisdeBouleau!= 0){
  pbbl = 1
}
if(uBoisdeSapin!= 0){
  pbs= 1
}
if(uBoisDoré!= 0){
  pgw= 1
}
let nbwoodpresent = pbc + pbbl + pbs + pgw 
if(nbwoodpresent === 0){
  nbwoodpresent = 1
}
let lignestone = `${emotepierre} **Pierres**: ${millify(Math.trunc(uPierre), 1)}`

let ligneacier = ""
if(uAcier != 0) {
  ligneacier = `\n${emoteacier} **Acier**: ${millify(Math.trunc(uAcier), 1)}`
}
let lignefer = ""
if(uFer != 0) {
  lignefer = `\n${emotefer} **Fer**: ${millify(Math.trunc(uFer), 1)}`
}
let ligneplatine = ""
if(uPlatine != 0) {
  ligneplatine = `\n${emoteplatine} **Platine**: ${millify(Math.trunc(uPlatine), 1)}`
}
let ligneor = ""
if(uOr != 0) {
  ligneor = `\n${emoteor} **Or**: ${millify(Math.trunc(uOr), 1)}`
}
let lignepluto = ""
if(uPlutonium != 0) {
  lignepluto = `\n${emotepluto} **Plutonium**: ${millify(Math.trunc(uPlutonium), 1)}`
}
let lignedia = ""
if(uDiamant != 0) {
  lignedia = `\n${emotediamant} **Diamant**: ${millify(Math.trunc(uDiamant), 1)}`
}
let lignepn = ""
if(uPierreNoire != 0) {
  lignepn = `\n${emotePN} **Pierre Noire**: ${millify(Math.trunc(uPierreNoire), 1)}`
}
let lignebs = `${emotebs} **Bois de Sapin**: ${millify(Math.trunc(uBoisdeSapin), 1)}`

let lignebc = ""
if(uBoisdeChêne != 0) {
  lignebc = `\n${emotebc} **Bois de Chêne**: ${millify(Math.trunc(uBoisdeChêne), 1)}`
}
let lignebbl = ""
if(uBoisdeBouleau != 0) {
  lignebbl = `\n${emotebbl} **Bois de Bouleau**: ${millify(Math.trunc(uBoisdeBouleau), 1)}`
}
let lignegw = ""
if(uBoisDoré != 0) {
  lignegw = `\n${emotegwood} **Bois Doré**: ${millify(Math.trunc(uBoisDoré), 1)}`
}



let inventaireEmbed = new Discord.RichEmbed()
.setAuthor(message.author.username, message.author.avatarURL)
.setColor("#FF0000")
.addField(`Banque`, `${lignerx}${lignegold}`)
.addField(":scroll:Informations:", `**Classe**: **${classename}** ${heromote}\n**Niveau Classe**: ${nivactuelclasse}\n**${xp2emote} XP Classe**: ${millify(Math.trunc(xpclasseactuel), 1)}/${millify(Math.trunc(xpnecessaire), 1)}\n**Niveau Joueur**: ${Math.trunc(nivactuel)}\n**${xp1emote} XP Joueur**: ${Math.trunc(xpactuel)}\n**Rang**: ${uranklevel}\n**PV**: ${millify(Math.trunc(uPv), 1)}/${millify(Math.trunc(PMaxPv),1)}\n**Puissance d'attaque**: ${millify(PMaxAtk, 2)}\n**Puissance Défensive**: ${millify(PMaxDef,2)}`)
.addField(`Ressources minières (${nbresspresente})`, `${lignestone}${ligneacier}${lignefer}${ligneor}${ligneplatine}${lignedia}${lignepluto}${lignepn}`)
.addField(`Ressources naturelles (${nbwoodpresent})`, `${lignebs}${lignebbl}${lignebc}${lignegw}`)
.addField(":crossed_swords:Armes et armures:", `${invemote} ${invname} ${starinv}\n${semote} **${Sname}**: Niveau ${uEpee}\n${shemote} **${Bname}**: Niveau ${uBouclier}`)
.addField(":hammer_pick:Outils:", `${femote} **${Fname}**: Niveau ${uForeuse} ${emoteetoile}\n${hemote} **${Hname}**: Niveau ${uHache} ${hemoteetoile}`)
.addField(":arrow_double_up:Améliorations:", `${emotelooting} **Looting**: Niveau ${uLooting}\n${emotexpboost} **XPBoost**: Niveau ${uXPBoost}\n${emotetimer} **TimerReduc**: Niveau ${uTimerReduc}`)
.addField(":office:Bâtiments:",`:house: **Atelier**: Niveau ${uatelier}\n:hammer_pick: **Forge**: Niveau ${uforge}`)
let globalwriting = require("./globalwriting.json")

  if(!globalwriting[message.author.id]){
    globalwriting[message.author.id] = {
      kmaxatk: 0,
      kmaxdef: 0,
      kmaxpv: 0,
      krank: "",
      kclassename: "",
      kheroemote: "",
      kinvemote: "",
      kinvname: "",
      kstarinv: "",
      ksemote: "",
      ksname: "",
      kshemote: "",
      kbname: "",
      kfemote: "",
      kfname: "",
      khemote: "",
      khname: "",
      keloot: "",
      kexp: "",
      keti: "",
      kphache: "",
      kpfor: ""

    };

  fs.writeFile("./globalwriting.json", JSON.stringify(globalwriting), (err) => {
    if (err) console.log(err)
  });
  }

  let globalwriting2 = require("./globalwriting2.json")

  if(!globalwriting2[message.author.id]){
    globalwriting2[message.author.id] = {
      kgemme1name: "",
      kgemme1emote: "",
      kgemme2name: "",
      kgemme2emote: "",
      kgemme3name: "",
      kgemme3emote: "",
      kgemme4name: "",
      kgemme4emote: "",
      kgemme5emote: "",
      kgemme5name: "",
      kpetnameinv: "",
      kpetatkboosted: 0,
      kpetdefboosted: 0,
      kpetpvboosted: 0,
      kdesceffet1: "",
      kdesceffet2: "",
      kdesceffet3: ""

    };

  fs.writeFile("./globalwriting2.json", JSON.stringify(globalwriting2), (err) => {
    if (err) console.log(err)
  });
  }
if(message.content === "!i" || message.content === "!inv" || message.content === "!inventory" || message.content === "!inventaire"){
  if(uclassen === 0) {
     message.reply("Choisis d'abord une classe")
  }
   if(uclassen > 0) {



    globalwriting[message.author.id] = {
      kmaxatk: Math.trunc(PMaxAtk),
      kmaxdef: Math.trunc(PMaxDef),
      kmaxpv: Math.trunc(PMaxPv),
      krank: uranklevel,
      kclassename: classename,
      kheroemote: heromote,
      kinvemote: invemote,
      kinvname: invname,
      kstarinv: starinv,
      ksemote: semote,
      ksname: Sname,
      kshemote: shemote,
      kbname: Bname,
      kfemote: femote,
      kfname: Fname,
      khemote: hemote,
      khname: Hname,
      keloot: emotelooting,
      kexp: emotexpboost,
      keti: emotetimer,
      kphache: hemoteetoile,
      kpfor: emoteetoile,
      kppv: Math.trunc(uPv)

    };

  fs.writeFile("./globalwriting.json", JSON.stringify(globalwriting), (err) => {
    if (err) console.log(err)
  });

  globalwriting2[message.author.id] = {
    kgemme1name: gemme1name,
    kgemme1emote: gemme1emote,
    kgemme2name: gemme2name,
    kgemme2emote: gemme2emote,
    kgemme3name: gemme3name,
    kgemme3emote: gemme3emote,
    kgemme4name: gemme4name,
    kgemme4emote: gemme4emote,
    kgemme5emote: gemme5emote,
    kgemme5name: gemme5name,
    kpetnameinv: petnameinv,
    kpetatkboosted: petatkboosted,
    kpetdefboosted: petdefboosted,
    kpetpvboosted: petpvboosted,
    kdesceffet1: desceffet1,
    kdesceffet2: desceffet2,
    kdesceffet3: desceffet3

  };

  fs.writeFile("./globalwriting2.json", JSON.stringify(globalwriting2), (err) => {
  if (err) console.log(err)
 });

message.channel.send(inventaireEmbed);
}
}
let BoostOre = boostoreniveau * lBoostOre * prestigeboostore + boosthero +1
let BoostWood = boostwoodniveau * lBoostWood * prestigeboostwood + boosthero +1
let boostcollecte1 = 2 - (totalcollecte[message.author.id].totalcollecte / 100)
if(boostcollecte1 <= 1) {
  boostcollecte1 = 1
}
let cdroppierre = (uDropPierre *boostcollecte1* BoostOre * artefact1effect * artefact2effect)* gemme5effectmining * pet37effect2*pet30effect2 *pet11effect1
let cdropacier =  (uDropAcier*boostcollecte1 * BoostOre * artefact1effect * artefact2effect)* gemme5effectmining* pet37effect2*pet30effect2
let cdropfer = (uDropFer*boostcollecte1 * BoostOre * artefact1effect * artefact2effect)* gemme5effectmining* pet37effect2*pet30effect2
let cdropor = (uDropOr*boostcollecte1* (BoostOre * artefact1effect * artefact2effect+1)* gemme5effectmining* pet37effect2*pet30effect2 *pet41effect1)
let cdropdiam = (uDropD*boostcollecte1 * BoostOre * artefact1effect * artefact2effect)* gemme5effectmining* pet37effect2*pet30effect2
let cdropplatine = (uDropPla*boostcollecte1 * BoostOre * artefact1effect * artefact2effect)* gemme5effectmining* pet37effect2*pet30effect2
let cdroppluto = (uDropPt*boostcollecte1 * BoostOre * artefact1effect * artefact2effect)* gemme5effectmining* pet37effect2*pet30effect2
let cdroppn = ((uDropPN * BoostOre * artefact1effect * artefact2effect) * gemme5effectpn) * pet6effect1 * pet18effect3 * pet21effect2* pet37effect2*pet30effect2
let cdropbs = ((uDropSapin*boostcollecte1 * BoostWood * artefact1effect * artefact2effect) * gemme5effectwood) *pet5effect1*pet9effect1 * pet14effect1* pet37effect2
let cdropbbl = ((uDropBouleau*boostcollecte1 * BoostWood * artefact1effect * artefact2effect) * gemme5effectwood) *pet5effect1*pet9effect1 * pet14effect1* pet37effect2
let cdropchene = ((uDropChene*boostcollecte1 * BoostWood * artefact1effect * artefact2effect) * gemme5effectwood )*pet5effect1 *pet9effect1 * pet14effect1* pet37effect2
let cdropcab = ((uDropCab * BoostWood * artefact1effect * artefact2effect)* gemme5effectgw )*pet5effect1 * pet7effect1 *pet9effect1* pet14effect1* pet37effect2
let cdropxp = ((uDropXP + minageXP) * (BoostXPT + artefact1effect + artefact4effect + gemme5effectpx + pet29effect2 + pet36effect2 - 3))
let cdroprx = RxDrop * (artefact1effect + artefact6effect + gemme5effectrx + pet23effect1 + pet40effect2 - 4)


if(message.content === "!heal") {
  if(uAdmin === 0) return message.reply("Non")
  if(uAdmin > 0) {
    Pv[message.author.id] = {
       Pv: PMaxPv
    };
    fs.writeFile("./Pv.json", JSON.stringify(Pv), (err) => {
      if (err) console.log(err)
      });
  }
}


// DROP BOX COMMON
let dropcxp = 0     //50%
let dropcor = 0     //20%
let dropcrx = 0     //20%
let dropepic1 = 0   //2%
let dropepic2 = 0   //2%
let dropepic3 = 0   //2%
let dropepic8 = 0   //2%
let dropcrare = 0   //2%
let dropnamecommon = "Dommage, tu n'as rien obtenu"
if(uwritecommon >= 51){
  dropcxp = (Math.floor(Math.random() * (600 - 250) + 250)) * pet8effect1 * pet21effect1 * pet29effect2* pet36effect2
  dropnamecommon = `Tu as obtenu ${Math.trunc(dropcxp)} ${xp1emote} XP`
}
if(uwritecommon >= 31 && uwritecommon <= 50){
  dropcor = 1 * pet8effect1 * pet21effect1* pet22effect2* pet28effect2 * pet38effect1
  dropnamecommon = `Tu as obtenu ${Math.trunc(dropcor)} ${POemote} Pièces d'Or`

}
if(uwritecommon >= 11 && uwritecommon <= 30){
  dropcrx = Math.floor(Math.random() * (100 - 50) + 50)*pet23effect1
  dropnamecommon = `Tu as obtenu ${Math.trunc(dropcrx)} ${RXemote} RxCoins`

}
if(uwritecommon >= 9 && uwritecommon <= 10 && uitem1 === 0){
  dropepic1 = 1
  dropnamecommon = `Oh tu as obtenu l'arme Bâton <:baton:597399029185511444> \n**Rareté de l'arme** = Commune`

}
if(uwritecommon >= 9 && uwritecommon <= 10 && uitem1 >= 1){
  dropcor =  2
  dropnamecommon = `Tu as obtenu 2 ${POemote} Pièces d'Or `

}
if(uwritecommon >= 7 && uwritecommon <= 8 && uitem2 === 0){
  dropepic2 = 1
  dropnamecommon = `Oh tu as obtenu l'arme Couteau de cuisine <:couteau2:596994150214139914> \n**Rareté de l'arme** = Commune`

}
if(uwritecommon >= 7 && uwritecommon <= 8 && uitem2 >= 1){
  dropcor =  2
  dropnamecommon = `Tu as obtenu 2 ${POemote} Pièces d'Or `

}
if(uwritecommon >= 5 && uwritecommon <= 6 && uitem3 === 0){
  dropepic3 = 1
  dropnamecommon = `Oh tu as obtenu l'arme Couteau en plastique <:couteau3:597399115915067395> \n**Rareté de l'arme** = Commune`

}
if(uwritecommon >= 5 && uwritecommon <= 6 && uitem3 >= 1){
  dropcor =  2
  dropnamecommon = `Tu as obtenu 2 ${POemote} Pièces d'Or `
}
if(uwritecommon >= 3 && uwritecommon <= 4 && uitem8 === 0){
  dropepic8 = 1
  dropnamecommon = `Oh tu as obtenu l'arme Briquet <:briquet8:597399081718906890> \n**Rareté de l'arme** = Commune`

}
  if(uwritecommon >= 3 && uwritecommon <= 4 && uitem8 >= 1){
    dropcor =  2
    dropnamecommon = `Tu as obtenu 2 ${POemote} Pièces d'Or `
  }

if(uwritecommon >= 0 && uwritecommon <= 2 ){
  dropcrare =  1
  dropnamecommon = `Tu as obtenu 1 ${boxrareemote} Box rare `
}

//DROP PARCHEMIN COMMUN
let dpet1 = 0
let dskin1 = 0
let dskin2 = 0
let dskin3 = 0
let dskin4 = 0
let dskin5 = 0
let dskin6 = 0
let dskin7 = 0
let dskin8 = 0
let dxpclasse = 0
let dpet2 = 0
let dpet3 = 0
let dpet4 = 0
let dpet5 = 0
let dpet6= 0
let dpet7= 0
let dpet8 = 0
let dpcname = ""
if(uwritepcommon >= 0 && uwritepcommon <= 10 && upet1 === 0){
  dpet1 =  1
  dpcname = `Tu as obtenu le pet Chat <:chat1:730798218987962875> \n**Rareté du pet** = Commun `
}
if(uwritepcommon >= 0 && uwritepcommon <= 10 && upet1 === 1 && uskin1 === 0){
  dskin1 =  1
  dpcname = `Tu as obtenu le pet Chat :star: <:chat1_1:731903690964729917> \n**Rareté du pet** = Commun `
}
if(uwritepcommon >= 0 && uwritepcommon <= 10 && upet1 === 1 && uskin1 === 1){
  dskin1 =  1
  dpcname = `Tu as obtenu le pet Chat :star::star: <:chat1_2:731924850041421874> \n**Rareté du pet** = Commun `
}
if(uwritepcommon >= 0 && uwritepcommon <= 10 && upet1 === 1 && uskin1 === 2){
  dskin1 =  1
  dpcname = `Tu as obtenu le pet Chat :star::star::star: <:chat1_3:732281205201829936> \n**Rareté du pet** = Commun `
}
if(uwritepcommon >= 0 && uwritepcommon <= 10 && upet1 === 1 && uskin1 === 3){
  dxpclasse = 10
  dpcname = `Tu as obtenu 10 ${xp2emote} XP pour ta classe! `
}


if(uwritepcommon >= 11 && uwritepcommon <= 20 && upet2 === 0){
  dpet2 =  1
  dpcname = `Tu as obtenu le pet Souris <:souris2:730798236826075186> \n**Rareté du pet** = Commun `
}
if(uwritepcommon >= 11 && uwritepcommon <= 20 && upet2 === 1 && uskin2 === 0){
  dskin2 =  1
  dpcname = `Tu as obtenu le pet Souris :star: <:souris2_1:731904248287199253> \n**Rareté du pet** = Commun `
}
if(uwritepcommon >= 11 && uwritepcommon <= 20 && upet2 === 1 && uskin2 === 1){
  dskin2 =  1
  dpcname = `Tu as obtenu le pet Souris :star::star: <:souris2_2:731925676138954782> \n**Rareté du pet** = Commun `
}
if(uwritepcommon >= 11 && uwritepcommon <= 20 && upet2 === 1 && uskin2 === 2){
  dskin2 =  1
  dpcname = `Tu as obtenu le pet Souris :star::star::star: <:souris2_3:732281952559824907> \n**Rareté du pet** = Commun `
}
if(uwritepcommon >= 11 && uwritepcommon <= 20 && upet2 === 1 && uskin2 === 3){
  dxpclasse = 10
  dpcname = `Tu as obtenu 10 ${xp2emote} XP pour ta classe! `
}

if(uwritepcommon >= 21 && uwritepcommon <= 30 && upet3 === 0){
  dpet3 =  1
  dpcname = `Tu as obtenu le pet Rat <:rat3:730799127352574024> \n**Rareté du pet** = Commun `
}
if(uwritepcommon >= 21 && uwritepcommon <= 30 && upet3 === 1 && uskin3 === 0){
  dskin3 =  1
  dpcname = `Tu as obtenu le pet Rat :star: <:rat3_1:731904205270548520> \n**Rareté du pet** = Commun `
}
if(uwritepcommon >= 21 && uwritepcommon <= 30 && upet3 === 1 && uskin3 === 1){
  dskin3 =  1
  dpcname = `Tu as obtenu le pet Rat :star::star: <:rat3_2:731925632568787034> \n**Rareté du pet** = Commun `
}
if(uwritepcommon >= 21 && uwritepcommon <= 30 && upet3 === 1 && uskin3 === 2){
  dskin3 =  1
  dpcname = `Tu as obtenu le pet Rat :star::star::star: <:rat3_3:732281866245111908>  \n**Rareté du pet** = Commun `
}
if(uwritepcommon >= 21 && uwritepcommon <= 30 && upet3 === 1 && uskin3 === 3){
  dxpclasse = 10
  dpcname = `Tu as obtenu 10 ${xp2emote} XP pour ta classe! `
}

if(uwritepcommon >= 31 && uwritepcommon <= 40 && upet4 === 0){
  dpet4 =  1
  dpcname = `Tu as obtenu le pet Lutin <:lutin4:730799141059297310> \n**Rareté du pet** = Commun `
}
if(uwritepcommon >= 31 && uwritepcommon <= 40 && upet4 === 1 && uskin4 === 0){
  dskin4 =  1
  dpcname = `Tu as obtenu le pet Lutin :star: <:lutin4_1:731904067194060831> \n**Rareté du pet** = Commun `
}
if(uwritepcommon >= 31 && uwritepcommon <= 40 && upet4 === 1 && uskin4 === 1){
  dskin4 =  1
  dpcname = `Tu as obtenu le pet Lutin :star::star: <:lutin4_2:731925507326869535> \n**Rareté du pet** = Commun `
}
if(uwritepcommon >= 31 && uwritepcommon <= 40 && upet4 === 1 && uskin4 === 2){
  dskin4 =  1
  dpcname = `Tu as obtenu le pet Lutin :star::star::star: <:lutin4_3:732281697223049247>  \n**Rareté du pet** = Commun `
}
if(uwritepcommon >= 31 && uwritepcommon <= 40 && upet4 === 1 && uskin4 === 3){
  dxpclasse = 10
  dpcname = `Tu as obtenu 10 ${xp2emote} XP pour ta classe! `
}

if(uwritepcommon >= 41 && uwritepcommon <= 50 && upet5 === 0){
  dpet5 =  1
  dpcname = `Tu as obtenu le pet Poney <:poney5:730799424397115435> \n**Rareté du pet** = Commun `
}
if(uwritepcommon >= 41 && uwritepcommon <= 50 && upet5 === 1 && uskin5 === 0){
  dskin5 =  1
  dpcname = `Tu as obtenu le pet Poney :star: <:poney5_1:731904164321558540> \n**Rareté du pet** = Commun `
}
if(uwritepcommon >= 41 && uwritepcommon <= 50 && upet5 === 1 && uskin5 === 1){
  dskin5 =  1
  dpcname = `Tu as obtenu le pet Poney :star::star: <:poney5_2:731925585739120661> \n**Rareté du pet** = Commun `
}
if(uwritepcommon >= 41 && uwritepcommon <= 50 && upet5 === 1 && uskin5 === 2){
  dskin5 =  1
  dpcname = `Tu as obtenu le pet Poney :star::star::star: <:poney5_3:732281812964999329>  \n**Rareté du pet** = Commun `
}
if(uwritepcommon >= 41 && uwritepcommon <= 50 && upet5 === 1 && uskin5 === 3){
  dxpclasse = 10
  dpcname = `Tu as obtenu 10 ${xp2emote} XP pour ta classe! `
}

if(uwritepcommon >= 51 && uwritepcommon <= 60 && upet6 === 0){
  dpet6 =  1
  dpcname = `Tu as obtenu le pet Licorne <:licorne6:730800122803257385> \n**Rareté du pet** = Commun `
}
if(uwritepcommon >= 51 && uwritepcommon <= 60 && upet6 === 1 && uskin6 === 0){
  dskin6 =  1
  dpcname = `Tu as obtenu le pet Licorne :star: <:licorne6_1:731903944602681397> \n**Rareté du pet** = Commun `
}
if(uwritepcommon >= 51 && uwritepcommon <= 60 && upet6 === 1 && uskin6 === 1){
  dskin6 =  1
  dpcname = `Tu as obtenu le pet Licorne :star::star: <:licorne6_2:731925323423154197> \n**Rareté du pet** = Commun `
}
if(uwritepcommon >= 51 && uwritepcommon <= 60 && upet6 === 1 && uskin6 === 2){
  dskin6 =  1
  dpcname = `Tu as obtenu le pet Licorne :star::star::star: <:licorne6_3:732281515358289933>  \n**Rareté du pet** = Commun `
}
if(uwritepcommon >= 51 && uwritepcommon <= 60 && upet6 === 1 && uskin6 === 3){
  dxpclasse = 10
  dpcname = `Tu as obtenu 10 ${xp2emote} XP pour ta classe! `
}

if(uwritepcommon >= 61 && uwritepcommon <= 70 && upet7 === 0){
  dpet7 =  1
  dpcname = `Tu as obtenu le pet Hamster <:hamster7:730801193676439582> \n**Rareté du pet** = Commun `
}
if(uwritepcommon >= 61 && uwritepcommon <= 70 && upet7 === 1 && uskin7 === 0){
  dskin7 =  1
  dpcname = `Tu as obtenu le pet Hamster :star: <:hamster7_1:731903822078673007> \n**Rareté du pet** = Commun `
}
if(uwritepcommon >= 61 && uwritepcommon <= 70 && upet7 === 1 && uskin7 === 1){
  dskin7 =  1
  dpcname = `Tu as obtenu le pet Hamster :star::star: <:hamster7_2:731925264824664095> \n**Rareté du pet** = Commun `
}
if(uwritepcommon >= 61 && uwritepcommon <= 70 && upet7 === 1 && uskin7 === 2){
  dskin7 =  1
  dpcname = `Tu as obtenu le pet Hamster :star::star::star: <:hamster7_3:732281421309149245>  \n**Rareté du pet** = Commun `
}
if(uwritepcommon >= 61 && uwritepcommon <= 70 && upet7 === 1 && uskin7 === 3){
  dxpclasse = 10
  dpcname = `Tu as obtenu 10 ${xp2emote} XP pour ta classe! `
}

if(uwritepcommon >= 71 && uwritepcommon <= 80 && upet8 === 0){
  dpet8 =  1
  dpcname = `Tu as obtenu le pet Lapin <:lapin8:730801586569347112> \n**Rareté du pet** = Commun `
}
if(uwritepcommon >= 71 && uwritepcommon <= 80 && upet8 === 1 && uskin8 === 0){
  dskin8 =  1
  dpcname = `Tu as obtenu le pet Lapin :star: <:lapin8_1:731903907042689124> \n**Rareté du pet** = Commun `
}
if(uwritepcommon >= 71 && uwritepcommon <= 80 && upet8 === 1 && uskin8 === 1){
  dskin8 =  1
  dpcname = `Tu as obtenu le pet Lapin :star::star: <:lapin8_2:731925285200461825> \n**Rareté du pet** = Commun `
}
if(uwritepcommon >= 71 && uwritepcommon <= 80 && upet8 === 1 && uskin8 === 2){
  dskin8 =  1
  dpcname = `Tu as obtenu le pet Lapin :star::star::star: <:lapin8_3:732281454184235080>  \n**Rareté du pet** = Commun `
}
if(uwritepcommon >= 71 && uwritepcommon <= 80 && upet8 === 1 && uskin8 === 3){
  dxpclasse = 10
  dpcname = `Tu as obtenu 10 ${xp2emote} XP pour ta classe! `
}
if(uwritepcommon >= 81){
  dpcname = `Dommage, vous n'avez rien eu...`
}

let dpet9 = 0
let dpet10 = 0
let dpet11 = 0
let dpet12 = 0
let dpet13 = 0
let dpet14= 0
let dpet15 = 0
let dpet41 = 0
let dskin9 = 0
let dskin10= 0
let dskin11 = 0
let dskin12 = 0
let dskin13 = 0
let dskin14 = 0
let dskin15 = 0
let dskin41 = 0
let dprname = ""
let drxpclasse = 0

if(uwriteprare >= 0 && uwriteprare <= 10 && upet9 === 0){
  dpet9 =  1
  dprname = `Tu as obtenu le pet Esprit de la forêt <:espritdelaforet9:730815206661292154> \n**Rareté du pet** = Rare `
}
if(uwriteprare >= 0 && uwriteprare <= 10 && upet9 === 1 && uskin9 === 0){
  dskin9 =  1
  dprname = `Tu as obtenu le pet Esprit de la forêt :star: <:espritdelaforet9_1:731903764826423447> \n**Rareté du pet** = Rare `
}
if(uwriteprare >= 0 && uwriteprare <= 10 && upet9 === 1 && uskin9 === 1){
  dskin9 =  1
  dprname = `Tu as obtenu le pet Esprit de la forêt :star::star: <:espritdelaforet9_2:731925081218875563> \n**Rareté du pet** = Rare `
}
if(uwriteprare >= 0 && uwriteprare <= 10 && upet9 === 1 && uskin9 === 2){
  dskin9 =  1
  dprname = `Tu as obtenu le pet Esprit de la forêt :star::star::star: <:espritdelaforet9_3:732281291227136032> \n**Rareté du pet** = Rare `
}
if(uwriteprare >= 0 && uwriteprare <= 10 && upet9 === 1 && uskin9 === 3){
  drxpclasse = 25
  dprname = `Tu as obtenu 25 ${xp2emote} XP pour ta classe! `
}


if(uwriteprare >= 12 && uwriteprare <= 20 && upet10 === 0){
  dpet10 =  1
  dprname = `Tu as obtenu le pet Fantôme <:fantome10:730820265734307912> \n**Rareté du pet** = Rare `
}
if(uwriteprare >= 12 && uwriteprare <= 20 && upet10 === 1 && uskin10 === 0){
  dskin10 =  1
  dprname = `Tu as obtenu le pet Fantôme :star: <:fantome10_1:731903839451611177> \n**Rareté du pet** = Rare `
}
if(uwriteprare >= 12 && uwriteprare <= 20 && upet10 === 1 && uskin10 === 1){
  dskin10 =  1
  dprname = `Tu as obtenu le pet Fantôme :star::star: <:fantome10_2:731925178333790247> \n**Rareté du pet** = Rare `
}
if(uwriteprare >= 12 && uwriteprare <= 20 && upet10 === 1 && uskin10 === 2){
  dskin10 =  1
  dprname = `Tu as obtenu le pet Fantôme :star::star::star: <:fantome10_3:732281352933605466> \n**Rareté du pet** = Rare `
}
if(uwriteprare >= 12 && uwriteprare <= 20 && upet10 === 1 && uskin10 === 3){
  drxpclasse = 25
  dprname = `Tu as obtenu 25 ${xp2emote} XP pour ta classe! `
}

if(uwriteprare >= 22 && uwriteprare <= 30 && upet11 === 0){
  dpet11 =  1
  dprname = `Tu as obtenu le pet Cheval <:cheval11:730821033984262174> \n**Rareté du pet** = Rare `
}
if(uwriteprare >= 22 && uwriteprare <= 30 && upet11 === 1 && uskin11 === 0){
  dskin11 =  1
  dprname = `Tu as obtenu le pet Cheval :star: <:cheval11_1:731903706584449055> \n**Rareté du pet** = Rare `
}
if(uwriteprare >= 22 && uwriteprare <= 30 && upet11 === 1 && uskin11 === 1){
  dskin11 =  1
  dprname = `Tu as obtenu le pet Cheval :star::star: <:cheval11_2:731924871092895784> \n**Rareté du pet** = Rare `
}
if(uwriteprare >= 22 && uwriteprare <= 30 && upet11 === 1 && uskin11 === 2){
  dskin11 =  1
  dprname = `Tu as obtenu le pet Cheval :star::star::star: <:cheval11_3:732281222507790486> \n**Rareté du pet** = Rare `
}
if(uwriteprare >= 22 && uwriteprare <= 30 && upet11 === 1 && uskin11 === 3){
  drxpclasse = 25
  dprname = `Tu as obtenu 25 ${xp2emote} XP pour ta classe! `
}

if(uwriteprare >= 32 && uwriteprare <= 40 && upet12 === 0){
  dpet12 =  1
  dprname = `Tu as obtenu le pet Loup <:loup12:730821730636922900> \n**Rareté du pet** = Rare `
}
if(uwriteprare >= 32 && uwriteprare <= 40 && upet12 === 1 && uskin12 === 0){
  dskin12 =  1
  dprname = `Tu as obtenu le pet Loup :star: <:loup12_1:731903999086952488> \n**Rareté du pet** = Rare `
}
if(uwriteprare >= 32 && uwriteprare <= 40 && upet12 === 1 && uskin12 === 1){
  dskin12 =  1
  dprname = `Tu as obtenu le pet Loup :star::star: <:loup12_2:731925404847308850> \n**Rareté du pet** = Rare `
}
if(uwriteprare >= 32 && uwriteprare <= 40 && upet12 === 1 && uskin12 === 2){
  dskin12 =  1
  dprname = `Tu as obtenu le pet Loup :star::star::star: <:loup12_3:732281610594025543> \n**Rareté du pet** = Rare `
}
if(uwriteprare >= 32 && uwriteprare <= 40 && upet12 === 1 && uskin12 === 3){
  drxpclasse = 25
  dprname = `Tu as obtenu 25 ${xp2emote} XP pour ta classe! `
}

if(uwriteprare === 41 || uwriteprare === 31 || uwriteprare === 21 || uwriteprare === 11){
  if(upet41 === 0){
  dpet41 =  1
  dprname = `Tu as obtenu le pet Niffleur <:niffleur:777842191044837396> \n**Rareté du pet** = Commun `
}
if(upet41 === 1 && uskin41 === 0){
  dskin41 =  1
  dprname = `Tu as obtenu le pet Niffleur :star: <:niffleur1:777842205665918998> \n**Rareté du pet** = Commun `
}
if(upet41 === 1 && uskin41 === 1){
  dskin41 =  1
  dprname = `Tu as obtenu le pet Niffleur :star::star: <:niffleur2:777842219612373022> \n**Rareté du pet** = Commun `
}
if(upet41 === 1 && uskin41 === 2){
  dskin41 =  1
  dprname = `Tu as obtenu le pet Niffleur :star::star::star: <:niffleur3:777842246237945866> \n**Rareté du pet** = Commun `
}
if(upet41 === 1 && uskin41 === 3){
  drxpclasse = 25
  dprname = `Tu as obtenu 25 ${xp2emote} XP pour ta classe! `
}
}
if(uwriteprare >= 42 && uwriteprare <= 51 && upet13 === 0){
  dpet13 =  1
  dprname = `Tu as obtenu le pet Requin <:requin13:730822816248758316> \n**Rareté du pet** = Rare `
}
if(uwriteprare >= 42 && uwriteprare <= 51 && upet13 === 1 && uskin13 === 0){
  dskin13 =  1
  dprname = `Tu as obtenu le pet Requin :star: <:requin13_1:731904228766908448> \n**Rareté du pet** = Rare `
}
if(uwriteprare >= 42 && uwriteprare <= 51 && upet13 === 1 && uskin13 === 1){
  dskin13 =  1
  dprname = `Tu as obtenu le pet Requin :star::star: <:requin13_2:731925652210712588> \n**Rareté du pet** = Rare `
}
if(uwriteprare >= 42 && uwriteprare <= 51 && upet13 === 1 && uskin13 === 2){
  dskin13 =  1
  dprname = `Tu as obtenu le pet Requin :star::star::star: <:requin13_3:732281889305395200> \n**Rareté du pet** = Rare `
}
if(uwriteprare >= 42 && uwriteprare <= 51 && upet13 === 1 && uskin13 === 3){
  drxpclasse = 25
  dprname = `Tu as obtenu 25 ${xp2emote} XP pour ta classe! `
}

if(uwriteprare >= 52 && uwriteprare <= 61 && upet14 === 0){
  dpet14 =  1
  dprname = `Tu as obtenu le pet Gorille <:gorille14:730823804535701525> \n**Rareté du pet** = Rare `
}
if(uwriteprare >= 52 && uwriteprare <= 61 && upet14 === 1 && uskin14 === 0){
  dskin14 =  1
  dprname = `Tu as obtenu le pet Gorille :star: <:gorille14_1:731903889703698582> \n**Rareté du pet** = Rare `
}
if(uwriteprare >= 52 && uwriteprare <= 61 && upet14 === 1 && uskin14 === 1){
  dskin14 =  1
  dprname = `Tu as obtenu le pet Gorille :star::star: <:gorille14_2:731904832075726919> \n**Rareté du pet** = Rare `
}
if(uwriteprare >= 52 && uwriteprare <= 61 && upet14 === 1 && uskin14 === 2){
  dskin14 =  1
  dprname = `Tu as obtenu le pet Gorille :star::star::star: <:gorille14_3:731904954373111831> \n**Rareté du pet** = Rare `
}
if(uwriteprare >= 52 && uwriteprare <= 61 && upet14 === 1 && uskin14 === 3){
  drxpclasse = 25
  dprname = `Tu as obtenu 25 ${xp2emote} XP pour ta classe! `
}

if(uwriteprare >= 62 && uwriteprare <= 70 && upet15 === 0){
  dpet15 =  1
  dprname = `Tu as obtenu le pet Esprit du feu <:espritdufeu15:730808507397308496> \n**Rareté du pet** = Rare `
}
if(uwriteprare >= 62 && uwriteprare <= 70 && upet15 === 1 && uskin15 === 0){
  dskin15 =  1
  dprname = `Tu as obtenu le pet Esprit du feu :star: <:espritdufeu15_1:731903803984445540> \n**Rareté du pet** = Rare `
}
if(uwriteprare >= 62 && uwriteprare <= 70 && upet15 === 1 && uskin15 === 1){
  dskin15 =  1
  dprname = `Tu as obtenu le pet Esprit du feu :star::star: <:espritdufeu15_2:731925128484487301> \n**Rareté du pet** = Rare `
}
if(uwriteprare >= 62 && uwriteprare <= 70 && upet15 === 1 && uskin15 === 2){
  dskin15 =  1
  dprname = `Tu as obtenu le pet Esprit du feu :star::star::star: <:espritdufeu15_3:732281333086421092> \n**Rareté du pet** = Rare `
}
if(uwriteprare >= 62 && uwriteprare <= 70 && upet15 === 1 && uskin15 === 3){
  drxpclasse = 25
  dprname = `Tu as obtenu 25 ${xp2emote} XP pour ta classe! `
}
if(uwriteprare >= 71 && uwriteprare <= 85){
  dprname = `Dommage, tu n'as rien eu... `
}
let dpcr = 0
if(uwriteprare >= 71 && uparchemincommun < placemax){
  dpcr= 1
  dprname = `Tu as obtenu 1 ${emoteparchemincommun} Parchemin commun !`
}
if(uwriteprare >= 71 && uparchemincommun >= placemax){
  dpcr= 0
  dprname = `Tu as obtenu 1 ${emoteparchemincommun} Parchemin commun !\nMais tu n'as pas assez de place dans ton sac, tu n'as donc pas pu le récuperer...`
}





let dpet16 = 0
let dpet17 = 0
let dpet18 = 0
let dpet19 = 0
let dpet20 = 0
let dpet21= 0
let dpet22 = 0
let dpet23 = 0
let dpet24 = 0
let dpet42 = 0
let dskin16 = 0
let dskin17= 0
let dskin18 = 0
let dskin19 = 0
let dskin20 = 0
let dskin21 = 0
let dskin22 = 0
let dskin23 = 0
let dskin24 = 0
let dskin42 = 0
let dpename = ""
let dexpclasse = 0
let dper = 0

if(uwritepepic >= 0 && uwritepepic <= 6 && upet16 === 0){
  dpet16 =  1
  dpename = `Tu as obtenu le pet Poupée vaudou <:poupeevaudou16:730820026524762112> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 0 && uwritepepic <= 6 && upet16 === 1 && uskin16 === 0){
  dskin16 =  1
  dpename = `Tu as obtenu le pet Poupée vaudou :star: <:poupeevaudou16_1:731904184386846780> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 0 && uwritepepic <= 6 && upet16 === 1 && uskin16 === 1){
  dskin16 =  1
  dpename = `Tu as obtenu le pet Poupée vaudou :star::star: <:poupeevaudou16_2:731925606949978157> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 0 && uwritepepic <= 6 && upet16 === 1 && uskin16 === 2){
  dskin16 =  1
  dpename = `Tu as obtenu le pet Poupée vaudou :star::star::star: <:poupeevaudou16_3:732281842475991091> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 0 && uwritepepic <= 6 && upet16 === 1 && uskin16 === 3){
  dexpclasse = 50
  dpename = `Tu as obtenu 50 ${xp2emote} XP pour ta classe! `
}

if(uwritepepic === 7 || uwritepepic === 8 ){
if(upet42 === 0){
  dpet42 =  1
  dpename = `Tu as obtenu le pet Sombral <:sombral:777842271826608129> \n**Rareté du pet** = Rare `
}
if(upet42 === 1 && uskin42 === 0){
  dskin42 =  1
  dpename = `Tu as obtenu le pet Sombral :star: <:sombral_1:777842286897266718> \n**Rareté du pet** = Rare `
}
if(upet42 === 1 && uskin42 === 1){
  dskin42 =  1
  dpename = `Tu as obtenu le pet Sombral :star::star: <:sombral_2:777842300993798155> \n**Rareté du pet** = Rare `
}
if(upet42 === 1 && uskin42 === 2){
  dskin42 =  1
  dpename = `Tu as obtenu le pet Sombral :star::star::star: <:sombral_3:777842320284450817> \n**Rareté du pet** = Rare `
}
if(upet42 === 1 && uskin42 === 3){
  dexpclasse = 50
  dpename = `Tu as obtenu 50 ${xp2emote} XP pour ta classe! `
}
}
if(uwritepepic >= 9 && uwritepepic <= 14 && upet17 === 0){
  dpet17 =  1
  dpename = `Tu as obtenu le pet Liche <:Liche17:730825270365519934> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 9 && uwritepepic <= 14 && upet17 === 1 && uskin17 === 0){
  dskin17 =  1
  dpename = `Tu as obtenu le pet Liche :star: <:Liche17_1:731903927406035015> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 9 && uwritepepic <= 14 && upet17 === 1 && uskin17 === 1){
  dskin17 =  1
  dpename = `Tu as obtenu le pet Liche :star::star: <:Liche17_2:731925305450692708> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 9 && uwritepepic <= 14 && upet17 === 1 && uskin17 === 2){
  dskin17 =  1
  dpename = `Tu as obtenu le pet Liche :star::star::star: <:Liche17_3:732281491865993357> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 9 && uwritepepic <= 14 && upet17 === 1 && uskin17 === 3){
  dexpclasse = 50
  dpename = `Tu as obtenu 50 ${xp2emote} XP pour ta classe! `
}

if(uwritepepic >= 15 && uwritepepic <= 21 && upet18 === 0){
  dpet18 =  1
  dpename = `Tu as obtenu le pet Vampire <:Vampire18:730827892593786930> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 15 && uwritepepic <= 21 && upet18 === 1 && uskin18 === 0){
  dskin18 =  1
  dpename = `Tu as obtenu le pet Vampire :star: <:Vampire18_1:731904309163327600> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 15 && uwritepepic <= 21 && upet18 === 1 && uskin18 === 1){
  dskin18 =  1
  dpename = `Tu as obtenu le pet Vampire :star::star: <:Vampire18_2:731925742232797284> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 15 && uwritepepic <= 21 && upet18 === 1 && uskin18 === 2){
  dskin18 =  1
  dpename = `Tu as obtenu le pet Vampire :star::star::star: <:Vampire18_3:732281982406623306> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 15 && uwritepepic <= 21 && upet18 === 1 && uskin18 === 3){
  dexpclasse = 50
  dpename = `Tu as obtenu 50 ${xp2emote} XP pour ta classe! `
}

if(uwritepepic >= 22 && uwritepepic <= 28 && upet19 === 0){
  dpet19 =  1
  dpename = `Tu as obtenu le pet Lion <:lion19:730828452638490705> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 22 && uwritepepic <= 28 && upet19 === 1 && uskin19 === 0){
  dskin19 =  1
  dpename = `Tu as obtenu le pet Lion :star: <:lion19_1:731903963837890620> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 22 && uwritepepic <= 28 && upet19 === 1 && uskin19 === 1){
  dskin19 =  1
  dpename = `Tu as obtenu le pet Lion :star::star: <:lion19_2:731925343065342023> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 22 && uwritepepic <= 28 && upet19 === 1 && uskin19 === 2){
  dskin19 =  1
  dpename = `Tu as obtenu le pet Lion :star::star::star: <:lion19_3:732281537869119579> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 22 && uwritepepic <= 28 && upet19 === 1 && uskin19 === 3){
  dexpclasse = 50
  dpename = `Tu as obtenu 50 ${xp2emote} XP pour ta classe! `
}

if(uwritepepic >= 29 && uwritepepic <= 35 && upet20 === 0){
  dpet20 =  1
  dpename = `Tu as obtenu le pet Loup-Garou <:LoupGarou20:730821751101063219> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 29 && uwritepepic <= 35 && upet20 === 1 && uskin20 === 0){
  dskin20 =  1
  dpename = `Tu as obtenu le pet Loup-Garou :star: <:LoupGarou20_1:731904042145677313> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 29 && uwritepepic <= 35 && upet20 === 1 && uskin20 === 1){
  dskin20 =  1
  dpename = `Tu as obtenu le pet Loup-Garou :star::star: <:LoupGarou20_2:731925481372516373> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 29 && uwritepepic <= 35 && upet20 === 1 && uskin20 === 2){
  dskin20 =  1
  dpename = `Tu as obtenu le pet Loup-Garou :star::star::star: <:LoupGarou20_3:732281672690565162> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 29 && uwritepepic <= 35 && upet20 === 1 && uskin20 === 3){
  dexpclasse = 50
  dpename = `Tu as obtenu 50 ${xp2emote} XP pour ta classe! `
}

if(uwritepepic >= 36 && uwritepepic <= 42 && upet21 === 0){
  dpet21 =  1
  dpename = `Tu as obtenu le pet Esprit des ténèbres <:espritdestenebres21:730815233681260554> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 36 && uwritepepic <= 42 && upet21 === 1 && uskin21 === 0){
  dskin21 =  1
  dpename = `Tu as obtenu le pet Esprit des ténèbres :star: <:espritdestenebres21_1:731903791653191802> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 36 && uwritepepic <= 42 && upet21 === 1 && uskin21 === 1){
  dskin21 =  1
  dpename = `Tu as obtenu le pet Esprit des ténèbres :star::star: <:espritdestenebres21_2:731925115952169012> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 36 && uwritepepic <= 42 && upet21 === 1 && uskin21 === 2){
  dskin21 =  1
  dpename = `Tu as obtenu le pet Esprit des ténèbres :star::star::star: <:espritdestenebres21_3:732281319559528520> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 36 && uwritepepic <= 42 && upet21 === 1 && uskin21 === 3){
  dexpclasse = 50
  dpename = `Tu as obtenu 50 ${xp2emote} XP pour ta classe! `
}

if(uwritepepic >= 43 && uwritepepic <= 49 && upet22 === 0){
  dpet22 =  1
  dpename = `Tu as obtenu le pet Esprit de la lumière <:espritdelalumiere22:730815219877806122> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 43 && uwritepepic <= 49 && upet22 === 1 && uskin22 === 0){
  dskin22 =  1
  dpename = `Tu as obtenu le pet Esprit de la lumière :star: <:espritdelalumiere22_1:731903778701181018> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 43 && uwritepepic <= 49 && upet22 === 1 && uskin22 === 1){
  dskin22 =  1
  dpename = `Tu as obtenu le pet Esprit de la lumière :star::star: <:espritdelalumiere22_2:731925101158727711> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 43 && uwritepepic <= 49 && upet22 === 1 && uskin22 === 2){
  dskin22 =  1
  dpename = `Tu as obtenu le pet Esprit de la lumière :star::star::star: <:espritdelalumiere22_3:732281306582483006> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 43 && uwritepepic <= 49 && upet22 === 1 && uskin22 === 3){
  dexpclasse = 50
  dpename = `Tu as obtenu 50 ${xp2emote} XP pour ta classe! `
}

if(uwritepepic >= 50 && uwritepepic <= 56 && upet23 === 0){
  dpet23 =  1
  dpename = `Tu as obtenu le pet Momie <:momie23:730830844150939721> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 50 && uwritepepic <= 56 && upet23 === 1 && uskin23 === 0){
  dskin23 =  1
  dpename = `Tu as obtenu le pet Momie :star: <:momie23_1:731904093374906448> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 50 && uwritepepic <= 56 && upet23 === 1 && uskin23 === 1){
  dskin23 =  1
  dpename = `Tu as obtenu le pet Momie :star::star: <:momie23_2:731925533583081522> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 50 && uwritepepic <= 56 && upet23 === 1 && uskin23 === 2){
  dskin23 =  1
  dpename = `Tu as obtenu le pet Momie :star::star::star: <:momie23_3:732281738885202020> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 50 && uwritepepic <= 56 && upet23 === 1 && uskin23 === 3){
  dexpclasse = 50
  dpename = `Tu as obtenu 50 ${xp2emote} XP pour ta classe! `
}

if(uwritepepic >= 57 && uwritepepic <= 63 && upet24 === 0){
  dpet24 =  1
  dpename = `Tu as obtenu le pet Loup-Blanc <:LoupBlanc24:730821765856755712> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 57 && uwritepepic <= 63 && upet24 === 1 && uskin24 === 0){
  dskin24 =  1
  dpename = `Tu as obtenu le pet Loup-Blanc :star: <:LoupBlanc24_1:731904018426626088> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 57 && uwritepepic <= 63 && upet24 === 1 && uskin24 === 1){
  dskin24 =  1
  dpename = `Tu as obtenu le pet Loup-Blanc :star::star: <:LoupBlanc24_2:731925440171606126> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 57 && uwritepepic <= 63 && upet24 === 1 && uskin24 === 2){
  dskin24 =  1
  dpename = `Tu as obtenu le pet Loup-Blanc :star::star::star: <:LoupBlanc24_3:732281649206788197> \n**Rareté du pet** = Epique `
}
if(uwritepepic >= 57 && uwritepepic <= 63 && upet24 === 1 && uskin24 === 3){
  dexpclasse = 50
  dpename = `Tu as obtenu 50 ${xp2emote} XP pour ta classe! `
}
if(uwritepepic >= 64 && uwritepepic <= 73){
  dpename = `Dommage, tu n'as rien eu... `
}
if(uwritepepic >= 74 && uparcheminrare < placemax){
  dper= 1
  dpename = `Tu as obtenu 1 ${emoteparcheminrare} Parchemin rare !`
}
if(uwritepepic >= 74 && uparcheminrare >= placemax){
  dper= 0
  dpename = `Tu as obtenu 1 ${emoteparcheminrare} Parchemin rare !\nMais tu n'as pas assez de place dans ton sac, tu n'as donc pas pu le récuperer...`
}
let dpet25 = 0
let dpet26 = 0
let dpet27 = 0
let dpet28 = 0
let dpet29 = 0
let dpet30 = 0
let dpet31 = 0
let dpet32 = 0
let dpet33 = 0
let dpet34 = 0
let dpet35 = 0
let dpet36 = 0
let dpet37 = 0
let dpet38 = 0
let dpet39 = 0
let dpet40 = 0
let dskin25 = 0
let dskin26 = 0
let dskin27 = 0
let dskin28 = 0
let dskin29 = 0
let dskin30 = 0
let dskin31 = 0
let dskin32 = 0
let dskin33 = 0
let dskin34 = 0
let dskin35 = 0
let dskin36 = 0
let dskin37 = 0
let dskin38 = 0
let dskin39 = 0
let dskin40 = 0
let dplname = ""
let dplr = 0
let dlxpclasse = 0

if(uwriteplegend >= 0 && uwriteplegend <= 10 && upet25 === 0){
  dpet25 =  1
  dplname = `Tu as obtenu le pet Lion sacré <:lionsacre25:730833340541960194> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 0 && uwriteplegend <= 10 && upet25 === 1 && uskin25 === 0){
  dskin25 =  1
  dplname = `Tu as obtenu le pet Lion sacré :star: <:lionsacre25_1:731903979264671854> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 0 && uwriteplegend <= 10 && upet25 === 1 && uskin25 === 1){
  dskin25 =  1
  dplname = `Tu as obtenu le pet Lion sacré :star::star: <:lionsacre25_2:731904849712775289> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 0 && uwriteplegend <= 10 && upet25 === 1 && uskin25 === 2){
  dskin25 =  1
  dplname = `Tu as obtenu le pet Lion sacré :star::star::star: <:lionsacre25_3:731904965068456017> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 0 && uwriteplegend <= 10 && upet25 === 1 && uskin25 === 3){
  dlxpclasse = 100
  dplname = `Tu as obtenu 100 ${xp2emote} XP pour ta classe! `
}

if(uwriteplegend >= 11 && uwriteplegend <= 20 && upet26 === 0){
  dpet26 =  1
  dplname = `Tu as obtenu le pet Tigre <:tigre26:730833621140635761> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 11 && uwriteplegend <= 20 && upet26 === 1 && uskin26 === 0){
  dskin26 =  1
  dplname = `Tu as obtenu le pet Tigre :star: <:tigre26_1:731904269816692739> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 11 && uwriteplegend <= 20 && upet26 === 1 && uskin26 === 1){
  dskin26 =  1
  dplname = `Tu as obtenu le pet Tigre :star::star: <:tigre26_2:731904874702176366> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 11 && uwriteplegend <= 20 && upet26 === 1 && uskin26 === 2){
  dskin26 =  1
  dplname = `Tu as obtenu le pet Tigre :star::star::star: <:tigre26_3:731904988909011015> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 11 && uwriteplegend <= 20 && upet26 === 1 && uskin26 === 3){
  dlxpclasse = 100
  dplname = `Tu as obtenu 100 ${xp2emote} XP pour ta classe! `
}

if(uwriteplegend >= 21 && uwriteplegend <= 30 && upet27 === 0){
  dpet27 =  1
  dplname = `Tu as obtenu le pet Tortue géante <:turtlegiant27:730834060355829880> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 21 && uwriteplegend <= 30 && upet27 === 1 && uskin27 === 0){
  dskin27 =  1
  dplname = `Tu as obtenu le pet Tortue géante :star: <:turtlegiant27_1:731904291027157016> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 21 && uwriteplegend <= 30 && upet27 === 1 && uskin27 === 1){
  dskin27 =  1
  dplname = `Tu as obtenu le pet Tortue géante :star::star: <:turtlegiant27_2:731925715343245403> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 21 && uwriteplegend <= 30 && upet27 === 1 && uskin27 === 2){
  dskin27 =  1
  dplname = `Tu as obtenu le pet Tortue géante :star::star::star: <:turtlegiant27_3:749215514319913022> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 21 && uwriteplegend <= 30 && upet27 === 1 && uskin27 === 3){
  dlxpclasse = 100
  dplname = `Tu as obtenu 100 ${xp2emote} XP pour ta classe! `
}

if(uwriteplegend >= 31 && uwriteplegend <= 40 && upet28 === 0){
  dpet28 =  1
  dplname = `Tu as obtenu le pet Petit démon <:petitdemon28:730836305617092719> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 31 && uwriteplegend <= 40 && upet28 === 1 && uskin28 === 0){
  dskin28 =  1
  dplname = `Tu as obtenu le pet Petit démon :star: <:petitdmon28_1:731904118234415215> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 31 && uwriteplegend <= 40 && upet28=== 1 && uskin28 === 1){
  dskin28 =  1
  dplname = `Tu as obtenu le pet Petit démon :star::star: <:petitdmon28_2:731925558820339915> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 31 && uwriteplegend <= 40 && upet28 === 1 && uskin28 === 2){
  dskin28 =  1
  dplname = `Tu as obtenu le pet Petit démon :star::star::star: <:petitdmon28_3:732281787455373323> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 31 && uwriteplegend <= 40 && upet28 === 1 && uskin28 === 3){
  dlxpclasse = 100
  dplname = `Tu as obtenu 100 ${xp2emote} XP pour ta classe! `
}

if(uwriteplegend >= 41 && uwriteplegend <= 50 && upet29 === 0){
  dpet29 =  1
  dplname = `Tu as obtenu le pet Démon <:Demon29:730837896596160592> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 41 && uwriteplegend <= 50 && upet29 === 1 && uskin29 === 0){
  dskin29 =  1
  dplname = `Tu as obtenu le pet Démon :star: <:Dmon29_1:731903722505895946> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 41 && uwriteplegend <= 50 && upet29=== 1 && uskin29 === 1){
  dskin29 =  1
  dplname = `Tu as obtenu le pet Démon :star::star: <:Dmon29_2:731925003876171906> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 41 && uwriteplegend <= 50 && upet29 === 1 && uskin29 === 2){
  dskin29 =  1
  dplname = `Tu as obtenu le pet Démon :star::star::star: <:Dmon29_3:732281252236755064> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 41 && uwriteplegend <= 50 && upet29 === 1 && uskin29 === 3){
  dlxpclasse = 100
  dplname = `Tu as obtenu 100 ${xp2emote} XP pour ta classe! `
}

if(uwriteplegend >= 51 && uwriteplegend <= 60 && upet30 === 0){
  dpet30 =  1
  dplname = `Tu as obtenu le pet Diablotin <:Diablotin30:730839107063775363> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 51 && uwriteplegend <= 60 && upet30 === 1 && uskin30 === 0){
  dskin30 =  1
  dplname = `Tu as obtenu le pet Diablotin :star: <:Diablotin30_1:731903736393367564> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 51 && uwriteplegend <= 60 && upet30 === 1 && uskin30 === 1){
  dskin30 =  1
  dplname = `Tu as obtenu le pet Diablotin :star::star: <:Diablotin30_2:731904816217063436> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 51 && uwriteplegend <= 60 && upet30 === 1 && uskin30 === 2){
  dskin30 =  1
  dplname = `Tu as obtenu le pet Diablotin :star::star::star: <:Diablotin30_3:731904940158615684> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 51 && uwriteplegend <= 60 && upet30 === 1 && uskin30 === 3){
  dlxpclasse = 100
  dplname = `Tu as obtenu 100 ${xp2emote} XP pour ta classe! `
} 


if(uwriteplegend >= 61 && uwriteplegend <= 70 && upet31 === 0){
  dpet31 =  1
  dplname = `Tu as obtenu le pet Ange <:Ange31:730842004984168488> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 61 && uwriteplegend <= 70 && upet31 === 1 && uskin31 === 0){
  dskin31 =  1
  dplname = `Tu as obtenu le pet Ange :star: <:Ange31_1:731903618541944912> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 61 && uwriteplegend <= 70 && upet31 === 1 && uskin31 === 1){
  dskin31 =  1
  dplname = `Tu as obtenu le pet Ange :star::star: <:Ange31_2:731924777614311445> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 61 && uwriteplegend <= 70 && upet31 === 1 && uskin31 === 2){
  dskin31 =  1
  dplname = `Tu as obtenu le pet Ange :star::star::star: <:Ange31_3:732281109492006993> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 61 && uwriteplegend <= 70 && upet31 === 1 && uskin31 === 3){
  dlxpclasse = 100
  dplname = `Tu as obtenu 100 ${xp2emote} XP pour ta classe! `
} 
if(uwriteplegend >= 71 && uwriteplegend <= 80 && upet32 === 0){
  dpet32 =  1
  dplname = `Tu as obtenu le pet Aigle <:aigle32:730815256372183153> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 71 && uwriteplegend <= 80 && upet32 === 1 && uskin32 === 0){
  dskin32 =  1
  dplname = `Tu as obtenu le pet Aigle :star: <:aigle32_1:731903603853492265> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 71 && uwriteplegend <= 80 && upet32 === 1 && uskin32 === 1){
  dskin32 =  1
  dplname = `Tu as obtenu le pet Aigle :star::star: <:aigle32_2:731924764884598887> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 71 && uwriteplegend <= 80 && upet32 === 1 && uskin32 === 2){
  dskin32 =  1
  dplname = `Tu as obtenu le pet Aigle :star::star::star: <:aigle32_3:732281096707899453> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 71 && uwriteplegend <= 80 && upet32 === 1 && uskin32 === 3){
  dlxpclasse = 100
  dplname = `Tu as obtenu 100 ${xp2emote} XP pour ta classe! `
} 

if(uwriteplegend >= 81 && uwriteplegend <= 90 && upet33 === 0){
  dpet33 =  1
  dplname = `Tu as obtenu le pet Faucon <:faucon33:730815246960427078> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 81 && uwriteplegend <= 90 && upet33 === 1 && uskin33 === 0){
  dskin33 =  1
  dplname = `Tu as obtenu le pet Faucon :star: <:faucon33_1:731903856513908749> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 81 && uwriteplegend <= 90 && upet33 === 1 && uskin33 === 1){
  dskin33 =  1
  dplname = `Tu as obtenu le pet Faucon :star::star: <:faucon33_2:731925209703252046> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 81 && uwriteplegend <= 90 && upet33 === 1 && uskin33 === 2){
  dskin33 =  1
  dplname = `Tu as obtenu le pet Faucon :star::star::star: <:faucon33_3:732281387876483174> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 81 && uwriteplegend <= 90 && upet33 === 1 && uskin33 === 3){
  dlxpclasse = 100
  dplname = `Tu as obtenu 100 ${xp2emote} XP pour ta classe! `
}

if(uwriteplegend >= 91 && uwriteplegend <= 100 && upet34 === 0){
  dpet34 =  1
  dplname = `Tu as obtenu le pet Golem <:Golem34:730853036053889075> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 91 && uwriteplegend <= 100 && upet34 === 1 && uskin34 === 0){
  dskin34 =  1
  dplname = `Tu as obtenu le pet Golem :star: <:Golem34_1:731903873702166638> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 91 && uwriteplegend <= 100 && upet34 === 1 && uskin34 === 1){
  dskin34 =  1
  dplname = `Tu as obtenu le pet Golem :star::star: <:Golem34_2:731925226522148975> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 91 && uwriteplegend <= 100 && upet34 === 1 && uskin34 === 2){
  dskin34 =  1
  dplname = `Tu as obtenu le pet Golem :star::star::star: <:Golem34_3:732281404699967558> \n**Rareté du pet** = Légendaire `
}
if(uwriteplegend >= 91 && uwriteplegend <= 100 && upet34 === 1 && uskin34 === 3){
  dlxpclasse = 100
  dplname = `Tu as obtenu 100 ${xp2emote} XP pour ta classe! `
}


if(uwriteplegend === 101 && upet35 === 0){
  dpet35 =  1
  dplname = `Tu as obtenu le pet Archange <:Archange35:731066951362674710> \n**Rareté du pet** = Divin `
}
if(uwriteplegend === 101 && upet35 === 1 && uskin35 === 0){
  dskin35 =  1
  dplname = `Tu as obtenu le pet Archange :star: <:Archange35_1:731903630113767495> \n**Rareté du pet** = Divin `
}
if(uwriteplegend === 101 && upet35 === 1 && uskin35 === 1){
  dskin35 =  1
  dplname = `Tu as obtenu le pet Archange :star::star: <:Archange35_2:731924788368637953> \n**Rareté du pet** = Divin `
}
if(uwriteplegend === 101 && upet35 === 1 && uskin35 === 2){
  dskin35 =  1
  dplname = `Tu as obtenu le pet Archange :star::star::star: <:Archange35_3:732281130274783383> \n**Rareté du pet** = Divin `
}
if(uwriteplegend === 101 && upet35 === 1 && uskin35 === 3){
  dlxpclasse = 250
  dplname = `Tu as obtenu 250 ${xp2emote} XP pour ta classe! `
}

if(uwriteplegend === 102 && upet36 === 0){
  dpet36 =  1
  dplname = `Tu as obtenu le pet Cerbère <:Cerbere36:731072728345346059> \n**Rareté du pet** = Divin `
}
if(uwriteplegend === 102 && upet36 === 1 && uskin36 === 0){
  dskin36 =  1
  dplname = `Tu as obtenu le pet Cerbère :star: <:Cerbere36_1:731903679002837042> \n**Rareté du pet** = Divin `
}
if(uwriteplegend === 102 && upet36 === 1 && uskin36 === 1){
  dskin36 =  1
  dplname = `Tu as obtenu le pet Cerbère :star::star: <:Cerbere36_2:731924823881547877> \n**Rareté du pet** = Divin `
}
if(uwriteplegend === 102 && upet36 === 1 && uskin36 === 2){
  dskin36 =  1
  dplname = `Tu as obtenu le pet Cerbère :star::star::star: <:Cerbere36_3:732281193768419528> \n**Rareté du pet** = Divin `
}
if(uwriteplegend === 102 && upet36 === 1 && uskin36 === 3){
  dlxpclasse = 250
  dplname = `Tu as obtenu 250 ${xp2emote} XP pour ta classe! `
}

if(uwriteplegend === 103 && upet37 === 0){
  dpet37 =  1
  dplname = `Tu as obtenu le pet Berserker <:Berserker37:731073865400451234> \n**Rareté du pet** = Divin `
}
if(uwriteplegend === 103 && upet37 === 1 && uskin37 === 0){
  dskin37 =  1
  dplname = `Tu as obtenu le pet Berserker :star: <:Berserker37_1:731903667057328188> \n**Rareté du pet** = Divin `
}
if(uwriteplegend === 103 && upet37 === 1 && uskin37 === 1){
  dskin37 =  1
  dplname = `Tu as obtenu le pet Berserker :star::star: <:Berserker37_2:731924810770415717> \n**Rareté du pet** = Divin `
}
if(uwriteplegend === 103 && upet37 === 1 && uskin37 === 2){
  dskin37 =  1
  dplname = `Tu as obtenu le pet Berserker :star::star::star: <:Berserker37_3:732281178719256721> \n**Rareté du pet** = Divin `
}
if(uwriteplegend === 103 && upet37 === 1 && uskin37 === 3){
  dlxpclasse = 250
  dplname = `Tu as obtenu 250 ${xp2emote} XP pour ta classe! `
}

if(uwriteplegend === 104 && upet38 === 0){
  dpet38 =  1
  dplname = `Tu as obtenu le pet Basilic <:basilic38:731083507157172246> \n**Rareté du pet** = Divin `
}
if(uwriteplegend === 104 && upet38 === 1 && uskin38 === 0){
  dskin38 =  1
  dplname = `Tu as obtenu le pet Basilic :star: <:basilic38_1:731903654474285116> \n**Rareté du pet** = Divin `
}
if(uwriteplegend === 104 && upet38 === 1 && uskin38 === 1){
  dskin38 =  1
  dplname = `Tu as obtenu le pet Basilic :star::star: <:basilic38_2:731924797583392941> \n**Rareté du pet** = Divin `
}
if(uwriteplegend === 104 && upet38 === 1 && uskin38 === 2){
  dskin38 =  1
  dplname = `Tu as obtenu le pet Basilic :star::star::star: <:basilic38_3:732281154878832753> \n**Rareté du pet** = Divin `
}
if(uwriteplegend === 104 && upet38 === 1 && uskin38 === 3){
  dlxpclasse = 250
  dplname = `Tu as obtenu 250 ${xp2emote} XP pour ta classe! `
}

if(uwriteplegend === 105 && upet39 === 0){
  dpet39 =  1
  dplname = `Tu as obtenu le pet Dragon <:Dragon39:731084152090263562> \n**Rareté du pet** = Divin `
}
if(uwriteplegend === 105 && upet39 === 1 && uskin39 === 0){
  dskin39 =  1
  dplname = `Tu as obtenu le pet Dragon :star: <:Dragon39_1:731903751090208868> \n**Rareté du pet** = Divin `
}
if(uwriteplegend === 105 && upet39 === 1 && uskin39 === 1){
  dskin39 =  1
  dplname = `Tu as obtenu le pet Dragon :star::star: <:Dragon39_2:731925064445984858> \n**Rareté du pet** = Divin `
}
if(uwriteplegend === 105 && upet39 === 1 && uskin39 === 2){
  dskin39 =  1
  dplname = `Tu as obtenu le pet Dragon :star::star::star: <:Dragon39_3:732281270943612948> \n**Rareté du pet** = Divin `
}
if(uwriteplegend === 105 && upet39 === 1 && uskin39 === 3){
  dlxpclasse = 250
  dplname = `Tu as obtenu 250 ${xp2emote} XP pour ta classe! `
}
if(uwriteplegend === 106 && upet40 === 0){
  dpet40 =  1
  dplname = `Tu as obtenu le pet Phoenix <:phoenix40:731084640718159924> \n**Rareté du pet** = Divin `
}
if(uwriteplegend === 106 && upet40 === 1 && uskin40 === 0){
  dskin40 =  1
  dplname = `Tu as obtenu le pet Phoenix :star: <:phoenix40_1:731904143739846657> \n**Rareté du pet** = Divin `
}
if(uwriteplegend === 106 && upet40 === 1 && uskin40 === 1){
  dskin40 =  1
  dplname = `Tu as obtenu le pet Phoenix :star::star: <:phoenix40_2:731904862626775092> \n**Rareté du pet** = Divin `
}
if(uwriteplegend === 106 && upet40 === 1 && uskin40 === 2){
  dskin40 =  1
  dplname = `Tu as obtenu le pet Phoenix :star::star::star: <:phoenix40_3:731904976783147088> \n**Rareté du pet** = Divin `
}
if(uwriteplegend === 106 && upet40 === 1 && uskin40 === 3){
  dlxpclasse = 250
  dplname = `Tu as obtenu 250 ${xp2emote} XP pour ta classe! `
}
if(uwriteplegend >= 107 && uwriteplegend <= 116 ){
  dplname = `Dommage, tu n'as rien eu... `
}
if(uwriteplegend >= 117 && uparcheminepic < placemax){
  dplr= 1
  dplname = `Tu as obtenu 1 ${emoteparcheminepic} Parchemin épique !`
}
if(uwriteplegend >= 117 && uparcheminepic >= placemax){
  dplr= 0
  dplname = `Tu as obtenu 1 ${emoteparcheminepic} Parchemin épique !\nMais tu n'as pas assez de place dans ton sac, tu n'as donc pas pu le récuperer...`
}


// DROP BOX RARE
let droprxp = 0 //30%
let dropror = 0  //20%
let droprdaily = 0 //5%
let droprrx = 0  // 15%
let droprfrag = 0  // 18%
let dropepic9 = 0  //2%
let dropepic10 = 0 //2%
let dropepic13 = 0  //2%
let dropepic14 = 0  //2%
let droprcommon = 0  //2%
let droprepic = 0  //2%
let dropnamerare = "Dommage, tu n'as rien obtenu"

if(uwriterare >= 71) {
  droprxp = Math.floor(Math.random() * (6100 - 1250) + 1250)* pet21effect1 * pet29effect2* pet36effect2
  dropnamerare = `Tu as obtenu ${Math.trunc(droprxp)} ${xp1emote} XP`
}
if(uwriterare >= 51 && uwriterare <= 70) {
  dropror = Math.floor(Math.random() * (3 - 1) + 1)* pet21effect1* pet22effect2* pet28effect2* pet38effect1
  dropnamerare = `Tu as obtenu ${Math.trunc(dropror)} ${POemote} Pièces d'Or`
}
if(uwriterare >= 45 && uwriterare <= 50) {
  droprdaily = Math.floor(Math.random() * (8 - 2) + 2);
  dropnamerare = `Tu as obtenu ${Math.trunc(droprdaily)} ${dailyemote} DailyPoints`
}
if(uwriterare >= 30 && uwriterare <= 44) {
  droprrx = Math.floor(Math.random() * (300 - 150) + 150)*pet23effect1
  dropnamerare = `Tu as obtenu ${Math.trunc(droprrx)} ${RXemote} RxCoins`
}
if(uwriterare >= 12 && uwriterare <= 29) {
  droprfrag = Math.floor(Math.random() * (1 - 1) + 1)*pet24effect1 * pet39effect1
  dropnamerare = `Tu as obtenu ${Math.trunc(droprfrag)} ${fragemote} fragments`
}
if(uwriterare >= 10 && uwriterare <= 11 && uitem9 === 0) {
  dropepic9 = 1
  dropnamerare = `Oh tu as obtenu l'arme Lance-flamme **eco+** <:lanceflamme9:597399305514516480> \n**Rareté de l'arme** = Commune`
}
if(uwriterare >= 10 && uwriterare <= 11 && uitem9 >= 1) {
  dropror = 2
  dropnamerare = `Tu as obtenu 2 ${POemote} Pièces d'Or`
}


if(uwriterare >= 8 && uwriterare <= 9 && uitem10 === 0) {
  dropepic10 = 1
  dropnamerare = `Oh tu as obtenu l'arme Serviette <:serviette10:597403659793596416> \n**Rareté de l'arme** = Commune`
}
if(uwriterare >= 8 && uwriterare <= 9 && uitem10 >= 1) {
  dropror = 2
  dropnamerare = `Tu as obtenu 2 ${POemote} Pièces d'Or`
}

if(uwriterare >= 6 && uwriterare <= 7 && uitem13 === 0) {
  dropepic13 = 1
  dropnamerare = `Oh tu as obtenu l'arme Epée dorée <:gsword13:597150536642330665> \n**Rareté de l'arme** = Rare`
}
if(uwriterare >= 6 && uwriterare <= 7 && uitem13 >= 1) {
  dropror = 4
  dropnamerare = `Tu as obtenu 4 ${POemote} Pièces d'Or`
}


if(uwriterare >= 4 && uwriterare <= 5 && uitem14 === 0) {
  dropepic14 = 1
  dropnamerare = `Oh tu as obtenu l'arme Couteau de chasse <:couteau14:597399130565771274> \n**Rareté de l'arme** = Rare`
}
if(uwriterare >= 4 && uwriterare <= 5 && uitem14 >= 1) {
  dropror = 4
  dropnamerare = `Tu as obtenu 4 ${POemote} Pièces d'Or`
}
if(uwriterare >= 2 && uwriterare <= 3 ){
  droprcommon =  1
  dropnamerare = `Tu as obtenu 1 ${boxcommonemote} Box commune `
}
if(uwriterare >= 0 && uwriterare <= 1){
  droprepic =  1
  dropnamerare = `Tu as obtenu 1 ${boxepicemote} Box épique `
}
//DROP BOX EPIC
let dropexp = 0 //30%
let dropeor = 0  //20%
let dropedaily = 0 //10%
let droperx = 0  //20%
let dropepic16 = 0  //2%
let dropepic17 = 0  //2%
let dropepic21 = 0  //2%
let dropepic22 = 0  //2%
let droperare = 0   //2%
let dropemystery = 0 //2%
let dropefrag = 0 // 8%
let dropnameepic = "Dommage, tu n'as rien obtenu"

if(uwriteepic >= 71) {
  dropexp = Math.floor(Math.random() * (12500 - 8250) + 8250)* pet21effect1* pet29effect2* pet36effect2
  dropnameepic = `Tu as obtenu ${Math.trunc(dropexp)} ${xp1emote} XP`
}
if(uwriteepic >= 51 && uwriteepic <= 70) {
  dropeor = Math.floor(Math.random() * (7 - 2) + 2)* pet21effect1* pet22effect2* pet28effect2* pet38effect1
  dropnameepic = `Tu as obtenu ${Math.trunc(dropeor)} ${POemote} Pièces d'Or`
}
if(uwriteepic >= 41 && uwriteepic <= 50) {
  dropedaily = Math.floor(Math.random() * (13 - 4) + 4);
  dropnameepic = `Tu as obtenu ${Math.trunc(dropedaily)} ${dailyemote} DailyPoints`
}
if(uwriteepic >= 21 && uwriteepic <= 40) {
  droperx = Math.floor(Math.random() * (500 - 250) + 250)*pet23effect1
  dropnameepic = `Tu as obtenu ${Math.trunc(droperx)} ${RXemote} RxCoins`
}
if(uwriteepic >= 13 && uwriteepic <= 20) {
  dropefrag = Math.floor(Math.random() * (3 - 1) + 1)*pet24effect1* pet39effect1
  dropnameepic = `Tu as obtenu ${Math.trunc(dropefrag)} ${fragemote} fragments`
}
if(uwriteepic >= 11 && uwriteepic <= 12 && uitem16 === 0) {
  dropepic16 = 1
  dropnameepic = `Oh tu as obtenu l'arme Tronçonneuse <:tronconneuse16:597399638294659082> \n**Rareté de l'arme** = Rare`
}
if(uwriteepic >= 11 && uwriteepic <= 12 && uitem16 >= 1) {
  dropeor = 4
  dropnameepic = `Tu as obtenu 4 ${POemote} Pièces d'Or`
}

if(uwriteepic >= 9 && uwriteepic <= 10 && uitem17 === 0) {
  dropepic17 = 1
  dropnameepic = `Oh tu as obtenu l'arme Fusil de chasse <:fusilchasse17:597399173096013863> \n**Rareté de l'arme** = Rare`
}
if(uwriteepic >= 9 && uwriteepic <= 10 && uitem17 >= 1) {
  dropeor = 4
  dropnameepic = `Tu as obtenu 4 ${POemote} Pièces d'Or`
}

if(uwriteepic >= 7 && uwriteepic <= 8 && uitem21 === 0) {
  dropepic21 = 1
  dropnameepic = `Oh tu as obtenu l'arme Carapuce à O <:Carapuce__O21:597160550023036929> \n**Rareté de l'arme** = Epique`
}
if(uwriteepic >= 7 && uwriteepic <= 8 && uitem21 >= 1) {
  dropeor = 7
  dropnameepic = `Tu as obtenu 7 ${POemote} Pièces d'Or `
}


if(uwriteepic >= 5 && uwriteepic <= 6 && uitem22 === 0) {
  dropepic22 = 1
  dropnameepic = `Oh tu as obtenu l'arme Poppy <:poppy22:597365213037199361> \n**Rareté de l'arme** = Epique`
}
if(uwriteepic >= 5 && uwriteepic <= 6 && uitem22 >= 1) {
  dropeor = 7
  dropnameepic = `Tu as obtenu 7 ${POemote} Pièces d'Or`
}

if(uwriteepic >= 2 && uwriteepic <= 4) {
  droperare = 1
  dropnameepic = `Tu as obtenu 1 ${boxrareemote} Box rare `
}
if(uwriteepic >= 0 && uwriteepic <= 1) {
  dropemystery = 1
  dropnameepic = `Tu as obtenu 1 ${boxmysteryemote} Box mystérieuse `
}
//DROP BOX MYSTERY 

let dropmxp = 0
let dropmor = 0
let dropmdaily = 0
let dropmrx = 0
let dropepic34 = 0
let dropepic35 = 0
let dropepic36 = 0
let dropepic37 = 0
let dropmgold = 0
let dropmepic = 0
let dropmfrag = 0
let dropnamemystery = "Dommage, tu n'as rien obtenu"


if(uwritemystery >= 71) {
  dropmxp = Math.floor(Math.random() * (26500 - 13550) + 13550)* pet21effect1* pet29effect2* pet36effect2
  dropnamemystery = `Tu as obtenu ${Math.trunc(dropmxp)} ${xp1emote} XP`
}
if(uwritemystery >= 51 && uwritemystery <= 70) {
  dropmor = Math.floor(Math.random() * (13 - 5) + 5)* pet21effect1* pet22effect2* pet28effect2* pet38effect1
  dropnamemystery = `Tu as obtenu ${Math.trunc(dropmor)} ${POemote} Pièces d'Or`
}
if(uwritemystery >= 41 && uwritemystery <= 50) {
  dropmdaily = Math.floor(Math.random() * (20 - 7) + 7);
  dropnamemystery = `Tu as obtenu ${Math.trunc(dropmdaily)} ${dailyemote} DailyPoints`
}
if(uwritemystery >= 21 && uwritemystery <= 40) {
  dropmrx = Math.floor(Math.random() * (1100 - 450) + 450)*pet23effect1
  dropnamemystery = `Tu as obtenu ${Math.trunc(dropmrx)} ${RXemote} RxCoins`
}
if(uwritemystery >= 13 && uwritemystery <= 20) {
  dropmfrag = Math.floor(Math.random() * (6 - 2) + 2)*pet24effect1* pet39effect1
  dropnamemystery = `Tu as obtenu ${Math.trunc(dropmfrag)} ${fragemote} fragments`
}
if(uwritemystery >= 11 && uwritemystery <= 12 && uitem34 === 0) {
  dropepic34 = 1
  dropnamemystery = `Oh tu as obtenu l'arme Rhitta <:Rhitta34:597752072145731594> \n**Rareté de l'arme** = Légendaire`
}
if(uwritemystery >= 11 && uwritemystery <= 12 && uitem34 >= 1) {
  dropmor = 25
  dropnamemystery = `Tu as obtenu 25 ${POemote} Pièces d'Or`
}

if(uwritemystery >= 9 && uwritemystery <= 10 && uitem35 === 0) {
  dropepic35 = 1
  dropnamemystery = `Oh tu as obtenu l'arme Dark Repulser <:DarkRepulser35:597752101267046410> \n**Rareté de l'arme** = Légendaire`
}
if(uwritemystery >= 9 && uwritemystery <= 10 && uitem35 >= 1) {
  dropmor = 25
  dropnamemystery = `Tu as obtenu 25 ${POemote} Pièces d'Or`
}

if(uwritemystery >= 7 && uwritemystery <= 8 && uitem36 === 0) {
  dropepic36 = 1
  dropnamemystery = `Oh tu as obtenu l'arme Lambent Light <:LambentLight36:597752148947632128> \n**Rareté de l'arme** = Légendaire`
}
if(uwritemystery >= 7 && uwritemystery <= 8 && uitem36 >= 1) {
  dropmor = 25
  dropnamemystery = `Tu as obtenu 25 ${POemote} Pièces d'Or `
}


if(uwritemystery >= 5 && uwritemystery <= 6 && uitem37 === 0) {
  dropepic37 = 1
  dropnamemystery = `Oh tu as obtenu l'arme Chastiefol: Lance <:ChastiefolLance37:597752209664376853> \n**Rareté de l'arme** = Légendaire`
}
if(uwritemystery >= 5 && uwritemystery <= 6 && uitem37 >= 1) {
  dropmor = 25
  dropnamemystery = `Tu as obtenu 25 ${POemote} Pièces d'Or`
}

if(uwritemystery >= 2 && uwritemystery <= 4) {
  dropmepic = 1
  dropnamemystery = `Tu as obtenu 1 ${boxepicemote} Box épique `
}
if(uwritemystery >= 0 && uwritemystery <= 1) {
  dropmgold = 1
  dropnamemystery = `Tu as obtenu 1 ${boxgoldemote} Box dorée `
}




//DROP BOX GOLD
let dropgxp = 0
let dropgor = 0
let dropgdaily = 0
let dropgrx = 0
let dropepic24 = 0
let dropepic31 = 0
let dropepic32 = 0
let dropepic40 = 0
let dropgmystery = 0
let dropgsupreme = 0
let dropgfrag = 0
let dropnamegold = "Dommage, tu n'as rien obtenu"
let dropggemme2 = 0
let dropggemme3 = 0
let dropggemme5 = 0
let dropggemme4 = 0

if(uwritegold >= 71) {
  dropgxp = Math.floor(Math.random() * (105000 - 85550) + 85550)* pet21effect1* pet29effect2* pet36effect2
  dropnamegold = `Tu as obtenu ${Math.trunc(dropgxp)} ${xp1emote} XP`
}
if(uwritegold >= 51 && uwritegold <= 70) {
  dropgor = Math.floor(Math.random() * (5500 - 50) + 50)* pet21effect1* pet22effect2* pet28effect2* pet38effect1
  dropnamegold = `Tu as obtenu ${Math.trunc(dropgor)} ${POemote} Pièces d'Or`
}
if(uwritegold >= 41 && uwritegold <= 50) {
  dropgdaily = Math.floor(Math.random() * (50 - 20) + 20);
  dropnamegold = `Tu as obtenu ${Math.trunc(dropgdaily)} ${dailyemote} DailyPoints`
}
if(uwritegold >= 21 && uwritegold <= 40) {
  dropgrx = Math.floor(Math.random() * (15100 - 4250) + 4250)*pet23effect1
  dropnamegold = `Tu as obtenu ${Math.trunc(dropgrx)} ${RXemote} RxCoins`
}
if(uwritegold >= 13 && uwritegold <= 20) {
  dropgfrag = Math.floor(Math.random() * (15 - 4) + 4)*pet24effect1* pet39effect1
  dropnamegold = `Tu as obtenu ${Math.trunc(dropgfrag)} ${fragemote} fragments`
}
if(uwritegold >= 11 && uwritegold <= 12 && uitem24 === 0) {
  dropepic24 = 1
  dropnamegold = `Oh tu as obtenu l'arme Scissor Blade Violet <:scissorbladepurple24:597399493062688808> \n**Rareté de l'arme** = Epique`
}
if(uwritegold >= 11 && uwritegold <= 12 && uitem24 >= 1) {
  dropggemme2 = 1
  dropnamegold = `Ta ${gemme2name} ${gemme2emote} à gagné 1 niveau`
}

if(uwritegold >= 9 && uwritegold <= 10 && uitem31 === 0) {
  dropepic31 = 1
  dropnamegold = `Oh tu as obtenu l'arme Couteau d'Izaya <:IzayaKnife31:597399269678252072> \n**Rareté de l'arme** = Epique`
}
if(uwritegold >= 9 && uwritegold <= 10 && uitem31 >= 1) {
  dropggemme3 = 1
  dropnamegold = `Ta ${gemme3name} ${gemme3emote} à gagné 1 niveau`
}

if(uwritegold >= 7 && uwritegold <= 8 && uitem32 === 0) {
  dropepic32 = 1
  dropnamegold = `Oh tu as obtenu l'arme Faux d'Ombre <:FauxOmbre32:597399163034009610> \n**Rareté de l'arme** = Epique`
}
if(uwritegold >= 7 && uwritegold <= 8 && uitem32 >= 1) {
  dropggemme5 = 1
  dropnamegold = `Ta ${gemme5name} ${gemme5emote} à gagné 1 niveau`
}


if(uwritegold >= 5 && uwritegold <= 6 && uitem40 === 0) {
  dropepic40 = 1
  dropnamegold = `Oh tu as obtenu l'arme Trident <:Trident40:597752417685340160> \n**Rareté de l'arme** = Légendaire`
}
if(uwritegold >= 5 && uwritegold <= 6 && uitem40 >= 1) {
  dropggemme4 = 1
  dropnamegold = `Ta ${gemme4name} ${gemme4emote} à gagné 1 niveau`
}

if(uwritegold >= 2 && uwritegold <= 4) {
  dropgmystery = 1
  dropnamegold = `Tu as obtenu 1 ${boxmysteryemote} Box mystérieuse `
}
if(uwritegold >= 0 && uwritegold <= 1) {
  dropgsupreme = 1
  dropnamegold = `Tu as obtenu 1 ${boxsupremeemote} Box suprême `
}
//DROP BOX SUPREME
let dropsxp = 0
let dropsor = 0
let dropsdaily = 0
let dropsrx = 0
let dropepic33 = 0
let dropepic41 = 0
let dropsfrag = 0
let dropnamesupreme = "Dommage, tu n'as rien obtenu"
let dropssupreme = 0
let dropsgemme2 = 0
let dropsgemme3 = 0
let dropsgemme5 = 0
let dropsgemme4 = 0

if(uwritesupreme >= 31) {
  dropsxp = Math.floor(Math.random() * (1000000 - 500000) + 500000)* pet21effect1* pet29effect2* pet36effect2
  dropnamesupreme = `Tu as obtenu ${Math.trunc(dropsxp)} ${xp1emote} XP`
}
if(uwritesupreme >= 25 && uwritesupreme <= 30) {
  dropsor = Math.floor(Math.random() * (1000 - 500) + 500)* pet21effect1* pet22effect2* pet28effect2* pet38effect1
  dropnamesupreme = `Tu as obtenu ${Math.trunc(dropsor)} ${POemote} Pièces d'Or`
}
if(uwritesupreme >= 20 && uwritesupreme <= 24) {
  dropsdaily = Math.floor(Math.random() * (150 - 60) + 60);
  dropnamesupreme = `Tu as obtenu ${Math.trunc(dropsdaily)} ${dailyemote} DailyPoints`
}
if(uwritesupreme >= 15 && uwritesupreme <= 19) {
  dropsrx = Math.floor(Math.random() * (100000 - 22500) + 22500)*pet23effect1
  dropnamesupreme = `Tu as obtenu ${Math.trunc(dropsrx)} ${RXemote} RxCoins`
}
if(uwritesupreme >= 8 && uwritesupreme <= 14) {
  dropsfrag = Math.floor(Math.random() * (25 - 9) + 9)*pet24effect1* pet39effect1
  dropnamesupreme = `Tu as obtenu ${Math.trunc(dropsfrag)} ${fragemote} fragments`
}
if(uwritesupreme >= 5 && uwritesupreme <= 7 && uitem33 === 0) {
  dropepic33 = 1
  dropnamesupreme = `Oh tu as obtenu l'arme Shofiel Model 3 ${item33emote}\n**Rareté de l'arme** = Epique`
}
if(uwritesupreme >= 5 && uwritesupreme <= 7 && uitem33 >= 1) {
  dropssupreme = 1
  dropnamesupreme = `Tu as obtenu ${dropssupreme} ${boxsupremeemote} Box suprême`
}

if(uwritesupreme === 4 && uitem41 === 0) {
  dropepic41 = 1
  dropnamesupreme = `Oh tu as obtenu l'arme Saika ${item41emote}\n**Rareté de l'arme** = Légendaire`
}

if(uwritesupreme === 4 && uitem41 >= 1) {
  dropsgemme2 = 2
  dropsgemme3 = 2
  dropsgemme4 = 2
  dropsgemme5 = 2
  dropnamesupreme = "Tes gemmes ont toutes gagnées 2 niveaux.\n``Note:Toutes les gemmes à l'exception de la première.``"
}

if(uwritesupreme >= 0 && uwritesupreme <= 3) {
  dropsgemme2 = 1
  dropsgemme3 = 1
  dropsgemme4 = 1
  dropsgemme5 = 1
  dropnamesupreme = "Tes gemmes ont toutes gagnées 1 niveau.\n``Note:Toutes les gemmes à l'exception de la première.``"
}

if(
  includesRealy(message, `!use co`) ||
  includesRealy(message, `!USE co`) ||
  includesRealy(message, `!Use co`) ||
  includesRealy(message, `!use Co`) ||
  includesRealy(message, `!USE Co`) ||
  includesRealy(message, `!Use Co`)



){
  if(uclassen === 0 || uparchemincommun ===  0) message.channel.send("Tu n'as pas assez de parchemins communs.")
  if(uclassen >= 1 && uparchemincommun >= 1) {


    pet1[message.author.id] = {
      pet1: upet1 + dpet1
    };
    pet2[message.author.id] = {
      pet2: upet2 + dpet2
    };
    pet3[message.author.id] = {
      pet3: upet3 + dpet3
    };

    pet4[message.author.id] = {
      pet4: upet4 + dpet4
    };
    pet5[message.author.id] = {
      pet5: upet5 + dpet5
    };
    pet6[message.author.id] = {
      pet6: upet6 + dpet6
    };
    pet7[message.author.id] = {
      pet7: upet7 + dpet7
    };
    pet8[message.author.id] = {
      pet8: upet8 + dpet8
    };

    skin1[message.author.id] = {
      skin1: uskin1 + dskin1
    };
    skin2[message.author.id] = {
      skin2: uskin2 + dskin2
    };
    skin3[message.author.id] = {
      skin3: uskin3 + dskin3
    };
    skin4[message.author.id] = {
      skin4: uskin4 + dskin4
    };
    skin5[message.author.id] = {
      skin5: uskin5 + dskin5
    };
    skin6[message.author.id] = {
      skin6: uskin6 + dskin6
    };
    skin7[message.author.id] = {
      skin7: uskin7 + dskin7
    };
    skin8[message.author.id] = {
      skin8: uskin8 + dskin8
    };
    xpclasse[message.author.id] = {
      xpclasse: xpclasseactuel + dxpclasse,
      levelclasse: nivactuelclasse
    };


    parchemincommun[message.author.id] = {
      parchemincommun: uparchemincommun - 1
    };
    writepcommon[message.author.id] = {
      writepcommon: Math.floor(Math.random() * 100) + 1
    };




    fs.writeFile("./pet1.json", JSON.stringify(pet1), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pet2.json", JSON.stringify(pet2), (err) => {
      if(err) console.log(err)
    });
        fs.writeFile("./pet3.json", JSON.stringify(pet3), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pet4.json", JSON.stringify(pet4), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pet5.json", JSON.stringify(pet5), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pet6.json", JSON.stringify(pet6), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pet7.json", JSON.stringify(pet7), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pet8.json", JSON.stringify(pet8), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin1.json", JSON.stringify(skin1), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin2.json", JSON.stringify(skin2), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin3.json", JSON.stringify(skin3), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin4.json", JSON.stringify(skin4), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin5.json", JSON.stringify(skin5), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin6.json", JSON.stringify(skin6), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin7.json", JSON.stringify(skin7), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin8.json", JSON.stringify(skin8), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./parchemincommun.json", JSON.stringify(parchemincommun), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./writepcommon.json", JSON.stringify(writepcommon), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./experienceclasse.json", JSON.stringify(xpclasse), (err) => {
      if(err) console.log(err)
    });
    message.channel.send(`__${emoteparchemincommun} Parchemin Commun:__\n${dpcname}\n${trucbizarre}Parchemins communs restants: ${uparchemincommun-1}${trucbizarre}`)

}
}

if(
  includesRealy(message, `!use ra`) ||
  includesRealy(message, `!USE ra`) ||
  includesRealy(message, `!Use ra`) ||
  includesRealy(message, `!use Ra`) ||
  includesRealy(message, `!USE Ra`) ||
  includesRealy(message, `!Use Ra`)
){
  if(uclassen === 0 || uparcheminrare ===  0) message.channel.send("Tu n'as pas assez de parchemins rares.")
  if(uclassen >= 1 && uparcheminrare >= 1) {


    pet9[message.author.id] = {
      pet9: upet9 + dpet9
    };
    pet10[message.author.id] = {
      pet10: upet10 + dpet10
    };
    pet11[message.author.id] = {
      pet11: upet11 + dpet11
    };

    pet12[message.author.id] = {
      pet12: upet12 + dpet12
    };
    pet13[message.author.id] = {
      pet13: upet13 + dpet13
    };
    pet14[message.author.id] = {
      pet14: upet14 + dpet14
    };
    pet15[message.author.id] = {
      pet15: upet15 + dpet15
    };
    pet41[message.author.id] = {
      pet41: upet41 + dpet41
    };

    skin9[message.author.id] = {
      skin9: uskin9 + dskin9
    };
    skin10[message.author.id] = {
      skin10: uskin10 + dskin10
    };
    skin11[message.author.id] = {
      skin11: uskin11 + dskin11
    };
    skin12[message.author.id] = {
      skin12: uskin12 + dskin12
    };
    skin13[message.author.id] = {
      skin13: uskin13 + dskin13
    };
    skin14[message.author.id] = {
      skin14: uskin14 + dskin14
    };
    skin15[message.author.id] = {
      skin15: uskin15 + dskin15
    };
    skin41[message.author.id] = {
      skin41: uskin41 + dskin41
    };
    xpclasse[message.author.id] = {
      xpclasse: xpclasseactuel + drxpclasse,
      levelclasse: nivactuelclasse
    };


    parcheminrare[message.author.id] = {
      parcheminrare: uparcheminrare - 1
    };
    parchemincommun[message.author.id] = {
     parchemincommun: uparchemincommun + dpcr
    };
    writeprare[message.author.id] = {
      writeprare: Math.floor(Math.random() * 100) + 1
    };




    fs.writeFile("./pet9.json", JSON.stringify(pet9), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pet10.json", JSON.stringify(pet10), (err) => {
      if(err) console.log(err)
    });
        fs.writeFile("./pet11.json", JSON.stringify(pet11), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pet12.json", JSON.stringify(pet12), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pet13.json", JSON.stringify(pet13), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pet14.json", JSON.stringify(pet14), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pet15.json", JSON.stringify(pet15), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pet41.json", JSON.stringify(pet41), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin9.json", JSON.stringify(skin9), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin10.json", JSON.stringify(skin10), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin11.json", JSON.stringify(skin11), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin12.json", JSON.stringify(skin12), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin13.json", JSON.stringify(skin13), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin14.json", JSON.stringify(skin14), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin15.json", JSON.stringify(skin15), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin41.json", JSON.stringify(skin41), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./parcheminrare.json", JSON.stringify(parcheminrare), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./parchemincommun.json", JSON.stringify(parchemincommun), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./writeprare.json", JSON.stringify(writeprare), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./experienceclasse.json", JSON.stringify(xpclasse), (err) => {
      if(err) console.log(err)
    });
    message.channel.send(`__${emoteparcheminrare} Parchemin Rare:__\n${dprname}\n${trucbizarre}Parchemins rares restants: ${uparcheminrare-1}${trucbizarre}`)

}
}

if(
  includesRealy(message, `!use ep`) ||
  includesRealy(message, `!USE ep`) ||
  includesRealy(message, `!Use ep`) ||
  includesRealy(message, `!use Ep`) ||
  includesRealy(message, `!USE Ep`) ||
  includesRealy(message, `!Use Ep`)



){
  if(uclassen === 0 || uparcheminepic ===  0) message.channel.send("Tu n'as pas assez de parchemins épiques.")
  if(uclassen >= 1 && uparcheminepic >= 1) {


    pet16[message.author.id] = {
      pet16: upet16 + dpet16
    };
    pet17[message.author.id] = {
      pet17: upet17 + dpet17
    };
    pet18[message.author.id] = {
      pet18: upet18 + dpet18
    };

    pet19[message.author.id] = {
      pet19: upet19 + dpet19
    };
    pet20[message.author.id] = {
      pet20: upet20 + dpet20
    };
    pet21[message.author.id] = {
      pet21: upet21 + dpet21
    };
    pet22[message.author.id] = {
      pet22: upet22 + dpet22
    };
    pet23[message.author.id] = {
      pet23: upet23 + dpet23
    };
    pet24[message.author.id] = {
      pet24: upet24 + dpet24
    };
    pet42[message.author.id] = {
      pet42: upet42 + dpet42
    };

    skin16[message.author.id] = {
      skin16: uskin16 + dskin16
    };
    skin17[message.author.id] = {
      skin17: uskin17 + dskin17
    };
    skin18[message.author.id] = {
      skin18: uskin18 + dskin18
    };
    skin19[message.author.id] = {
      skin19: uskin19 + dskin19
    };
    skin20[message.author.id] = {
      skin20: uskin20 + dskin20
    };
    skin21[message.author.id] = {
      skin21: uskin21 + dskin21
    };
    skin22[message.author.id] = {
      skin22: uskin22 + dskin22
    };
    skin23[message.author.id] = {
      skin23: uskin23 + dskin23
    };
    skin24[message.author.id] = {
      skin24: uskin24 + dskin24
    };
    skin42[message.author.id] = {
      skin42: uskin42 + dskin42
    };
    xpclasse[message.author.id] = {
      xpclasse: xpclasseactuel + dexpclasse,
      levelclasse: nivactuelclasse
    };
    parcheminrare[message.author.id] = {
      parcheminrare: uparcheminrare + dper
    };

    parcheminepic[message.author.id] = {
      parcheminepic: uparcheminepic - 1
    };
    writepepic[message.author.id] = {
      writepepic: Math.floor(Math.random() * 100) + 1
    };




    fs.writeFile("./pet16.json", JSON.stringify(pet16), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pet17.json", JSON.stringify(pet17), (err) => {
      if(err) console.log(err)
    });
        fs.writeFile("./pet18.json", JSON.stringify(pet18), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pet19.json", JSON.stringify(pet19), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pet20.json", JSON.stringify(pet20), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pet21.json", JSON.stringify(pet21), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pet22.json", JSON.stringify(pet22), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pet23.json", JSON.stringify(pet23), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pet24.json", JSON.stringify(pet24), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pet42.json", JSON.stringify(pet42), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin16.json", JSON.stringify(skin16), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin17.json", JSON.stringify(skin17), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin18.json", JSON.stringify(skin18), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin19.json", JSON.stringify(skin19), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin20.json", JSON.stringify(skin20), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin21.json", JSON.stringify(skin21), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin22.json", JSON.stringify(skin22), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin23.json", JSON.stringify(skin23), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin24.json", JSON.stringify(skin24), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin42.json", JSON.stringify(skin42), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./parcheminrare.json", JSON.stringify(parcheminrare), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./parcheminepic.json", JSON.stringify(parcheminepic), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./writepepic.json", JSON.stringify(writepepic), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./experienceclasse.json", JSON.stringify(xpclasse), (err) => {
      if(err) console.log(err)
    });
    message.channel.send(`__${emoteparcheminepic} Parchemin Epique:__\n${dpename}\n${trucbizarre}Parchemins épiques restants: ${uparcheminepic-1}${trucbizarre}`)

}
}

if(

  includesRealy(message, `!use le`) ||
  includesRealy(message, `!USE le`) ||
  includesRealy(message, `!Use le`) ||
  includesRealy(message, `!use Le`) ||
  includesRealy(message, `!USE Le`) ||
  includesRealy(message, `!Use Le`)



) {
  if(uclassen === 0 || uparcheminlegendaire ===  0) message.channel.send("Tu n'as pas assez de parchemins légendaires.")
  if(uclassen >= 1 && uparcheminlegendaire >= 1) {


    pet25[message.author.id] = {
      pet25: upet25 + dpet25
    };
    pet26[message.author.id] = {
      pet26: upet26 + dpet26
    };
    pet27[message.author.id] = {
      pet27: upet27 + dpet27
    };

    pet28[message.author.id] = {
      pet28: upet28 + dpet28
    };
    pet29[message.author.id] = {
      pet29: upet29 + dpet29
    };
    pet30[message.author.id] = {
      pet30: upet30 + dpet30
    };
    pet31[message.author.id] = {
      pet31: upet31 + dpet31
    };
    pet32[message.author.id] = {
      pet32: upet32 + dpet32
    };
    pet33[message.author.id] = {
      pet33: upet33 + dpet33
    };
    pet34[message.author.id] = {
      pet34: upet34 + dpet34
    };
    pet35[message.author.id] = {
      pet35: upet35 + dpet35
    };
    pet36[message.author.id] = {
      pet36: upet36 + dpet36
    };
    pet37[message.author.id] = {
      pet37: upet37 + dpet37
    };
    pet38[message.author.id] = {
      pet38: upet38 + dpet38
    };
    pet39[message.author.id] = {
      pet39: upet39 + dpet39
    };
    pet40[message.author.id] = {
      pet40: upet40 + dpet40
    };
    skin25[message.author.id] = {
      skin25: uskin25 + dskin25
    };
    skin26[message.author.id] = {
      skin26: uskin26 + dskin26
    };
    skin27[message.author.id] = {
      skin27: uskin27 + dskin27
    };
    skin28[message.author.id] = {
      skin28: uskin28 + dskin28
    };
    skin29[message.author.id] = {
      skin29: uskin29 + dskin29
    };
    skin30[message.author.id] = {
      skin30: uskin30 + dskin30
    };
    skin31[message.author.id] = {
      skin31: uskin31 + dskin31
    };
    skin32[message.author.id] = {
      skin32: uskin32 + dskin32
    };
    skin33[message.author.id] = {
      skin33: uskin33 + dskin33
    };
    skin34[message.author.id] = {
      skin34: uskin34 + dskin34
    };
    skin35[message.author.id] = {
      skin35: uskin35 + dskin35
    };
    skin36[message.author.id] = {
      skin36: uskin36 + dskin36
    };
    skin37[message.author.id] = {
      skin37: uskin37 + dskin37
    };
    skin38[message.author.id] = {
      skin38: uskin38 + dskin38
    };
    skin39[message.author.id] = {
      skin39: uskin39 + dskin39
    };
    skin40[message.author.id] = {
      skin40: uskin40 + dskin40
    };

    xpclasse[message.author.id] = {
      xpclasse: xpclasseactuel + dlxpclasse,
      levelclasse: nivactuelclasse
    };
    parcheminepic[message.author.id] = {
      parcheminepic: uparcheminepic + dplr
    };

    parcheminlegendaire[message.author.id] = {
      parcheminlegendaire: uparcheminlegendaire - 1
    };
    writeplegend[message.author.id] = {
      writeplegend: Math.floor(Math.random() * 200) + 1
    };



    fs.writeFile("./pet25.json", JSON.stringify(pet25), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pet26.json", JSON.stringify(pet26), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pet27.json", JSON.stringify(pet27), (err) => {
      if(err) console.log(err)
    });
        fs.writeFile("./pet28.json", JSON.stringify(pet28), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pet29.json", JSON.stringify(pet29), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pet30.json", JSON.stringify(pet30), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pet31.json", JSON.stringify(pet31), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pet32.json", JSON.stringify(pet32), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pet33.json", JSON.stringify(pet33), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pet34.json", JSON.stringify(pet34), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pet35.json", JSON.stringify(pet35), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pet36.json", JSON.stringify(pet36), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pet37.json", JSON.stringify(pet37), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pet38.json", JSON.stringify(pet38), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pet39.json", JSON.stringify(pet39), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pet40.json", JSON.stringify(pet40), (err) => {
      if(err) console.log(err)
    });


    fs.writeFile("./skin25.json", JSON.stringify(skin25), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin26.json", JSON.stringify(skin26), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin27.json", JSON.stringify(skin27), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin28.json", JSON.stringify(skin28), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin29.json", JSON.stringify(skin29), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin30.json", JSON.stringify(skin30), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin31.json", JSON.stringify(skin31), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin32.json", JSON.stringify(skin32), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin33.json", JSON.stringify(skin33), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin34.json", JSON.stringify(skin34), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin35.json", JSON.stringify(skin35), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin36.json", JSON.stringify(skin36), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin37.json", JSON.stringify(skin37), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin38.json", JSON.stringify(skin38), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin39.json", JSON.stringify(skin39), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./skin40.json", JSON.stringify(skin40), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./parcheminepic.json", JSON.stringify(parcheminepic), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./parcheminlegendaire.json", JSON.stringify(parcheminlegendaire), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./writeplegend.json", JSON.stringify(writeplegend), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./experienceclasse.json", JSON.stringify(xpclasse), (err) => {
      if(err) console.log(err)
    });
    message.channel.send(`__${emoteparcheminlegendaire} Parchemin Légendaire:__\n${dplname}\n${trucbizarre}Parchemins légendaires restants: ${uparcheminlegendaire-1}${trucbizarre}`)

  }
};

let constnivo = nivactuel
if(constnivo > 100){
  constnivo = 100
}
let constnivo2 = 2*nivactuel
if(constnivo2 > 200){
  constnivo2 = 200
}
let usexp1xp = 200*constnivo
let usexp2xp = 1000*constnivo
let usexp3xp = 6000*constnivo
let usexp3xpc = 10*constnivo2 
if(
  includesRealy(message, `!use experience1`) ||
  includesRealy(message, `!Use experience1`) ||
  includesRealy(message, `!USE experience1`) ||
  includesRealy(message, `!Use Experience1`) ||
  includesRealy(message, `!use Experience1`) ||
  includesRealy(message, `!USE Experience1`) ||
  includesRealy(message, `!use xp1`) ||
  includesRealy(message, `!USE xp1`) ||
  includesRealy(message, `!Use xp1`) 


) {
  if(uclassen === 0 || upotxp1 ===  0) message.channel.send("Tu n'as pas assez de potions d'éxpérience I.")
  if(uclassen >= 1 && upotxp1 >= 1) {

    xp[message.author.id] = {
      xp: xpactuel + Math.trunc(usexp1xp)

    };
    potxp1[message.author.id] = {
      potxp1: upotxp1 - 1
    };
    fs.writeFile("./experience.json", JSON.stringify(xp), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./potxp1.json", JSON.stringify(potxp1), (err) => {
      if(err) console.log(err)
    });
    message.channel.send(`__${potxp1emote} Potion d'éxpérience I:__\nVous avez gagné ${Math.trunc(usexp1xp)} ${xp1emote} !\n${trucbizarre}Potions d'éxpérience I restantes: ${upotxp1-1}${trucbizarre}`)

  }

}
if(
  includesRealy(message, `!use experience2`) ||
  includesRealy(message, `!Use experience2`) ||
  includesRealy(message, `!USE experience2`) ||
  includesRealy(message, `!Use Experience2`) ||
  includesRealy(message, `!use Experience2`) ||
  includesRealy(message, `!USE Experience2`) ||
  includesRealy(message, `!use xp2`) ||
  includesRealy(message, `!USE xp2`) ||
  includesRealy(message, `!Use xp2`) 


) {
  if(uclassen === 0 || upotxp2 ===  0) message.channel.send("Tu n'as pas assez de potions d'éxpérience II.")
  if(uclassen >= 1 && upotxp2 >= 1) {

    xp[message.author.id] = {
      xp: xpactuel + Math.trunc(usexp2xp)

    };
    potxp2[message.author.id] = {
      potxp2: upotxp2 - 1
    };
    fs.writeFile("./experience.json", JSON.stringify(xp), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./potxp2.json", JSON.stringify(potxp2), (err) => {
      if(err) console.log(err)
    });
    message.channel.send(`__${potxp2emote} Potion d'éxpérience II:__\nVous avez gagné ${Math.trunc(usexp2xp)} ${xp1emote} !\n${trucbizarre}Potions d'éxpérience II restantes: ${upotxp2-1}${trucbizarre}`)

  }

}
if(
  includesRealy(message, `!use experience3`) ||
  includesRealy(message, `!Use experience3`) ||
  includesRealy(message, `!USE experience3`) ||
  includesRealy(message, `!Use Experience3`) ||
  includesRealy(message, `!use Experience3`) ||
  includesRealy(message, `!USE Experience3`) ||
  includesRealy(message, `!use xp3`) ||
  includesRealy(message, `!USE xp3`) ||
  includesRealy(message, `!Use xp3`) 


) {
  if(uclassen === 0 || upotxp3 ===  0) message.channel.send("Tu n'as pas assez de potions d'éxpérience III.")
  if(uclassen >= 1 && upotxp3 >= 1) {

    xp[message.author.id] = {
      xp: xpactuel + Math.trunc(usexp3xp)

    };
    xpclasse[message.author.id] = {
      xpclasse: xpclasseactuel + Math.trunc(usexp3xpc),
      levelclasse: nivactuelclasse
    };
    potxp3[message.author.id] = {
      potxp3: upotxp3 - 1
    };
    fs.writeFile("./experience.json", JSON.stringify(xp), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./experienceclasse.json", JSON.stringify(xpclasse), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./potxp3.json", JSON.stringify(potxp3), (err) => {
      if(err) console.log(err)
    });
    message.channel.send(`__${potxp3emote} Potion d'éxpérience III:__\nVous avez gagné ${Math.trunc(usexp3xp)} ${xp1emote} ainsi que ${Math.trunc(usexp3xpc)} ${xp2emote} pour ta classe !\n${trucbizarre}Potions d'éxpérience III restantes: ${upotxp3-1}${trucbizarre}`)

  }

}

let jetajouteregen1 = (25 * PMaxPv)/100



let jetajouteregen2 = (50 * PMaxPv)/100

let jetajouteregen3 = (100 * PMaxPv)/100

if(
  includesRealy(message, `!use regeneration1`) ||
  includesRealy(message, `!Use regeneration1`) ||
  includesRealy(message, `!USE regeneration1`) ||
  includesRealy(message, `!Use Regeneration1`) ||
  includesRealy(message, `!use Regeneration1`) ||
  includesRealy(message, `!USE Regeneration1`) ||
  includesRealy(message, `!use rg1`) ||
  includesRealy(message, `!USE rg1`) ||
  includesRealy(message, `!Use rg1`) 


) {
  if(uclassen === 0 || upot25 ===  0) message.channel.send("Tu n'as pas assez de potions de régénération I.")
  if(uclassen != 0 && upot25 != 0 && uPv > PMaxPv*0.75) message.channel.send("Tes Pv's sont déjà assez remplis, impossible de les régénerer plus (Vous êtes en possession de +75% de vos Pv's max)")
  if(uclassen >= 1 && upot25 >= 1 && PMaxPv*0.75 >= uPv) {

    Pv[message.author.id] = {
      Pv: uPv + Math.trunc(jetajouteregen1)
    };

    pot25[message.author.id] = {
      pot25: upot25 - 1
    };

    fs.writeFile("./Pv.json", JSON.stringify(Pv), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pot25.json", JSON.stringify(pot25), (err) => {
      if(err) console.log(err)
    });
    message.channel.send(`__${pot25emote} Potion de régénération I:__\nVous vous êtes regéneré de ${Math.trunc(jetajouteregen1)} Pv\n${trucbizarre}Potions de régénération I restantes: ${upot25-1}${trucbizarre}`)

  }

}

if(
  includesRealy(message, `!use regeneration2`) ||
  includesRealy(message, `!Use regeneration2`) ||
  includesRealy(message, `!USE regeneration2`) ||
  includesRealy(message, `!Use Regeneration2`) ||
  includesRealy(message, `!use Regeneration2`) ||
  includesRealy(message, `!USE Regeneration2`) ||
  includesRealy(message, `!use rg2`) ||
  includesRealy(message, `!USE rg2`) ||
  includesRealy(message, `!Use rg2`) 


) {
  if(uclassen === 0 || upot50 ===  0) message.channel.send("Tu n'as pas assez de potions de régénération II.")
  if(uclassen != 0 && upot50 != 0 && uPv > PMaxPv*0.50) message.channel.send("Tes Pv's sont déjà assez remplis, impossible de les régénerer plus (Vous êtes en possession de +50% de vos Pv's max)")
  if(uclassen >= 1 && upot50 >= 1 && PMaxPv*0.50 >= uPv) {

    Pv[message.author.id] = {
      Pv: uPv + Math.trunc(jetajouteregen2)
    };

    pot50[message.author.id] = {
      pot50: upot50 - 1
    };

    fs.writeFile("./Pv.json", JSON.stringify(Pv), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pot50.json", JSON.stringify(pot50), (err) => {
      if(err) console.log(err)
    });
    message.channel.send(`__${pot50emote} Potion de régénération II:__\nVous vous êtes regéneré de ${Math.trunc(jetajouteregen2)} Pv\n${trucbizarre}Potions de régénération II restantes: ${upot50-1}${trucbizarre}`)

  }

}
if(
  includesRealy(message, `!use regeneration3`) ||
  includesRealy(message, `!Use regeneration3`) ||
  includesRealy(message, `!USE regeneration3`) ||
  includesRealy(message, `!Use Regeneration3`) ||
  includesRealy(message, `!use Regeneration3`) ||
  includesRealy(message, `!USE Regeneration3`) ||
  includesRealy(message, `!use rg3`) ||
  includesRealy(message, `!USE rg3`) ||
  includesRealy(message, `!Use rg3`) 


) {
  if(uclassen === 0 || upot100 ===  0) message.channel.send("Tu n'as pas assez de potions de régénération III.")
  if(uclassen != 0 && upot100 != 0 && uPv > PMaxPv*0) message.channel.send("Tes Pv's sont déjà assez remplis, impossible de les régénerer plus (Vous êtes en possession d'au moins 1% de vos Pv's max)")
  if(uclassen >= 1 && upot100 >= 1 && PMaxPv*10 >= uPv) {

    Pv[message.author.id] = {
      Pv: uPv + Math.trunc(jetajouteregen3)
    };

    pot100[message.author.id] = {
      pot100: upot100 - 1
    };

    fs.writeFile("./Pv.json", JSON.stringify(Pv), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./pot100.json", JSON.stringify(pot100), (err) => {
      if(err) console.log(err)
    });
    message.channel.send(`__${pot100emote} Potion de régénération III:__\nVous vous êtes regéneré de ${Math.trunc(jetajouteregen3)} Pv\n${trucbizarre}Potions de régénération III restantes: ${upot100-1}${trucbizarre}`)

  }

}

if(message.content === "!box open 1"){
  if(uclassen === 0 || uboxcommune ===  0) message.channel.send("Tu n'as pas assez de box commune.")
  if(uclassen >= 1 && uboxcommune >= 1) {


    xp[message.author.id] = {
      xp: xpactuel + dropcxp

    };
    Pieceor[message.author.id] = {
      Pieceor: uPieceor + dropcor
    };
    RxCoins[message.author.id] = {
      RxCoins: uRxCoins + dropcrx
    };
    boxrare[message.author.id] = {
      boxrare: uboxrare + dropcrare
    };
    item1[message.author.id] = {
      item1: uitem1 + dropepic1
    };
    item2[message.author.id] = {
      item2: uitem2 + dropepic2
    };
    item3[message.author.id] = {
      item3: uitem3 + dropepic3
    };

    item8[message.author.id] = {
      item8: uitem8 + dropepic8
    };
    boxcommune[message.author.id] = {
      boxcommune: uboxcommune - 1
    };
    writecommon[message.author.id] = {
      writecommon: Math.floor(Math.random() * 100) + 1
    };
    fs.writeFile("./experience.json", JSON.stringify(xp), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./RxCoins.json", JSON.stringify(RxCoins), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./boxrare.json", JSON.stringify(boxrare), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./item1.json", JSON.stringify(item1), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./item2.json", JSON.stringify(item2), (err) => {
      if(err) console.log(err)
    });
        fs.writeFile("./item3.json", JSON.stringify(item3), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./item8.json", JSON.stringify(item8), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./boxcommune.json", JSON.stringify(boxcommune), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./writecommon.json", JSON.stringify(writecommon), (err) => {
      if(err) console.log(err)
    });
    message.channel.send(`__${boxcommonemote} Box Commune:__\n${dropnamecommon}\n${trucbizarre}Box communes restantes: ${uboxcommune-1}${trucbizarre}`)

}
}

if(message.content === "!box open 2"){
  if(uclassen === 0 || uboxrare ===  0) message.channel.send("Tu n'as pas assez de box rare.")
  if(uclassen >= 1 && uboxrare >= 1) {


    xp[message.author.id] = {
      xp: xpactuel + droprxp

    };
    Pieceor[message.author.id] = {
      Pieceor: uPieceor + dropror
    };
    RxCoins[message.author.id] = {
      RxCoins: uRxCoins + droprrx
    };
    fragments[message.author.id] = {
      fragments: ufragments + droprfrag
    };
    dailypoints[message.author.id] = {
      dailypoints: udailypoints + droprdaily
    };
    boxcommune[message.author.id] = {
      boxcommune: uboxcommune + droprcommon
    };
    boxepique[message.author.id] = {
      boxepique: uboxepique + droprepic
    };
    item9[message.author.id] = {
      item9: uitem9 + dropepic9
    };
    item10[message.author.id] = {
      item10: uitem10 + dropepic10
    };
    item13[message.author.id] = {
      item13: uitem13 + dropepic13
    };

    item14[message.author.id] = {
      item14: uitem14 + dropepic14
    };
    boxrare[message.author.id] = {
      boxrare: uboxrare - 1
    };
    writerare[message.author.id] = {
      writerare: Math.floor(Math.random() * 100) + 1
    };
    fs.writeFile("./experience.json", JSON.stringify(xp), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./fragments.json", JSON.stringify(fragments), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./dailypoints.json", JSON.stringify(dailypoints), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./RxCoins.json", JSON.stringify(RxCoins), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./item9.json", JSON.stringify(item9), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./item10.json", JSON.stringify(item10), (err) => {
      if(err) console.log(err)
    });
        fs.writeFile("./item13.json", JSON.stringify(item13), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./item14.json", JSON.stringify(item14), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./boxcommune.json", JSON.stringify(boxcommune), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./boxrare.json", JSON.stringify(boxrare), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./boxepique.json", JSON.stringify(boxepique), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./writerare.json", JSON.stringify(writerare), (err) => {
      if(err) console.log(err)
    });
    message.channel.send(`__${boxrareemote} Box Rare:__\n${dropnamerare} \n${trucbizarre}Box rares restantes: ${uboxrare-1}${trucbizarre}` )

}
}

if(message.content === "!box open 3"){
  if(uclassen === 0 || uboxepique ===  0) message.channel.send("Tu n'as pas assez de box épique.")
  if(uclassen >= 1 && uboxepique >= 1) {


    xp[message.author.id] = {
      xp: xpactuel + dropexp

    };
    Pieceor[message.author.id] = {
      Pieceor: uPieceor + dropeor
    };
    RxCoins[message.author.id] = {
      RxCoins: uRxCoins + droperx
    };
    fragments[message.author.id] = {
      fragments: ufragments + dropefrag
    };
    dailypoints[message.author.id] = {
      dailypoints: udailypoints + dropedaily
    };
    boxrare[message.author.id] = {
      boxrare: uboxrare + droperare
    };
    mysterybox[message.author.id] = {
      mysterybox: umysterybox + dropemystery
    };
    item16[message.author.id] = {
      item16: uitem16 + dropepic16
    };
    item17[message.author.id] = {
      item17: uitem17 + dropepic17
    };
    item21[message.author.id] = {
      item21: uitem21 + dropepic21
    };

    item22[message.author.id] = {
      item22: uitem22 + dropepic22
    };
    boxepique[message.author.id] = {
      boxepique: uboxepique - 1
    };
    writeepic[message.author.id] = {
      writeepic: Math.floor(Math.random() * 100) + 1
    };
    fs.writeFile("./experience.json", JSON.stringify(xp), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./fragments.json", JSON.stringify(fragments), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./dailypoints.json", JSON.stringify(dailypoints), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./RxCoins.json", JSON.stringify(RxCoins), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./item16.json", JSON.stringify(item16), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./item17.json", JSON.stringify(item17), (err) => {
      if(err) console.log(err)
    });
        fs.writeFile("./item21.json", JSON.stringify(item21), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./item22.json", JSON.stringify(item22), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./boxrare.json", JSON.stringify(boxrare), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./boxepique.json", JSON.stringify(boxepique), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./mysterybox.json", JSON.stringify(mysterybox), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./writeepic.json", JSON.stringify(writeepic), (err) => {
      if(err) console.log(err)
    });
    message.channel.send(`__${boxepicemote} Box Epique:__\n${dropnameepic} \n${trucbizarre} Box épiques restantes: ${uboxepique-1}${trucbizarre}`)

}
}

if(message.content === "!box open 4"){
  if(uclassen === 0 || umysterybox ===  0) message.channel.send("Tu n'as pas assez de box mystérieuse.")
  if(uclassen >= 1 && umysterybox >= 1) {


    xp[message.author.id] = {
      xp: xpactuel + dropmxp

    };
    Pieceor[message.author.id] = {
      Pieceor: uPieceor + dropmor
    };
    RxCoins[message.author.id] = {
      RxCoins: uRxCoins + dropmrx
    };
    fragments[message.author.id] = {
      fragments: ufragments + dropmfrag
    };
    dailypoints[message.author.id] = {
      dailypoints: udailypoints + dropmdaily
    };
 
    boxepique[message.author.id] = {
      boxepique: uboxepique + dropmepic
    };
    goldbox[message.author.id] = {
      goldbox: ugoldbox + dropmgold
    };
    item34[message.author.id] = {
      item34: uitem34 + dropepic34
    };
    item35[message.author.id] = {
      item35: uitem35 + dropepic35
    };
    item36[message.author.id] = {
      item36: uitem36 + dropepic36
    };

    item37[message.author.id] = {
      item37: uitem37 + dropepic37
    };
    mysterybox[message.author.id] = {
      mysterybox: umysterybox - 1
    };
    writemystery[message.author.id] = {
      writemystery: Math.floor(Math.random() * 100) + 1
    };
    fs.writeFile("./experience.json", JSON.stringify(xp), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./fragments.json", JSON.stringify(fragments), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./dailypoints.json", JSON.stringify(dailypoints), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./RxCoins.json", JSON.stringify(RxCoins), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./item34.json", JSON.stringify(item34), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./item35.json", JSON.stringify(item35), (err) => {
      if(err) console.log(err)
    });
        fs.writeFile("./item36.json", JSON.stringify(item36), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./item37.json", JSON.stringify(item37), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./goldbox.json", JSON.stringify(goldbox), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./boxepique.json", JSON.stringify(boxepique), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./mysterybox.json", JSON.stringify(mysterybox), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./writemystery.json", JSON.stringify(writemystery), (err) => {
      if(err) console.log(err)
    });
    message.channel.send(`__${boxmysteryemote} Box Mystérieuse:__\n${dropnamemystery}\n${trucbizarre}Box mystérieuses restantes: ${umysterybox-1}${trucbizarre}`)

}
}

if(message.content === "!box open 5"){
  if(uclassen === 0 || ugoldbox ===  0) message.channel.send("Tu n'as pas assez de box dorée.")
  if(uclassen >= 1 && ugoldbox >= 1) {


    xp[message.author.id] = {
      xp: xpactuel + dropgxp

    };
    Pieceor[message.author.id] = {
      Pieceor: uPieceor + dropgor
    };
    RxCoins[message.author.id] = {
      RxCoins: uRxCoins + dropgrx
    };
    fragments[message.author.id] = {
      fragments: ufragments + dropgfrag
    };
    dailypoints[message.author.id] = {
      dailypoints: udailypoints + dropgdaily
    };
 
    mysterybox[message.author.id] = {
      mysterybox: umysterybox + dropgmystery
    };
    supremebox[message.author.id] = {
      supremebox: usupremebox + dropgsupreme
    };
    item24[message.author.id] = {
      item24: uitem24 + dropepic24
    };
    item31[message.author.id] = {
      item31: uitem31 + dropepic31
    };
    item32[message.author.id] = {
      item32: uitem32 + dropepic32
    };

    item40[message.author.id] = {
      item40: uitem40 + dropepic40
    };
    gemme2[message.author.id] = {
      gemme2: ugemme2 + dropggemme2
    };
    gemme3[message.author.id] = {
      gemme3: ugemme3 + dropggemme3
    };
    gemme4[message.author.id] = {
      gemme4: ugemme4 + dropggemme4
    };
    gemme5[message.author.id] = {
      gemme5: ugemme5 + dropggemme5
    };
    goldbox[message.author.id] = {
      goldbox: ugoldbox - 1
    };
    writegold[message.author.id] = {
      writegold: Math.floor(Math.random() * 100) + 1
    };
    fs.writeFile("./experience.json", JSON.stringify(xp), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./fragments.json", JSON.stringify(fragments), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./dailypoints.json", JSON.stringify(dailypoints), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./RxCoins.json", JSON.stringify(RxCoins), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./item24.json", JSON.stringify(item24), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./item31.json", JSON.stringify(item31), (err) => {
      if(err) console.log(err)
    });
        fs.writeFile("./item32.json", JSON.stringify(item32), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./item40.json", JSON.stringify(item40), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./gemme2.json", JSON.stringify(gemme2), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./gemme3.json", JSON.stringify(gemme3), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./gemme4.json", JSON.stringify(gemme4), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./gemme5.json", JSON.stringify(gemme5), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./goldbox.json", JSON.stringify(goldbox), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./supremebox.json", JSON.stringify(supremebox), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./mysterybox.json", JSON.stringify(mysterybox), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./writegold.json", JSON.stringify(writegold), (err) => {
      if(err) console.log(err)
    });
    message.channel.send(`__${boxgoldemote} Box Dorée:__\n${dropnamegold}\n${trucbizarre}Box dorées restantes: ${ugoldbox-1}${trucbizarre}`)

}
}


if(message.content === "!box open 6"){
  if(uclassen === 0 || usupremebox ===  0) message.channel.send("Tu n'as pas assez de box suprême.")
  if(uclassen >= 1 && usupremebox >= 1) {


    xp[message.author.id] = {
      xp: xpactuel + dropsxp,
      level: nivactuel
    };
    Pieceor[message.author.id] = {
      Pieceor: uPieceor + dropsor
    };
    RxCoins[message.author.id] = {
      RxCoins: uRxCoins + dropsrx
    };
    fragments[message.author.id] = {
      fragments: ufragments + dropsfrag
    };
    dailypoints[message.author.id] = {
      dailypoints: udailypoints + dropsdaily
    };
 
    supremebox[message.author.id] = {
      supremebox: usupremebox + dropssupreme
    };
    item33[message.author.id] = {
      item33: uitem33 + dropepic33
    };
    item41[message.author.id] = {
      item41: uitem41 + dropepic41
    };
    
    gemme2[message.author.id] = {
      gemme2: ugemme2 + dropsgemme2
    };
    gemme3[message.author.id] = {
      gemme3: ugemme3 + dropsgemme3
    };
    gemme4[message.author.id] = {
      gemme4: ugemme4 + dropsgemme4
    };
    gemme5[message.author.id] = {
      gemme5: ugemme5 + dropsgemme5
    };
    supremebox[message.author.id] = {
      supremebox: usupremebox - 1
    };
    writesupreme[message.author.id] = {
      writesupreme: Math.floor(Math.random() * 100) + 1
    };
    fs.writeFile("./experience.json", JSON.stringify(xp), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./fragments.json", JSON.stringify(fragments), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./dailypoints.json", JSON.stringify(dailypoints), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./RxCoins.json", JSON.stringify(RxCoins), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./item33.json", JSON.stringify(item33), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./item41.json", JSON.stringify(item41), (err) => {
      if(err) console.log(err)
    });

    fs.writeFile("./gemme2.json", JSON.stringify(gemme2), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./gemme3.json", JSON.stringify(gemme3), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./gemme4.json", JSON.stringify(gemme4), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./gemme5.json", JSON.stringify(gemme5), (err) => {
      if(err) console.log(err)
    });

    fs.writeFile("./supremebox.json", JSON.stringify(supremebox), (err) => {
      if(err) console.log(err)
    });
    fs.writeFile("./writesupreme.json", JSON.stringify(writesupreme), (err) => {
      if(err) console.log(err)
    });
    message.channel.send(`__${boxsupremeemote} Box Suprême:__\n${dropnamesupreme}\n${trucbizarre}Box suprêmes restantes: ${usupremebox-1}${trucbizarre}`)

}
}


if(message.content === "!box l" || message.content === "!box li" || message.content === "!box list") {
  message.channel.send(`Liste des boxs de ${message.author.username}\n[ID:1] ${boxcommonemote} **Box Commune** x${uboxcommune}\n[ID:2] ${boxrareemote} **BoxRare** x${uboxrare}\n[ID:3] ${boxepicemote} **Box Epique** x${uboxepique}\n[ID:4] ${boxmysteryemote} **Box Mystérieuse** x${umysterybox}\n[ID:5] ${boxgoldemote} **Box Dorée** x${ugoldbox}\n[ID:6] ${boxsupremeemote} **Box Suprême** x${usupremebox}\nPour ouvrir une box fait ${trucbizarre}!box open [ID]${trucbizarre}`)
}
let Dpret = require("./dpret.json")
let Hpret = require("./hpret.json")
let FishTime = 120000 * pet32effect1 * pet26effect1 * pet38effect2
let DailyTime = 86400000
let HourlyTime = 3600000
let DailyPret = Date.now() + DailyTime;
let HourlyPret = Date.now() + HourlyTime
let FishPret = Date.now() + FishTime
if(!Dpret[message.author.id]){
  Dpret[message.author.id] = {
    Dpret: 0
  };

fs.writeFile("./dpret.json", JSON.stringify(Dpret), (err) => {
  if (err) console.log(err)
});
}
if(!Hpret[message.author.id]){
  Hpret[message.author.id] = {
    Hpret: 0
  };

fs.writeFile("./hpret.json", JSON.stringify(Hpret), (err) => {
  if (err) console.log(err)
});
}
let tempsaparse = FishTime
let uDpret = Dpret[message.author.id].Dpret;
let uHpret = Hpret[message.author.id].Hpret
let DTimeObj = ms(uDpret - Date.now());
let HTimeObj = ms(uHpret- Date.now())
let FTimeObj = ms(FishTime)
let F2TimeObj = ms(Fpret[message.author.id].Fpret - Date.now())
let ddailypoints = Math.floor(Math.random() * (15 - 5) + 5)*pet2effect1 * pet33effect1
let hressrandom = require("./hressrandom.json")
let wlfi = 0
let wrfi = 0
let wcfi = 0
let wefi = 0
let wdfi = 0
let wetexte = ""

if(uwriteplegend === 0 || uwriteplegend === 96) {
  wetexte = `${message.author.username}, tu as pêché 1 ${fish4emote} [Rareté: Légendaire]\nReviens dans ${FTimeObj.minutes} minutes et ${FTimeObj.seconds} secondes!`
  wlfi = 1
}
if(uwriteplegend >=1 && uwriteplegend <= 8) {
  wetexte = `${message.author.username}, tu as pêché 1 ${fish3emote} [Rareté: Epique]\nReviens dans ${FTimeObj.minutes} minutes et ${FTimeObj.seconds} secondes!`
  wefi = 1
}
if(uwriteplegend >=9 && uwriteplegend <= 25) {
  wetexte = `${message.author.username}, tu as pêché 1 ${fish2emote} [Rareté: Rare]\nReviens dans ${FTimeObj.minutes} minutes et ${FTimeObj.seconds} secondes!`
  wrfi = 1
}
if(uwriteplegend >= 26 && uwriteplegend <= 55) {
  wetexte = `${message.author.username}, tu as pêché 1 ${fish1emote} [Rareté: Commun]\nReviens dans ${FTimeObj.minutes} minutes et ${FTimeObj.seconds} secondes!`
  wcfi = 1
}
if(uwriteplegend >= 56 && uwriteplegend <= 95) {
  wetexte = `${message.author.username}, tu as pêché un dechêt ${dechetemote}\nReviens dans ${FTimeObj.minutes} minutes et ${FTimeObj.seconds} secondes!`
  wdfi = 1
}
if(uwriteplegend >= 97 && uwriteplegend <= 201) {
  wetexte = `${message.author.username}, tu n'as rien pêché...\nReviens dans ${FTimeObj.minutes} minutes et ${FTimeObj.seconds} secondes!`
}
let dminxp =  2500
let dmaxxp = 5500
let crit = require("./crit.json")
let strike2 = require("./strike2.json")
if(!hressrandom[message.author.id]){
  hressrandom[message.author.id] = {
    hressrandom: Math.floor(Math.random() * 100) + 1
  };

fs.writeFile("./hressrandom.json", JSON.stringify(hressrandom), (err) => {
  if (err) console.log(err)
});
}

if(!strike2[message.author.id]){
  strike2[message.author.id] = {
    strike2: 0
  };

fs.writeFile("./hressrandom.json", JSON.stringify(hressrandom), (err) => {
  if (err) console.log(err)
});
}
if(!crit[message.author.id]){
  crit[message.author.id] = {
    crit: Math.floor(Math.random() * 100) + 1
  };

fs.writeFile("./crit.json", JSON.stringify(crit), (err) => {
  if (err) console.log(err)
});
}
let ucrit = crit[message.author.id].crit
let ustrike2 = strike2[message.author.id].strike2
let uhressrandom = hressrandom[message.author.id].hressrandom



let hminxp = (cdropxp/14)* total_hourly[message.author.id].total_hourly*2
let hmaxxp = (cdropxp/10)* total_hourly[message.author.id].total_hourly*2
if(hminxp > 23000) {
  hminxp = 23000
}
if(hmaxxp > 36000) {
  hmaxxp = 36000
}
let hxpd = Math.floor((Math.random() * (hmaxxp - hminxp) + hmaxxp)) * (1+ ((ustrike2*6)/100)) +650
let dressfinalac = 0
let dressfinalbbl = 0
let dressfinalpi = 0
let dressfinalbs = 0
let dressfinalfe = 0
let dressfinalor = 0
let dressfinalpla = 0
let dressfinalpluto = 0
let dressfinalpn = 0
let dressfinalgw = 0
let dressfinaldi = 0
let dressfinalch = 0
let dressname = ""
let ressdropindichr = 0
if(uhressrandom === 0) {

  dressname = `${emotePN}`
  dressfinalpn =Math.floor(Math.random() * ((cdroppn/10) - (cdroppn/15)) + (cdroppn/10)) * (1+ ((ustrike2*3)/100))+1
  ressdropindichr =Math.trunc(dressfinalpn)
  dressfinalac = 0
  dressfinalbbl = 0
  dressfinalpi = 0
  dressfinalbs = 0
  dressfinalfe = 0
  dressfinalor = 0
  dressfinalpla = 0
  dressfinalpluto = 0
  dressfinalgw = 0
  dressfinaldi = 0
  dressfinalch = 0
}
if(uhressrandom === 1) {

  dressfinalgw = Math.floor(Math.random() * ((cdropcab/10) - (cdropcab/15)) + (cdropcab/10)) * (1+ ((ustrike2*3)/100))+1
  dressname = `${emotegwood}`
  ressdropindichr = Math.trunc(dressfinalgw)
  dressfinalac = 0
  dressfinalbbl = 0
  dressfinalpi = 0
  dressfinalbs = 0
  dressfinalfe = 0
  dressfinalor = 0
  dressfinalpla = 0
  dressfinalpluto = 0
  dressfinaldi = 0
  dressfinalch = 0
  dressfinalpn = 0
}

if(uhressrandom === 2 || uhressrandom === 3) {
  dressname = `${emotepluto}`
  dressfinalpluto = Math.floor(Math.random() * ((cdroppluto/10) - (cdroppluto/15)) + (cdroppluto/10)) * (1+ ((ustrike2*3)/100))+1
  ressdropindichr = Math.trunc(dressfinalpluto)
  dressfinalac = 0
  dressfinalbbl = 0
  dressfinalpi = 0
  dressfinalbs = 0
  dressfinalfe = 0
  dressfinalor = 0
  dressfinalpla = 0
  dressfinalgw = 0
  dressfinaldi = 0
  dressfinalch = 0
  dressfinalpn = 0
}
if(uhressrandom === 4 || uhressrandom === 5 || uhressrandom === 6) {
  dressname = `${emotebc}`
  dressfinalch = Math.floor(Math.random() * ((cdropchene/10) - (cdropchene/15)) + (cdropchene/10)) * (1+ ((ustrike2*3)/100))+1
  ressdropindichr = Math.trunc(dressfinalch)
  dressfinalac = 0
  dressfinalbbl = 0
  dressfinalpi = 0
  dressfinalbs = 0
  dressfinalfe = 0
  dressfinalor = 0
  dressfinalpla = 0
  dressfinalpluto = 0
  dressfinalgw = 0
  dressfinaldi = 0
  dressfinalpn = 0

}
if(uhressrandom === 7 || uhressrandom === 8 || uhressrandom === 9) {
  dressname = `${emotediamant}`
  dressfinaldi = Math.floor(Math.random() * ((cdropdiam/10) - (cdropdiam/15)) + (cdropdiam/10)) * (1+ ((ustrike2*3)/100))+1
  ressdropindichr = Math.trunc(dressfinaldi)
  dressfinalac = 0
  dressfinalbbl = 0
  dressfinalpi = 0
  dressfinalbs = 0
  dressfinalfe = 0
  dressfinalor = 0
  dressfinalpla = 0
  dressfinalpluto = 0
  dressfinalgw = 0
  dressfinalch = 0
  dressfinalpn = 0
}
if(uhressrandom === 10 || uhressrandom === 11 || uhressrandom === 12 || uhressrandom === 13) {
  dressname = `${emoteplatine}`
  dressfinalpla = Math.floor(Math.random() * ((cdropplatine/10) - (cdropplatine/15)) + (cdropplatine/10)) * (1+ ((ustrike2*3)/100))+1
  ressdropindichr =Math.trunc(dressfinalpla)
  dressfinalac = 0
  dressfinalbbl = 0
  dressfinalpi = 0
  dressfinalbs = 0
  dressfinalfe = 0
  dressfinalor = 0
  dressfinalpluto = 0
  dressfinalgw = 0
  dressfinaldi = 0
  dressfinalch = 0
  dressfinalpn = 0
}
if(uhressrandom === 14 || uhressrandom === 15 || uhressrandom === 16 || uhressrandom === 17 || uhressrandom === 18) {
  dressname = `${emoteor}`
  dressfinalor = Math.floor(Math.random() * ((cdropor/10) - (cdropor/15)) + (cdropor/10)) * (1+ ((ustrike2*3)/100))+1
  ressdropindichr = Math.trunc(dressfinalor)
  dressfinalac = 0
  dressfinalbbl = 0
  dressfinalpi = 0
  dressfinalbs = 0
  dressfinalfe = 0
  dressfinalpla = 0
  dressfinalpluto = 0
  dressfinalgw = 0
  dressfinaldi = 0
  dressfinalch = 0
  dressfinalpn = 0
}
if(uhressrandom >= 19 && uhressrandom <= 26) {
  dressname = `${emotefer}`
  dressfinalfe = Math.floor(Math.random() * ((cdropfer/10) - (cdropfer/15)) + (cdropfer/10)) * (1+ ((ustrike2*3)/100)) +1
  ressdropindichr = Math.trunc(dressfinalfe)
  dressfinalac = 0
  dressfinalbbl = 0
  dressfinalpi = 0
  dressfinalbs = 0
  dressfinalor = 0
  dressfinalpla = 0
  dressfinalpluto = 0
  dressfinalgw = 0
  dressfinaldi = 0
  dressfinalch = 0
  dressfinalpn = 0
}
if(uhressrandom >= 27 && uhressrandom <= 36) {
  dressname = `${emotebbl}`
  dressfinalbbl = Math.floor(Math.random() * ((cdropbbl/10) - (cdropbbl/15)) + (cdropbbl/10)) * (1+ ((ustrike2*3)/100))+1
  ressdropindichr= Math.trunc(dressfinalbbl)
  dressfinalac = 0
  dressfinalpi = 0
  dressfinalbs = 0
  dressfinalfe = 0
  dressfinalor = 0
  dressfinalpla = 0
  dressfinalpluto = 0
  dressfinalgw = 0
  dressfinaldi = 0
  dressfinalch = 0
  dressfinalpn = 0
}
if(uhressrandom >= 37 && uhressrandom <= 49) {
  dressname = `${emoteacier}`
  dressfinalac = Math.floor(Math.random() * ((cdropacier/10) - (cdropacier/15)) + (cdropacier/10)) * (1+ ((ustrike2*3)/100))+1
  ressdropindichr =Math.trunc(dressfinalac)
  dressfinalbbl = 0
  dressfinalpi = 0
  dressfinalbs = 0
  dressfinalfe = 0
  dressfinalor = 0
  dressfinalpla = 0
  dressfinalpluto = 0
  dressfinalgw = 0
  dressfinaldi = 0
  dressfinalch = 0
  dressfinalpn = 0
}
if(uhressrandom >= 50 && uhressrandom <= 74) {
  dressname = `${emotebs}`
  dressfinalbs = Math.floor(Math.random() * ((cdropbs/10) - (cdropbs/15)) + (cdropbs/10)) * (1+ ((ustrike2*3)/100))+1
  ressdropindichr = Math.trunc(dressfinalbs)
  dressfinalac = 0
  dressfinalbbl = 0
  dressfinalpi = 0
  dressfinalfe = 0
  dressfinalor = 0
  dressfinalpla = 0
  dressfinalpluto = 0
  dressfinalgw = 0
  dressfinaldi = 0
  dressfinalch = 0
  dressfinalpn = 0
}
if(uhressrandom >= 75 && uhressrandom <= 101) {
  dressname = `${emotepierre}`
  dressfinalpi = Math.floor(Math.random() * ((cdroppierre/10) - (cdroppierre/15)) + (cdroppierre/10)) * (1+ ((ustrike2*3)/100))+ 1
  ressdropindichr = Math.trunc(dressfinalpi)
  dressfinalac = 0
  dressfinalbbl = 0
  dressfinalbs = 0
  dressfinalfe = 0
  dressfinalor = 0
  dressfinalpla = 0
  dressfinalpluto = 0
  dressfinalgw = 0
  dressfinaldi = 0
  dressfinalch = 0
  dressfinalpn = 0
}

if(ucrit <= 10 ) {
  dminxp = 5000
  dmaxxp = 11000 
  ddailypoints = ((Math.floor(Math.random() * (30 - 10) + 10)) * (artefact11effect+pet2effect1+pet33effect1))
}
let strike = require("./strike.json")

if(!strike[message.author.id]){
  strike[message.author.id] = {
    strike: 0
  };

fs.writeFile("./strike.json", JSON.stringify(strike), (err) => {
  if (err) console.log(err)
});
}

let upgainclasse = (1+(nivactuelclasse/(11-nivactuelclasse)))
let gainclassxp = 0
let ustrike = strike[message.author.id].strike
let kstrike = ustrike + 1
let kstrike2 = ustrike2 +1
let messagestrike = ""
let strikebarre = `[Combo: ${ustrike}/7]`
let strikebarre2 = `[Combo: ${ustrike2}]`
if(Date.now() > (uDpret + 86400000)) {
  kstrike = 1
  strikebarre = "Vous êtes arrivé trop tard, votre combo à été reset."
}
if(Date.now() > (uHpret + 3600000)) {
  kstrike2 = 1
  strikebarre2 = "Vous êtes arrivé trop tard, votre combo à été reset."
}
if(ustrike >= 7) {
  kstrike = 1
  gainclassxp = 25* upgainclasse * pet33effect1 * pet39effect2
  messagestrike = `\nComme ton combo est égal à 7, tu remportes +${Math.trunc(gainclassxp)} XP de classe!`
  strikebarre = "Combo: [7/7]"
}

let dxp = Math.floor((Math.random() * (dmaxxp - dminxp) + dmaxxp) * ((BoostXPT/3 + (nivactuel/30) + artefact11effect+pet1effect1+pet29effect2+pet33effect1+pet39effect2 - 5)))
if(message.content === "!hr" || message.content === "!hourly") {
  if(uclassen === 0) message.channel.send("Choisis d'abord une classe.")
  if(Date.now() < uHpret && uclassen != 0) {
    message.channel.send(`Le prochain hourly sera disponible dans ${HTimeObj.minutes}m et ${HTimeObj.seconds}s.`);
   } if(Date.now()>=uHpret && uclassen != 0 || uAdmin===1) {
    xp[message.author.id] = {
      xp: xpactuel + Math.trunc(hxpd)
    };

  Pierre[message.author.id] = {
    Pierre: uPierre + Math.trunc(dressfinalpi)
  };
  Acier[message.author.id] = {
    Acier: uAcier + Math.trunc(dressfinalac)
  };
  Fer[message.author.id] = {
    Fer: uFer + Math.trunc(dressfinalfe)
  };
  Or[message.author.id] = {
    Or: uOr + Math.trunc(dressfinalor)
  };
  Platine[message.author.id] = {
    Platine: uPlatine + Math.trunc(dressfinalpla)
  };
  Diamant[message.author.id] = {
    Diamant: uDiamant + Math.trunc(dressfinaldi)
  };
  Plutonium[message.author.id] = {
    Plutonium: uPlutonium + Math.trunc(dressfinalpluto)
  };
  PierreNoire[message.author.id] = {
    PierreNoire: uPierreNoire + Math.trunc(dressfinalpn)
  };
  BoisdeSapin[message.author.id] = {
    BoisdeSapin: uBoisdeSapin + Math.trunc(dressfinalbs)
  };
  BoisdeBouleau[message.author.id] = {
    BoisdeBouleau: uBoisdeBouleau + Math.trunc(dressfinalbbl)
  };
  BoisdeChêne[message.author.id] = {
    BoisdeChêne: uBoisdeChêne + Math.trunc(dressfinalch)
  };
  BoisDoré[message.author.id] = {
    BoisDoré: uBoisDoré + Math.trunc(dressfinalgw)
  };
  strike2[message.author.id] = {
    strike2: kstrike2
  };
  Hpret[message.author.id] = {
    Hpret: HourlyPret
  };
  hressrandom[message.author.id] = {
    hressrandom: Math.floor(Math.random() * 100) + 1
  };
  total_hourly[message.author.id] = {
    total_hourly: total_hourly[message.author.id].total_hourly + 1
  };

  writeressminiere[message.author.id] = {
    allstone: writeressminiere[message.author.id].allstone + Math.trunc(dressfinalpi),
    allacier: writeressminiere[message.author.id].allacier + Math.trunc(dressfinalac),
    allfer: writeressminiere[message.author.id].allfer + Math.trunc(dressfinalfe),
    allgold: writeressminiere[message.author.id].allgold + Math.trunc(dressfinalor),
    allplatine: writeressminiere[message.author.id].allplatine + Math.trunc(dressfinalpla),
    alldiamond: writeressminiere[message.author.id].alldiamond + Math.trunc(dressfinaldi),
    allpluto: writeressminiere[message.author.id].allpluto + Math.trunc(dressfinalpluto),
    allpn: writeressminiere[message.author.id].allpn + Math.trunc(dressfinalpn)
  }
  writeressbois[message.author.id] = {
    allbs: writeressbois[message.author.id].allbs + Math.trunc(dressfinalbs),
    allbbl: writeressbois[message.author.id].allbbl + Math.trunc(dressfinalbbl),
    allbc: writeressbois[message.author.id].allbc + Math.trunc(dressfinalch),
    allgw: writeressbois[message.author.id].allgw + Math.trunc(dressfinalgw),
    allrx: writeressbois[message.author.id].allrx
   
  }
  fs.writeFile("./writeressminiere.json", JSON.stringify(writeressminiere), (err) => {
    if(err) console.log(err)
  });
  fs.writeFile("./writeressbois.json", JSON.stringify(writeressbois), (err) => {
    if(err) console.log(err)
  });

  fs.writeFile("./hpret.json", JSON.stringify(Hpret), (err) => {
    if (err) console.log(err)
  });
  fs.writeFile("./Pierre.json", JSON.stringify(Pierre), (err) => {
    if (err) console.log(err)
  });
  fs.writeFile("./Acier.json", JSON.stringify(Acier), (err) => {
    if (err) console.log(err)
  });
  fs.writeFile("./Fer.json", JSON.stringify(Fer), (err) => {
    if (err) console.log(err)
  });
  fs.writeFile("./Or.json", JSON.stringify(Or), (err) => {
    if (err) console.log(err)
  });
  fs.writeFile("./Platine.json", JSON.stringify(Platine), (err) => {
    if (err) console.log(err)
  });
  fs.writeFile("./Diamant.json", JSON.stringify(Diamant), (err) => {
    if (err) console.log(err)
  });
  fs.writeFile("./Plutonium.json", JSON.stringify(Plutonium), (err) => {
    if (err) console.log(err)
  });
  fs.writeFile("./PierreNoire.json", JSON.stringify(PierreNoire), (err) => {
    if (err) console.log(err)
  }); 
   fs.writeFile("./BoisdeSapin.json", JSON.stringify(BoisdeSapin), (err) => {
    if (err) console.log(err)
  });
  fs.writeFile("./BoisdeChêne.json", JSON.stringify(BoisdeChêne), (err) => {
    if (err) console.log(err)
  });
  fs.writeFile("./BoisDoré.json", JSON.stringify(BoisDoré), (err) => {
    if (err) console.log(err)
  });
  fs.writeFile("./BoisdeBouleau.json", JSON.stringify(BoisdeBouleau), (err) => {
    if (err) console.log(err)
  });
  fs.writeFile("./hpret.json", JSON.stringify(Hpret), (err) => {
    if (err) console.log(err)
  });
  fs.writeFile("./hpret.json", JSON.stringify(Hpret), (err) => {
    if (err) console.log(err)
  });
  fs.writeFile("./strike2.json", JSON.stringify(strike2), (err) => {
    if(err) console.log(err)
  });
  fs.writeFile("./experience.json", JSON.stringify(xp), (err) => {
    if(err) console.log(err)
  });
  fs.writeFile("./total_hourly.json", JSON.stringify(total_hourly), (err) => {
    if(err) console.log(err)
  });
  fs.writeFile("./hressrandom.json", JSON.stringify(hressrandom), (err) => {
    if(err) console.log(err)
  });
  let hourlyembed1 = new Discord.RichEmbed()
  .addField(`**Hourly de ${message.author.username}**`, `${strikebarre2}\n${trucbizarre}+${millify(ressdropindichr, 1)}${trucbizarre} ${dressname}\n${trucbizarre}+${Math.trunc(hxpd)}${trucbizarre} ${xp1emote}\n\nReviens dans 1 heure!`);
 return message.channel.send(hourlyembed1);
  }
};


if(message.content === "!daily" || message.content === "!da") {
  if(Date.now() < uDpret) {
    message.channel.send(`Le prochain daily sera disponible dans ${DTimeObj.hours}h, ${DTimeObj.minutes}m et ${DTimeObj.seconds}s.`);
   } if(Date.now()>=uDpret || uAdmin===1) {
    xp[message.author.id] = {
      xp: xpactuel + Math.trunc(dxp)
    };
    xpclasse[message.author.id] = {
      xpclasse: xpclasseactuel + Math.trunc(gainclassxp),
      levelclasse: nivactuelclasse
    };
  dailypoints[message.author.id] = {
    dailypoints: udailypoints + Math.trunc(ddailypoints)
  };
  crit[message.author.id] = {
    crit: Math.floor(Math.random() * 100) + 1
  };
  strike[message.author.id] = {
    strike: kstrike
  };
  Dpret[message.author.id] = {
    Dpret: DailyPret
  };
  total_daily[message.author.id] = {
    total_daily: total_daily[message.author.id].total_daily + 1
  };

 
  Pvmax[message.author.id] = {
    Pvmax: uPvmax 
  };
  fs.writeFile("./dpret.json", JSON.stringify(Dpret), (err) => {
    if (err) console.log(err)
  });
  fs.writeFile("./dailypoints.json", JSON.stringify(dailypoints), (err) => {
    if(err) console.log(err)
  });
  fs.writeFile("./crit.json", JSON.stringify(crit), (err) => {
    if(err) console.log(err)
  });
  fs.writeFile("./strike.json", JSON.stringify(strike), (err) => {
    if(err) console.log(err)
  });
  fs.writeFile("./experience.json", JSON.stringify(xp), (err) => {
    if(err) console.log(err)
  });
  fs.writeFile("./experienceclasse.json", JSON.stringify(xpclasse), (err) => {
    if(err) console.log(err)
  });

  fs.writeFile("./total_daily.json", JSON.stringify(total_daily), (err) => {
    if(err) console.log(err)
  });
  fs.writeFile("./Pv.json", JSON.stringify(Pv), (err) => {
    if(err) console.log(err)
  });
  let dailyembed1 = new Discord.RichEmbed()
  .addField(`**Daily de ${message.author.username}**`, `${strikebarre}\n${trucbizarre}+${Math.trunc(ddailypoints)}${trucbizarre} ${dailyemote}\n${trucbizarre}+${Math.trunc(dxp)}${trucbizarre} ${xp1emote}${messagestrike}\n\nReviens dans 24 heures!`);
  message.channel.send(dailyembed1)
  }
};
let affst = ""
let affac = ""
let afffe = ""
let affgo = ""
let affpla = ""
let affdia = ""
let affplu = ""
let affpn = ""
let affbs = ""
let affbc = ""
let affbbl = ""
let affgw = ""


if(cdroppierre === 0) {
  affst = ""
}
if(cdroppierre > 0) {
  affst = `${emotepierre} Pierre: +${millify(Math.trunc(cdroppierre), 1)}`
}
if(cdropacier === 0) {
  affac = ""
}
if(cdropacier > 0) {
  affac = `\n${emoteacier} Acier: +${millify(Math.trunc(cdropacier), 1)}`
}
if(cdropfer === 0) {
  afffe = ""
}
if(cdropfer > 0) {
  afffe = `\n${emotefer} Fer: +${millify(Math.trunc(cdropfer), 1)}`
}
if(cdropor === 0) {
  affgo = ""
}
if(cdropor > 0) {
  affgo = `\n${emoteor} Or: +${millify(Math.trunc(cdropor), 1)}`
}
if(cdropplatine === 0) {
  affpla = ""
}
if(cdropplatine > 0) {
  affpla = `\n${emoteplatine} Platine: +${millify(Math.trunc(cdropplatine), 1)}`
}
if(cdropdiam === 0) {
  affdia = ""
}
if(cdropdiam > 0) {
  affdia = `\n${emotediamant} Diamant: +${millify(Math.trunc(cdropdiam), 1)}`
}
if(cdroppluto === 0) {
  affplu = ""
}
if(cdroppluto > 0) {
  affplu = `\n${emotepluto} Plutonium: +${millify(Math.trunc(cdroppluto), 1)}`
}
if(cdroppn === 0) {
  affpn = ""
}
if(cdroppn > 0) {
  affpn = `\n${emotePN} Pierres Noire: +${millify(Math.trunc(cdroppn), 1)}`
}
if(cdropbs === 0) {
  affbs = ""
}
if(cdropbs > 0) {
  affbs = `\n${emotebs} Bois de sapin: +${millify(Math.trunc(cdropbs), 1)}`
}
if(cdropchene === 0) {
  affbc = ""
}
if(cdropchene > 0) {
  affbc = `\n${emotebc} Bois de chêne: +${millify(Math.trunc(cdropchene), 1)}`
}
if(cdropbbl === 0) {
  affbbl = ""
}
if(cdropbbl > 0) {
  affbbl = `\n${emotebbl} Bois de bouleau: +${millify(Math.trunc(cdropbbl), 1)}`
}
if(cdropcab === 0) {
  affgw = ""
}
if(cdropcab > 0) {
  affgw = `\n${emotegwood} Bois doré: +${millify(Math.trunc(cdropcab), 1)}`
}
let MCollecteTime = Math.trunc(CollecteTime - gemme1effect);

let Collecteprete = Date.now() + MCollecteTime;

if(!Cprete[message.author.id]){
  Cprete[message.author.id] = {
    Cprete: 0
  };

fs.writeFile("./cprete.json", JSON.stringify(Cprete), (err) => {
  if (err) console.log(err)
});
}

let uCprete = Cprete[message.author.id].Cprete;
let TimeObj = ms(uCprete - Date.now());

if(message.content === "!collecte" || message.content === "!collect") {
  if(Date.now() < uCprete) {
    message.channel.send(`La prochaine collecte sera disponible dans ${TimeObj.hours}h, ${TimeObj.minutes}m et ${TimeObj.seconds}s.`);
  } if(uAdmin === 1 || Date.now() > uCprete) {

    writeressminiere[message.author.id] = {
      allstone: writeressminiere[message.author.id].allstone + Math.trunc(cdroppierre),
      allacier: writeressminiere[message.author.id].allacier + Math.trunc(cdropacier),
      allfer: writeressminiere[message.author.id].allfer + Math.trunc(cdropfer),
      allgold: writeressminiere[message.author.id].allgold + Math.trunc(cdropor),
      allplatine: writeressminiere[message.author.id].allplatine + Math.trunc(cdropplatine),
      alldiamond: writeressminiere[message.author.id].alldiamond + Math.trunc(cdropdiam),
      allpluto: writeressminiere[message.author.id].allpluto + Math.trunc(cdroppluto),
      allpn: writeressminiere[message.author.id].allpn + Math.trunc(cdroppn)
    }
    writeressbois[message.author.id] = {
      allbs: writeressbois[message.author.id].allbs + Math.trunc(cdropbs),
      allbbl: writeressbois[message.author.id].allbbl + Math.trunc(cdropbbl),
      allbc: writeressbois[message.author.id].allbc + Math.trunc(cdropchene),
      allgw: writeressbois[message.author.id].allgw + Math.trunc(cdropcab),
      allrx: writeressbois[message.author.id].allrx + Math.trunc(cdroprx)
     
    }
  BoisdeSapin[message.author.id] = {
    BoisdeSapin: uBoisdeSapin + Math.trunc(cdropbs)
  };
  BoisdeBouleau[message.author.id] = {
    BoisdeBouleau: uBoisdeBouleau + Math.trunc(cdropbbl)
  };
  BoisdeChêne[message.author.id] = {
    BoisdeChêne: uBoisdeChêne + Math.trunc(cdropchene)
  };
  BoisDoré[message.author.id] = {
    BoisDoré: uBoisDoré + Math.trunc(cdropcab)
  };
  Pierre[message.author.id] = {
    Pierre: uPierre + Math.trunc(cdroppierre)
  };
  Acier[message.author.id] = {
    Acier: uAcier + Math.trunc(cdropacier)
  };
  Fer[message.author.id] = {
    Fer: uFer + Math.trunc(cdropfer)
  };
  Or[message.author.id] = {
    Or: uOr + Math.trunc(cdropor)
  };
  Platine[message.author.id] = {
    Platine: uPlatine + Math.trunc(cdropplatine)
  };
  Diamant[message.author.id] = {
    Diamant: uDiamant + Math.trunc(cdropdiam)
  };
  Plutonium[message.author.id] = {
    Plutonium: uPlutonium + Math.trunc(cdroppluto)
  };
  PierreNoire[message.author.id] = {
    PierreNoire: uPierreNoire + Math.trunc(cdroppn)
  };
  RxCoins[message.author.id] = {
    RxCoins: uRxCoins + Math.trunc(cdroprx)
  };
  Pv[message.author.id] = {
    Pv: PMaxPv
  };
  xp[message.author.id] = {
    xp: xpactuel + Math.trunc(cdropxp)
  };
  
 
  Cprete[message.author.id] = {
    Cprete: Collecteprete
  };
  totalcollecte[message.author.id] = {
    totalcollecte: totalcollecte[message.author.id].totalcollecte +1
  };
  fs.writeFile("./totalcollecte.json", JSON.stringify(totalcollecte), (err) => {
    if(err) console.log(err)
  });


  fs.writeFile("./writeressminiere.json", JSON.stringify(writeressminiere), (err) => {
    if(err) console.log(err)
  });
  fs.writeFile("./writeressbois.json", JSON.stringify(writeressbois), (err) => {
    if(err) console.log(err)
  });

  fs.writeFile("./RxCoins.json", JSON.stringify(RxCoins), (err) => {
    if(err) console.log(err)
  });
  fs.writeFile("./Pv.json", JSON.stringify(Pv), (err) => {
    if(err) console.log(err)
  });
  fs.writeFile("./cprete.json", JSON.stringify(Cprete), (err) => {
    if (err) console.log(err)
  });
  fs.writeFile("./Pierre.json", JSON.stringify(Pierre), (err) => {
    if(err) console.log(err)
  });
  fs.writeFile("./Acier.json", JSON.stringify(Acier), (err) => {
    if(err) console.log(err)
  });
  fs.writeFile("./Fer.json", JSON.stringify(Fer), (err) => {
    if(err) console.log(err)
  });
  fs.writeFile("./Or.json", JSON.stringify(Or), (err) => {
    if(err) console.log(err)
  });
  fs.writeFile("./Platine.json", JSON.stringify(Platine), (err) => {
    if(err) console.log(err)
  });
  fs.writeFile("./Diamant.json", JSON.stringify(Diamant), (err) => {
    if(err) console.log(err)
  });
  fs.writeFile("./Plutonium.json", JSON.stringify(Plutonium), (err) => {
    if(err) console.log(err)
  });
  fs.writeFile("./PierreNoire.json", JSON.stringify(PierreNoire), (err) => {
    if(err) console.log(err)
  });
  fs.writeFile("./BoisDoré.json", JSON.stringify(BoisDoré), (err) => {
    if(err) console.log(err)
  });
  fs.writeFile("./BoisdeSapin.json", JSON.stringify(BoisdeSapin), (err) => {
    if(err) console.log(err)
  });
  fs.writeFile("./BoisdeChêne.json", JSON.stringify(BoisdeChêne), (err) => {
    if(err) console.log(err)
  });
  fs.writeFile("./BoisdeBouleau.json", JSON.stringify(BoisdeBouleau), (err) => {
    if(err) console.log(err)
  });
  fs.writeFile("./experience.json", JSON.stringify(xp), (err) => {
    if(err) console.log(err)
  });
 
  let collecteEmbed = new Discord.RichEmbed()
  .setColor("#FF0000")
  .setTitle("Statistiques de la Collecte:")
  .addField("Minerais:", `${affst}${affac}${afffe}${affgo}${affpla}${affdia}${affplu}${affpn}`, true)
  .addField("Bois", `${affbs}${affbbl}${affbc}${affgw}`, true)
  .addField("Autres", `${xp1emote} XP: +${Math.trunc(cdropxp)}\n${RXemote} RxCoins: +${Math.trunc(cdroprx)}\nTes Pv ont aussi étés restaurés`)
 return message.channel.send(collecteEmbed);
  }
};

let t1 = ugemme1 + 1
let t2 = ugemme2 + 1

let t3 = ugemme3 + 1

let t4 = ugemme4 + 1

let t5 = ugemme5 + 1

let calcgemme01 = 1.15*ugemme1*ugemme1
let calcgemme02 = (0.00714 *ugemme2*ugemme2)/artefact3effect
let calcgemme03 =(0.00528*ugemme3*ugemme3)/artefact3effect
let calcgemme04= (0.003*ugemme4*ugemme4)/artefact3effect
let calcgemme05= (0.00396*ugemme5*ugemme5)/artefact3effect

let gemmeembed1 = new Discord.RichEmbed()
.addField(`Gemmes de ${message.author.username}`, `[ID:1] ${gemme1emote} ${gemme1name} **Tier ${ugemme1}**\nTier [${ugemme1}] --> [${t1}] === **${millify(calcgemme01, 1)}** ${fragemote}\n[ID:2] ${gemme2emote} ${gemme2name} **Tier ${ugemme2}**\nTier [${ugemme2}] --> [${t2}] === **${millify(calcgemme02, 1)}** ${fragemote}\n[ID:3] ${gemme3emote} ${gemme3name} **Tier ${ugemme3}**\nTier [${ugemme3}] --> [${t3}] === **${millify(calcgemme03, 1)}** ${fragemote}\n[ID:4] ${gemme4emote} ${gemme4name} **Tier ${ugemme4}**\nTier [${ugemme4}] --> [${t4}] === **${millify(calcgemme04, 1)}** ${fragemote}\n[ID:5] ${gemme5emote} ${gemme5name} **Tier ${ugemme5}**\nTier [${ugemme5}] --> [${t5}] === **${millify(calcgemme05, 1)}** ${fragemote}\n\nTu possèdes ${millify(ufragments,2)} ${fragemote}\n**Pour améliorer une gemme faites !tier [ID] [quant]**`);
if(message.content === "!str") {
  message.channel.send(tier)
}
if(message.content === "!gemme") {
  if(uclassen === 0) {
    message.channel.send("->!classe")
} else {
  message.channel.send(gemmeembed1)
}
}
if(command === "tier"){

 let calcgemme1 = (parseInt(args[1],10)*(((1.15*(ugemme1+parseInt(args[1],10)-1)*(ugemme1+parseInt(args[1],10)-1))+(1.15*ugemme1*ugemme1))/2))/artefact3effect
  let calcgemme3 = (parseInt(args[1],10)*(((0.00528*(ugemme3+parseInt(args[1],10)-1)*(ugemme3+parseInt(args[1],10)-1))+(0.00528*ugemme3*ugemme3))/2))/artefact3effect
 let calcgemme4 = (parseInt(args[1],10)*(((0.003*(ugemme4+parseInt(args[1],10)-1)*(ugemme4+parseInt(args[1],10)-1))+(0.003*ugemme4*ugemme4))/2))/artefact3effect
   let calcgemme5 = (parseInt(args[1],10)*(((0.00396*(ugemme5+parseInt(args[1],10)-1)*(ugemme5+parseInt(args[1],10)-1))+(0.00396*ugemme5*ugemme5))/2))/artefact3effect
  if(args.length != 2) {
    return message.channel.send(`La commande doit être de la forme ${trucbizarre}!tier [ID] [quant]${trucbizarre}`)
  }
  if(isNaN(args[1]) || isNaN(args[0])){
    return message.channel.send("Arguments invalides.")
  }
  if(args[0] === "1"){
    if(ugemme1 >= 10 || args[1] <= 0 || args[1] > 10-ugemme1){
      message.channel.send("Cette gemme ne peut pas être améliorée plus.")
    }
    if(ufragments < calcgemme1 && ugemme1 < 10) {
      message.channel.send("Vous n'avez pas assez de fragments.")
    }
    if(ufragments>= calcgemme1 && ugemme1 < 10 && args[1] > 0 && args[1] <= 10-ugemme1){
      gemme1[message.author.id] = {
        gemme1: ugemme1 + parseInt(args[1], 10)
      };
      fragments[message.author.id] = {
        fragments: ufragments - calcgemme1
      };
      fs.writeFile("./gemme1.json", JSON.stringify(gemme1), (err) => {
        if(err) console.log(err)
      });
      fs.writeFile("./fragments.json", JSON.stringify(fragments), (err) => {
        if(err) console.log(err)
      });
      message.channel.send(`${gemme1emote} ${gemme1name}\nTier [${ugemme1}] --> [${ugemme1+parseInt(args[1],10)}]`)
    };
    }
    if(args[0] === "2"){
      let calcgemme2 = (parseInt(args[1],10)*(((0.00714*(ugemme2+parseInt(args[1],10)-1)*(ugemme2+parseInt(args[1],10)-1))+(0.00714*ugemme2*ugemme2))/2))/artefact3effect
      if(ufragments < calcgemme2 || args[1] <= 0) {
        message.channel.send(`Vous n'avez pas assez de fragments.`)
      }
      if(ufragments>= calcgemme2 && args[1] > 0){
        gemme2[message.author.id] = {
          gemme2: ugemme2 + parseInt(args[1], 10)
        };
        fragments[message.author.id] = {
          fragments: ufragments - calcgemme2
        };
        fs.writeFile("./gemme2.json", JSON.stringify(gemme2), (err) => {
          if(err) console.log(err)
        });
        fs.writeFile("./fragments.json", JSON.stringify(fragments), (err) => {
          if(err) console.log(err)
        });
        message.channel.send(`${gemme2emote} ${gemme2name}\nTier [${ugemme2}] --> [${ugemme2+parseInt(args[1],10)}]`)
      };
      }
      if(args[0] === "3"){
        if(ufragments < calcgemme3 || args[1] <= 0) {
          message.channel.send("Vous n'avez pas assez de fragments.")
        }
        if(ufragments>= calcgemme3 && args[1] > 0){
          gemme3[message.author.id] = {
            gemme3: ugemme3 + parseInt(args[1], 10)
          };
          fragments[message.author.id] = {
            fragments: ufragments - calcgemme3
          };
          fs.writeFile("./gemme3.json", JSON.stringify(gemme3), (err) => {
            if(err) console.log(err)
          });
          fs.writeFile("./fragments.json", JSON.stringify(fragments), (err) => {
            if(err) console.log(err)
          });
          message.channel.send(`${gemme3emote} ${gemme3name}\nTier [${ugemme3}] --> [${ugemme3+parseInt(args[1],10)}]`)
        };
        }
        if(args[0] === "4"){
          if(ufragments < calcgemme4 || args[1] <= 0) {
            message.channel.send("Vous n'avez pas assez de fragments.")
          }
          if(ufragments>= calcgemme4 && args[1] > 0){
            gemme4[message.author.id] = {
              gemme4: ugemme4 + parseInt(args[1], 10)
            };
            fragments[message.author.id] = {
              fragments: ufragments - calcgemme4
            };
            fs.writeFile("./gemme4.json", JSON.stringify(gemme4), (err) => {
              if(err) console.log(err)
            });
            fs.writeFile("./fragments.json", JSON.stringify(fragments), (err) => {
              if(err) console.log(err)
            });
            message.channel.send(`${gemme4emote} ${gemme4name}\nTier [${ugemme4}] --> [${ugemme4+parseInt(args[1],10)}]`)
          };
          }
          if(args[0] === "5"){
            if(ufragments < calcgemme5 || args[1] <= 0) {
              message.channel.send("Vous n'avez pas assez de fragments.")
            }
            if(ufragments>= calcgemme5 && args[1] > 0){
              gemme5[message.author.id] = {
                gemme5: ugemme5 + parseInt(args[1], 10)
              };
              fragments[message.author.id] = {
                fragments: ufragments - calcgemme5
              };
              fs.writeFile("./gemme5.json", JSON.stringify(gemme5), (err) => {
                if(err) console.log(err)
              });
              fs.writeFile("./fragments.json", JSON.stringify(fragments), (err) => {
                if(err) console.log(err)
              });
              message.channel.send(`${gemme5emote} ${gemme5name}\nTier [${ugemme5}] --> [${ugemme5+parseInt(args[1],10)}]`)
            };
            }
  }

      let saccembed = new Discord.RichEmbed()
        .setAuthor(message.author.username)
        .setColor("#FF0000")
        .addField(`**__Parchemins:__**`, `\n${emoteparcheminvierge} Vierge ${uparcheminvierge}/${placemax}\n${emoteparchemincommun} Commun ${uparchemincommun}/${placemax}\n${emoteparcheminrare} Rare ${uparcheminrare}/${placemax}\n${emoteparcheminepic} Epique ${uparcheminepic}/${placemax}\n${emoteparcheminlegendaire}Légendaire ${uparcheminlegendaire}/${placemax}`)
        .addField(`\n**__(1)Potions:__**` ,`\n${potvideemote} Flacon vide ${upotvide}/${placemax}\n${potatkemote} Potion d'Attaque ${upotatk}/${placemax}\n${potdefemote} Potion de Défense ${upotdef}/${placemax}\n${potpvemote} Potion de Vie ${upotpv}/${placemax}`)
        .addField(`\n**__(2)Potions:__**`, `\n${pot25emote} Potion de régénération I ${upot25}/${placemax}\n${pot50emote} Potion de régénération II ${upot50}/${placemax}\n${pot100emote} Potion de régénération III ${upot100}/${placemax}`)
        .addField(`\n**__(3)Potions:__**`, `\n${potxp1emote} Potion d'expérience I ${upotxp1}/${placemax}\n${potxp2emote} Potion d'expérience II ${upotxp2}/${placemax}\n${potxp3emote} Potion d'expérience III ${upotxp3}/${placemax}`)
     
     if(message.content === "!sac") {
        if(uclassen === 0) message.channel.send("!classe.")
        if(uclassen > 0) 
        
        message.channel.send(saccembed)
      }
let costvierge = 50
let costflacon = 50
let costxp1PO = 125
let costxp2PO = 250
let costxp3PO = 400
let costregen1PO = 200
let costregen2PO = 300
let costregen3PO = 450
let tempsxp1 = 900000
let tempsxp2 = 1800000
let tempsxp3 = 3600000
let tempsregen1 = 900000
let tempsregen2 = 1800000
let tempsregen3 = 3600000
let costatkPO = 500
let costdefPO = 500
let costpvPO = 1000

let tempsatk = 900000
let tempsdef = 900000
let tempspv = 1800000
let costcommonPO = 150
let tempscommon = 300000
let costrarePO = 300
let tempsrare = 900000
let costepicPO = 750
let tempsepic = 1800000
let costlegendPO = 1500
let tempslegend = 3600000
let variablerareparchemin = ""
let variablerarecout = ""
let variableepiccout = ""
let variableepicparchemin = ""
let variablelegendcout = ""
let variablelegendparchemin = ""
let variablecoutregen2 = ""
let variablepregen2 = ""
let variablecoutregen3 = ""
let variablepregen3 = ""
let variablepxp2 = ""
let variablecoutxp2 = ""
let variablepxp3 = ""
let variablecoutxp3 = ""
let variablepatk = ""
let variablepdef = ""
let variableppv = ""
let variablecoutatk = ""
let variablecoutdef = ""
let variablecoutpv = ""
let costcommonfish = 1
let costrarefish = 1
let costepicfish=1
if(uatelier === 1) {
  costvierge = 48
  costflacon = 48
  tempsxp1 = 290000
  costxp1PO = 120
  tempsregen1 = 290000
  costregen1PO = 190
  tempscommon = 290000
  costcommonPO = 145

}
if(uatelier === 2) {
  costflacon = 46
  costxp1PO = 115
  tempsxp1 = 280000
  tempsregen1 = 280000
  costregen1PO = 180
  costvierge = 46
  tempscommon = 280000
  costcommonPO = 140
}
if(uatelier === 3) {
  costflacon = 44
  costxp1PO = 110
  tempsxp1 = 270000
  costxp2PO = 240
  tempsxp2 = 1780000
  tempsregen1 = 270000
  costregen1PO = 170
  tempsregen2 = 1780000
  costregen2PO = 290
  costvierge = 44
  tempscommon = 270000
  costcommonPO = 135
  costrarePO = 290
  tempsrare = 880000
}
if(uatelier === 4) {
  costflacon = 42
  costxp1PO = 105
  tempsxp1 = 260000
  costxp2PO = 230
  tempsxp2 = 1750000
  tempsregen1 = 260000
  costregen1PO = 160
  tempsregen2 = 1750000
  costregen2PO = 280
  costatkPO = 490
  costdefPO = 490
  tempsatk = 880000
  tempsdef = 880000
  costvierge = 42
  tempscommon = 260000
  costcommonPO = 130
  costrarePO = 280
  tempsrare = 860000
  costepicPO = 740
  tempsepic = 1780000
}
if(uatelier === 5) {
  costflacon = 40
  costxp1PO = 100
  tempsxp1 = 250000
  costxp2PO = 220
  tempsxp2 = 1720000
  costxp3PO = 390
  tempsxp3 = 3580000
  tempsregen1 = 250000
  costregen1PO = 150
  tempsregen2 = 1720000
  costregen2PO = 270
  tempsregen3 = 3580000
  costregen3PO = 440
  costatkPO = 480
  costdefPO = 480
  tempsatk = 860000
  tempsdef = 860000
  costvierge = 40
  tempscommon = 250000
  costcommonPO = 125
  costrarePO = 270
  tempsrare = 840000
  costepicPO = 730
  tempsepic = 1750000
  costlegendPO = 1480
  tempslegend = 3560000
}
if(uatelier === 6) {
  costflacon = 38
  costxp1PO = 95
  tempsxp1 = 240000
  costxp2PO = 210
  tempsxp2 = 1700000
  costxp3PO = 380
  tempsxp3 = 3550000
  tempsregen1 = 240000
  costregen1PO = 140
  tempsregen2 = 1700000
  costregen2PO = 260
  tempsregen3 = 3550000
  costregen3PO = 430
  costatkPO = 480
  costdefPO = 480
  tempsatk = 840000
  tempsdef = 840000
  costpvPO = 990
  tempspv = 1780000
  costvierge = 38
  tempscommon = 240000
  costcommonPO = 120
  costrarePO = 260
  tempsrare = 820000
  costepicPO = 720
  tempsepic = 1720000
  costlegendPO = 1460
  tempslegend = 3520000
}
if(uatelier === 7) {
  costflacon = 36
  costxp1PO = 90
  tempsxp1 = 230000
  costxp2PO = 200
  tempsxp2 = 1670000
  costxp3PO = 370
  tempsxp3 = 3520000
  tempsregen1 = 230000
  costregen1PO = 130
  tempsregen2 = 1670000
  costregen2PO = 250
  tempsregen3 = 3520000
  costregen3PO = 420
  costatkPO = 470
  costdefPO = 470
  tempsatk = 820000
  tempsdef = 820000
  costpvPO = 980
  tempspv = 1750000
  costvierge = 36
  tempscommon = 230000
  costcommonPO = 115
  costrarePO = 250
  tempsrare = 800000
  costepicPO = 710
  tempsepic = 1680000
  costlegendPO = 1440
  tempslegend = 3480000
}
if(uatelier === 8) {
  costflacon = 34
  costxp1PO = 85
  tempsxp1 = 220000
  costxp2PO = 190
  tempsxp2 = 1650000
  costxp3PO = 360
  tempsxp3 = 3480000
  tempsregen1 = 220000
  costregen1PO = 120
  tempsregen2 = 1650000
  costregen2PO = 240
  tempsregen3 = 3480000
  costregen3PO = 410
  costatkPO = 460
  costdefPO = 460
  tempsatk = 800000
  tempsdef = 800000
  costpvPO = 970
  tempspv = 1720000
  costvierge = 34
  tempscommon = 220000
  costcommonPO = 110
  costrarePO = 240
  tempsrare = 780000
  costepicPO = 700
  tempsepic = 1650000
  costlegendPO = 1420
  tempslegend = 3450000
}
if(uatelier === 9) {
  costflacon = 30
  costxp1PO = 75
  tempsxp1 = 200000
  costxp2PO = 175
  tempsxp2 = 1600000
  costxp3PO = 350
  tempsxp3 = 3420000
  tempsregen1 = 200000
  costregen1PO = 100
  tempsregen2 = 1600000
  costregen2PO = 225
  tempsregen3 = 3420000
  costregen3PO = 400
  costatkPO = 440
  costdefPO = 440
  tempsatk = 750000
  tempsdef = 750000
  costpvPO = 950
  tempspv = 1650000
  costvierge = 30
  tempscommon = 200000
  costcommonPO = 100
  costrarePO = 225
  tempsrare = 730000
  costepicPO = 680
  tempsepic = 1600000
  costlegendPO = 1380
  tempslegend = 3400000
}
if(uatelier === 10) {
  costflacon = 25
  costxp1PO = 70
  tempsxp1 = 150000
  costxp2PO = 150
  tempsxp2 = 1400000
  costxp3PO = 325
  tempsxp3 = 3340000
  tempsregen1 = 150000
  costregen1PO = 90
  tempsregen2 = 1400000
  costregen2PO = 200
  tempsregen3 = 3340000
  costregen3PO = 375
  costatkPO = 400
  costdefPO = 400
  tempsatk = 650000
  tempsdef = 650000
  costpvPO = 900
  tempspv = 1450000
  costvierge = 25
  tempscommon = 150000
  costcommonPO = 75
  costrarePO = 200
  tempsrare = 650000
  costepicPO = 650
  tempsepic = 1400000
  costlegendPO = 1380
  tempslegend = 3200000
}
let CPTimeObj = ms(tempscommon)
let RPTimeObj = ms(tempsrare)
let EPTimeObj = ms(tempsepic)
let LPTimeObj = ms(tempslegend)
let PX1TimeObj = ms(tempsxp1)
let PX2TimeObj = ms(tempsxp2)
let PX3TimeObj = ms(tempsxp3)
let PATimeObj = ms(tempsatk)
let PDTimeObj = ms(tempsdef)
let PPTimeObj = ms(tempspv)
let PR1TimeObj = ms(tempsregen1)
let PR2TimeObj = ms(tempsregen2)
let PR3TimeObj = ms(tempsregen3)
let parcheminadd = 0
let potionadd = 0

if(uatelier > 1) {
  variablerareparchemin = `\n[ID:2] ${emoteparcheminrare} **Parchemin Rare**`
  variablerarecout = `\nCoût: ${costcommonPO} ${POemote}, 1 ${emoteparcheminvierge}, 2 ${emoteparchemincommun}\nTemps de production: ${RPTimeObj.minutes} minutes`

}
if(uatelier > 2) {
  variableepicparchemin = `\n[ID:3] ${emoteparcheminepic} **Parchemin Epique**`
  variableepiccout = `\nCoût: ${costrarePO} ${POemote}, 1 ${emoteparcheminvierge}, 7 ${emoteparchemincommun}, 3 ${emoteparcheminrare}\nTemps de production: ${EPTimeObj.minutes} minutes`
  variablecoutxp2 = `\nCoût: ${costxp2PO} ${POemote}, 1 ${potvideemote}, 2 ${potxp1emote}, 1 ${fish2emote}\nTemps de production: ${PX2TimeObj.minutes} minutes`
  variablepxp2 = `\n[ID:7] ${potxp2emote} **Potion d'expérience II**`
  variablecoutregen2 = `\nCoût: ${costregen2PO} ${POemote}, 1 ${potvideemote}, 1 ${fish2emote}\nTemps de production: ${PR2TimeObj.minutes} minutes`
  variablepregen2 = `\n[ID:10] ${pot50emote} **Potion de régénération II**`
}
if(uatelier > 3) {
  variablelegendparchemin = `\n[ID:4] ${emoteparcheminlegendaire} **Parchemin Légendaire**`
  variablelegendcout = `\nCoût: ${costlegendPO} ${POemote}, 1 ${emoteparcheminvierge}, 15 ${emoteparchemincommun}, 10 ${emoteparcheminrare}, 5 ${emoteparcheminepic}\nTemps de production: ${LPTimeObj.minutes} minutes`
  variablecoutatk = `\nCoût: ${costatkPO} ${POemote}, 1 ${potvideemote}, 1 ${fish2emote}\nTemps de production: ${PATimeObj.minutes} minutes`
  variablepatk = `\n[ID:12] ${potatkemote} **Potion d'attaque**`
  variablecoutdef = `\nCoût: ${costdefPO} ${POemote}, 1 ${potvideemote}, 1 ${fish2emote}\nTemps de production: ${PDTimeObj.minutes} minutes`
  variablepdef = `\n[ID:13] ${potdefemote} **Potion de défense**`
}
if(uatelier > 4) {
  variablecoutxp3 = `\nCoût: ${costxp3PO} ${POemote}, 1 ${potvideemote}, 5 ${potxp1emote}, 2 ${potxp2emote}, 1 ${fish3emote}\nTemps de production: ${PX3TimeObj.minutes} minutes`
  variablepxp3 = `\n[ID:8] ${potxp2emote} **Potion d'expérience III**`
  variablecoutregen3 = `\nCoût: ${costregen3PO} ${POemote}, 1 ${potvideemote}, 1 ${fish3emote}\nTemps de production: ${PR3TimeObj.minutes} minutes`
  variablepregen3 = `\n[ID:11] ${pot100emote} **Potion de régénération III**`
}
if(uatelier > 5) {
  variablecoutpv = `\nCoût: ${costpvPO} ${POemote}, 1 ${potvideemote}, 1 ${fish3emote}\nTemps de production: ${PPTimeObj.minutes} minutes`
  variableppv = `\n[ID:14] ${pot100emote} **Potion de vie**`
}
let phrasequichange = `\nPour créer des parchemins ou des potions, faites ${trucbizarre}!prod ID${trucbizarre}`
let tempspourcomparer = 0
let nameduparcheminencours = ""
let ajoutcommon = 0
let ajoutrare = 0
let ajoutepic = 0
let ajoutlegend = 0
let emoteduparcheminencours = ""

if(ukiwritepourparchmin === 1) {
  nameduparcheminencours = "commun"
  ajoutcommon = 1
  emoteduparcheminencours = emoteparchemincommun
}
if(ukiwritepourparchmin === 2) {
  nameduparcheminencours = "rare"
  ajoutrare = 1
  emoteduparcheminencours = emoteparcheminrare
}
if(ukiwritepourparchmin === 3) {
  nameduparcheminencours = "épique"
  ajoutepic = 1
  emoteduparcheminencours = emoteparcheminepic
}
if(ukiwritepourparchmin === 4) {
  nameduparcheminencours = "légendaire"
  ajoutlegend = 1
  emoteduparcheminencours = emoteparcheminlegendaire
}
let ajoutxp1 = 0
let ajoutxp2 = 0
let ajoutxp3 = 0
let ajoutregen1 = 0
let ajoutregen2 = 0
let ajoutregen3 = 0
let ajoutatk = 0
let ajoutdef = 0
let ajoutpv = 0
if(ukiwritepourparchmin === 6) {
  nameduparcheminencours = "d'Expérience I"
  ajoutxp1 = 1
  emoteduparcheminencours = potxp1emote
}
if(ukiwritepourparchmin === 7) {
  nameduparcheminencours = "d'Expérience II"
  ajoutxp2 = 1
  emoteduparcheminencours = potxp2emote
}
if(ukiwritepourparchmin === 8) {
  nameduparcheminencours = "d'Expérience III"
  ajoutxp3 = 1
  emoteduparcheminencours = potxp3emote
}
if(ukiwritepourparchmin === 9) {
  nameduparcheminencours = "de Régénération I"
  ajoutregen1 = 1
  emoteduparcheminencours = pot25emote
}
if(ukiwritepourparchmin === 10) {
  nameduparcheminencours = "de Régénération II"
  ajoutregen2 = 1
  emoteduparcheminencours = pot50emote
}
if(ukiwritepourparchmin === 11) {
  nameduparcheminencours = "de Régénération III"
  ajoutregen3 = 1
  emoteduparcheminencours = pot100emote
}
if(ukiwritepourparchmin === 12) {
  nameduparcheminencours = "d'Attaque"
  ajoutatk = 1
  emoteduparcheminencours = potatkemote
}
if(ukiwritepourparchmin === 13) {
  nameduparcheminencours = "de Défense"
  ajoutdef = 1
  emoteduparcheminencours = potdefemote
}
if(ukiwritepourparchmin === 14) {
  nameduparcheminencours = "de Vie"
  ajoutpv = 1
  emoteduparcheminencours = potpvemote
}
if(ukiwritepourparchmin <= 4){
  parcheminadd = 1
}
if(ukiwritepourparchmin >= 5){
  parcheminadd = 1
}
if(utimeparch === 0 ) {
  phrasequichange = `\nPour créer des parchemins, faites ${trucbizarre}!prod ID${trucbizarre}`
}
let IkTimeObj = ms(utimeparch - Date.now())
if(utimeparch > Date.now() && ukiwritepourparchmin <= 4) {
  phrasequichange = `\nVous êtes en train de produire un parchemin ${nameduparcheminencours}.\nTemps restant: ${IkTimeObj.minutes} minutes`
}
if(utimeparch > Date.now() && ukiwritepourparchmin >= 5) {
  phrasequichange = `\nVous êtes en train de produire une potion ${nameduparcheminencours}.\nTemps restant: ${IkTimeObj.minutes} minutes`
}
if(utimeparch <= Date.now() && ukiwritepourparchmin <= 4 && ukiwritepourparchmin > 0) {
  phrasequichange = `\nVotre parchemin est prêt, pour le récuperer faites ${trucbizarre}!prod claim${trucbizarre}`
}
if(utimeparch <= Date.now() && ukiwritepourparchmin >= 5) {
  phrasequichange = `\nVotre potion est prête, pour la récuperer faites ${trucbizarre}!prod claim${trucbizarre}`
}
let embedatelier1 = new Discord.RichEmbed()
.setTitle(`**:house: Atelier [${uatelier}]**`)
.addField(`Ressources primaires`, `\n[ID:0] ${emoteparcheminvierge} **Parchemin Vierge** \nCoût: ${costvierge} ${POemote}\nTemps de production: Instantané\n[ID:5] ${potvideemote} **Flacon** \nCoût: ${costflacon} ${POemote}\nTemps de production: Instantané`)
.addField(`Parchemins`,`\n[ID:1] ${emoteparchemincommun} **Parchemin Commun** \nCoût: ${costcommonPO} ${POemote}, 1 ${emoteparcheminvierge}\nTemps de production: ${CPTimeObj.minutes} minutes${variablerareparchemin}${variablerarecout}${variableepicparchemin}${variableepiccout}${variablelegendparchemin}${variablelegendcout}\n${phrasequichange}\n[1/3]`)
if(message.content === "!atelier" && uclassen > 0 ) {
  if(uatelier === 0) message.channel.send("Ton atelier est niveau 0, améliore le niveau 1 pour l'utiliser.")
  if(uatelier > 0) message.channel.send(embedatelier1)
}
let embedatelier2 = new Discord.RichEmbed()
.setTitle(`**:house: Atelier [${uatelier}]**`)
.addField(`Potions (1)`, `\n[ID:6] ${potxp1emote} **Potion d'éxpérience** \nCoût: ${costxp1PO} ${POemote}, 1 ${potvideemote}, 1 ${fish1emote}\nTemps de production: ${PX1TimeObj.minutes} minutes${variablepxp2}${variablecoutxp2}${variablepxp3}${variablecoutxp3}`)
.addField(`Potions (2)`, `\n[ID:9] ${pot25emote} **Potion de régénération I** \nCoût: ${costregen1PO} ${POemote}, 1 ${potvideemote}, 1 ${fish1emote}\nTemps de production: ${PR1TimeObj.minutes} minutes${variablepregen2}${variablecoutregen2}${variablepregen3}${variablecoutregen3}\n${phrasequichange}\n[2/3]`);
if(message.content === "!atelier 2" && uclassen > 0 ) {
  if(uatelier === 0) message.channel.send("Ton atelier est niveau 0, améliore le niveau 1 pour l'utiliser.")
  if(uatelier > 0) message.channel.send(embedatelier2)
}
let embedatelier3 = new Discord.RichEmbed()
.setTitle(`**:house: Atelier [${uatelier}]**`)
.addField(`Potions (3)`,`${variablepatk}${variablecoutatk}${variablepdef}${variablecoutdef}${variableppv}${variablecoutpv}\n${phrasequichange}\n[3/3]`);
if(message.content === "!atelier 3" && uclassen > 0 && uatelier > 0) {
  if(uatelier < 4) message.channel.send("Il te faut l'atelier de niveau 4 pour avoir accès a cette page.")
  if(uatelier >= 4) message.channel.send(embedatelier3)
}

if(message.content === "!prod 0" && uclassen > 0 && uatelier > 0) {
  if(utimeparch <= Date.now() && utimeparch > 0) message.channel.send("Vous avez quelque chose à récupérer dans l'atelier avant.")
  if(utimeparch > Date.now()) message.channel.send(`Vous êtes déjà en train de produire quelque chose.\nTemps restant: ${IkTimeObj.minutes} minutes`)
  if(uparcheminvierge >= placemax) message.channel.send(`Vous avez trop de parchemins vierges sur vous`)
  if(uPieceor < costvierge && utimeparch === 0) message.channel.send("Vous n'avez pas assez de ressources")
  if(utimeparch === 0 && uPieceor >= costvierge && uparcheminvierge < placemax){

    Pieceor[message.author.id] = {
      Pieceor: uPieceor - costvierge
    };

    parcheminvierge[message.author.id] = {
      parcheminvierge: uparcheminvierge + 1
    };

    fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
      if (err) console.log(err)
    });

    fs.writeFile("./parcheminvierge.json", JSON.stringify(parcheminvierge), (err) => {
      if (err) console.log(err)
    });

    message.channel.send(`Vous avez bien produit 1 ${emoteparcheminvierge}`)
  }
}
if(message.content === "!prod 5" && uclassen > 0 && uatelier > 0) {
  if(utimeparch <= Date.now() && utimeparch > 0) message.channel.send("Vous avez quelque chose à récupérer dans l'atelier avant.")
  if(utimeparch > Date.now()) message.channel.send(`Vous êtes déjà en train de produire quelque chose.\nTemps restant: ${IkTimeObj.minutes} minutes`)
  if(upotvide >= placemax) message.channel.send(`Vous avez trop de flacons sur vous`)
  if(uPieceor < costflacon && utimeparch === 0 ) message.channel.send("Vous n'avez pas assez de ressources")
  if(utimeparch === 0 && uPieceor >= costflacon && upotvide < placemax){

    Pieceor[message.author.id] = {
      Pieceor: uPieceor - costflacon
    };

    potvide[message.author.id] = {
      potvide: upotvide + 1
    };

    fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./potvide.json", JSON.stringify(potvide), (err) => {
      if (err) console.log(err)
    });

    message.channel.send(`Vous avez bien produit 1 ${potvideemote}`)
  }
}


if(message.content === "!prod 1" && uclassen > 0 && uatelier > 0) {
  if(utimeparch <= Date.now() && utimeparch > 0) message.channel.send("Vous avez quelque chose à récupérer dans l'atelier avant.")
  if(utimeparch > Date.now()) message.channel.send(`Vous êtes déjà en train de produire quelque chose.\nTemps restant: ${IkTimeObj.minutes} minutes`)
  if(uparchemincommun >= placemax) message.channel.send(`Vous avez trop de parchemins communs sur vous`)
  if(uPieceor < costcommonPO || uparcheminvierge ===  0 && utimeparch === 0 ) message.channel.send("Vous n'avez pas assez de ressources")
  if(utimeparch === 0 && uparcheminvierge > 0 && uPieceor >= costcommonPO && uparchemincommun < placemax){

    Pieceor[message.author.id] = {
      Pieceor: uPieceor - costcommonPO
    };
    kiwritepourparchmin[message.author.id] = {
      kiwritepourparchmin: 1
    };

    parcheminvierge[message.author.id] = {
      parcheminvierge: uparcheminvierge - 1
    }
      timeparch[message.author.id] = {
         timeparch: Date.now() + tempscommon
       };

    fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./timeparch.json", JSON.stringify(timeparch), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./parcheminvierge.json", JSON.stringify(parcheminvierge), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./kiwritepourparchmin.json", JSON.stringify(kiwritepourparchmin), (err) => {
      if (err) console.log(err)
    });
    message.channel.send(`Vous avez lancé la production de 1 ${emoteparchemincommun}, il sera disponible dans ${CPTimeObj.minutes} minutes.\nPour le récuperer pensez à faire ${trucbizarre}!prod claim${trucbizarre}`)
  }
}
if(message.content === "!prod 6" && uclassen > 0 && uatelier > 0) {
  if(utimeparch <= Date.now() && utimeparch > 0) message.channel.send("Vous avez quelque chose à récupérer dans l'atelier avant.")
  if(utimeparch > Date.now()) message.channel.send(`Vous êtes déjà en train de produire quelque chose.\nTemps restant: ${IkTimeObj.minutes} minutes`)
  if(upotxp1 >= placemax) message.channel.send(`Vous avez trop de potions d'éxpérience I sur vous`)
  if(uPieceor < costxp1PO || upotvide ===  0 || fishglobal[message.author.id].fish1 === 0 && utimeparch === 0 ) message.channel.send("Vous n'avez pas assez de ressources")
  if(utimeparch === 0 && upotvide > 0 && uPieceor >= costxp1PO && upotxp1 < placemax && fishglobal[message.author.id].fish1 != 0){

    Pieceor[message.author.id] = {
      Pieceor: uPieceor - costxp1PO
    };
    kiwritepourparchmin[message.author.id] = {
      kiwritepourparchmin: 6
    };

    potvide[message.author.id] = {
      potvide: upotvide - 1
    }
      timeparch[message.author.id] = {
         timeparch: Date.now() + tempsxp1
       };
       fishglobal[message.author.id] = {
        fish1: fishglobal[message.author.id].fish1 - 1
      };   
       fs.writeFile("./fishglobal.json", JSON.stringify(fishglobal), (err) => {
        if (err) console.log(err)
      });
    fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./timeparch.json", JSON.stringify(timeparch), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./potvide.json", JSON.stringify(potvide), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./kiwritepourparchmin.json", JSON.stringify(kiwritepourparchmin), (err) => {
      if (err) console.log(err)
    });
    message.channel.send(`Vous avez lancé la production de 1 ${potxp1emote}, elle sera disponible dans ${PX1TimeObj.minutes} minutes.\nPour la récuperer pensez à faire ${trucbizarre}!prod claim${trucbizarre}`)
  }
}
if(message.content === "!prod 9" && uclassen > 0 && uatelier > 0) {
  if(utimeparch <= Date.now() && utimeparch > 0) message.channel.send("Vous avez quelque chose à récupérer dans l'atelier avant.")
  if(utimeparch > Date.now()) message.channel.send(`Vous êtes déjà en train de produire quelque chose.\nTemps restant: ${IkTimeObj.minutes} minutes`)
  if(upot25 >= placemax) message.channel.send(`Vous avez trop de potions de régénération I sur vous`)
  if(uPieceor < costregen1PO || upotvide ===  0 || fishglobal[message.author.id].fish1 === 0 && utimeparch === 0 ) message.channel.send("Vous n'avez pas assez de ressources")
  if(utimeparch === 0 && upotvide > 0 && uPieceor >= costregen1PO && upot25 < placemax && fishglobal[message.author.id].fish1 != 0){

    Pieceor[message.author.id] = {
      Pieceor: uPieceor - costregen1PO
    };
    kiwritepourparchmin[message.author.id] = {
      kiwritepourparchmin: 9
    };

    potvide[message.author.id] = {
      potvide: upotvide - 1
    }
      timeparch[message.author.id] = {
         timeparch: Date.now() + tempsregen1
       };
       fishglobal[message.author.id] = {
        fish1: fishglobal[message.author.id].fish1 - 1
      };   
       fs.writeFile("./fishglobal.json", JSON.stringify(fishglobal), (err) => {
        if (err) console.log(err)
      });
    fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./timeparch.json", JSON.stringify(timeparch), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./potvide.json", JSON.stringify(potvide), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./kiwritepourparchmin.json", JSON.stringify(kiwritepourparchmin), (err) => {
      if (err) console.log(err)
    });
    message.channel.send(`Vous avez lancé la production de 1 ${pot25emote}, elle sera disponible dans ${PR1TimeObj.minutes} minutes.\nPour la récuperer pensez à faire ${trucbizarre}!prod claim${trucbizarre}`)
  }
}
if(message.content === "!prod 2" && uclassen > 0 && uatelier > 1) {
  if(utimeparch <= Date.now() && utimeparch > 0) message.channel.send("Vous avez quelque chose à récupérer dans l'atelier avant.")
  if(utimeparch > Date.now()) message.channel.send(`Vous êtes déjà en train de produire quelque chose.\nTemps restant: ${IkTimeObj.minutes} minutes`)
  if(uparcheminrare >= placemax) message.channel.send(`Vous avez trop de parchemins rares sur vous`)
  if(uPieceor < costrarePO || uparcheminvierge ===  0 || uparchemincommun < 2 && utimeparch === 0 ) message.channel.send("Vous n'avez pas assez de ressources")
  if(utimeparch === 0 && uparcheminvierge > 0 && uPieceor >= costrarePO && uparchemincommun > 1 && uparcheminrare < placemax){

    Pieceor[message.author.id] = {
      Pieceor: uPieceor - costrarePO
    };
    kiwritepourparchmin[message.author.id] = {
      kiwritepourparchmin: 2
    };
     parchemincommun[message.author.id] = {
       parchemincommun: uparchemincommun - 2
     }
     parcheminvierge[message.author.id] = {
      parcheminvierge: uparcheminvierge - 1
    }
      timeparch[message.author.id] = {
         timeparch: Date.now() + tempsrare
       };

    fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./parchemincommun.json", JSON.stringify(parchemincommun), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./timeparch.json", JSON.stringify(timeparch), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./parcheminvierge.json", JSON.stringify(parcheminvierge), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./kiwritepourparchmin.json", JSON.stringify(kiwritepourparchmin), (err) => {
      if (err) console.log(err)
    });
    message.channel.send(`Vous avez lancé la production de 1 ${emoteparcheminrare}, il sera disponible dans ${RPTimeObj.minutes} minutes.\nPour le récuperer pensez à faire ${trucbizarre}!prod claim${trucbizarre}`)
  }
}
if(message.content === "!prod 7" && uclassen > 0 && uatelier > 2) {
  if(utimeparch <= Date.now() && utimeparch > 0) message.channel.send("Vous avez quelque chose à récupérer dans l'atelier avant.")
  if(utimeparch > Date.now()) message.channel.send(`Vous êtes déjà en train de produire quelque chose.\nTemps restant: ${IkTimeObj.minutes} minutes`)
  if(upotxp2 >= placemax) message.channel.send(`Vous avez trop de potions d'éxpérience II sur vous`)
  if(uPieceor < costxp2PO || upotvide ===  0 || upotxp1 < 2 || fishglobal[message.author.id].fish2 === 0 && utimeparch === 0 ) message.channel.send("Vous n'avez pas assez de ressources")
  if(utimeparch === 0 && upotvide > 0 && uPieceor >= costxp2PO && upotxp1 > 1 && upotxp2 < placemax && fishglobal[message.author.id].fish2 != 0){

    Pieceor[message.author.id] = {
      Pieceor: uPieceor - costxp2PO
    };
    kiwritepourparchmin[message.author.id] = {
      kiwritepourparchmin: 7
    };
     potxp1[message.author.id] = {
       potxp1: upotxp1 - 2
     }
     potvide[message.author.id] = {
      potvide: upotvide - 1
    }
      timeparch[message.author.id] = {
         timeparch: Date.now() + tempsxp2
       };
       fishglobal[message.author.id] = {
        fish2: fishglobal[message.author.id].fish2 - 1
      };   
       fs.writeFile("./fishglobal.json", JSON.stringify(fishglobal), (err) => {
        if (err) console.log(err)
      });
    fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./potxp1.json", JSON.stringify(potxp1), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./timeparch.json", JSON.stringify(timeparch), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./potvide.json", JSON.stringify(potvide), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./kiwritepourparchmin.json", JSON.stringify(kiwritepourparchmin), (err) => {
      if (err) console.log(err)
    });
    message.channel.send(`Vous avez lancé la production de 1 ${potxp2emote}, elle sera disponible dans ${PX2TimeObj.minutes} minutes.\nPour la récuperer pensez à faire ${trucbizarre}!prod claim${trucbizarre}`)
  }
}
if(message.content === "!prod 8" && uclassen > 0 && uatelier > 4) {
  if(utimeparch <= Date.now() && utimeparch > 0) message.channel.send("Vous avez quelque chose à récupérer dans l'atelier avant.")
  if(utimeparch > Date.now()) message.channel.send(`Vous êtes déjà en train de produire quelque chose.\nTemps restant: ${IkTimeObj.minutes} minutes`)
  if(upotxp3 >= placemax) message.channel.send(`Vous avez trop de potions d'éxpérience III sur vous`)
  if(uPieceor < costxp3PO || upotvide ===  0 || upotxp1 < 5 || upotxp2 < 2 || fishglobal[message.author.id].fish3 === 0 && utimeparch === 0 ) message.channel.send("Vous n'avez pas assez de ressources")
  if(utimeparch === 0 && upotvide > 0 && uPieceor >= costxp3PO && upotxp1 >= 5 && upotxp2 >= 2 && upotxp3 < placemax && fishglobal[message.author.id].fish3 != 0){

    Pieceor[message.author.id] = {
      Pieceor: uPieceor - costxp3PO
    };
    kiwritepourparchmin[message.author.id] = {
      kiwritepourparchmin: 8
    };
     potxp1[message.author.id] = {
       potxp1: upotxp1 - 5
     }
     potxp2[message.author.id] = {
      potxp2: upotxp2 - 2
    }
     potvide[message.author.id] = {
      potvide: upotvide - 1
    }
      timeparch[message.author.id] = {
         timeparch: Date.now() + tempsxp3
       };
       fishglobal[message.author.id] = {
        fish3: fishglobal[message.author.id].fish3 - 1
      };   
       fs.writeFile("./fishglobal.json", JSON.stringify(fishglobal), (err) => {
        if (err) console.log(err)
      });
    fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./potxp1.json", JSON.stringify(potxp1), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./potxp2.json", JSON.stringify(potxp2), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./timeparch.json", JSON.stringify(timeparch), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./potvide.json", JSON.stringify(potvide), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./kiwritepourparchmin.json", JSON.stringify(kiwritepourparchmin), (err) => {
      if (err) console.log(err)
    });
    message.channel.send(`Vous avez lancé la production de 1 ${potxp3emote}, elle sera disponible dans ${PX3TimeObj.minutes} minutes.\nPour la récuperer pensez à faire ${trucbizarre}!prod claim${trucbizarre}`)
  }
}
if(message.content === "!prod 10" && uclassen > 0 && uatelier > 2) {
  if(utimeparch <= Date.now() && utimeparch > 0) message.channel.send("Vous avez quelque chose à récupérer dans l'atelier avant.")
  if(utimeparch > Date.now()) message.channel.send(`Vous êtes déjà en train de produire quelque chose.\nTemps restant: ${IkTimeObj.minutes} minutes`)
  if(upot50 >= placemax) message.channel.send(`Vous avez trop de potions de régénération II sur vous`)
  if(uPieceor < costregen2PO || upotvide ===  0 || fishglobal[message.author.id].fish2 === 0 && utimeparch === 0 ) message.channel.send("Vous n'avez pas assez de ressources")
  if(utimeparch === 0 && upotvide > 0 && uPieceor >= costregen2PO && upot50 < placemax && fishglobal[message.author.id].fish2 != 0){

    Pieceor[message.author.id] = {
      Pieceor: uPieceor - costregen2PO
    };
    kiwritepourparchmin[message.author.id] = {
      kiwritepourparchmin: 10
    };
     potvide[message.author.id] = {
      potvide: upotvide - 1
    }
      timeparch[message.author.id] = {
         timeparch: Date.now() + tempsregen2
       };
       fishglobal[message.author.id] = {
        fish2: fishglobal[message.author.id].fish2 - 1
      };   
       fs.writeFile("./fishglobal.json", JSON.stringify(fishglobal), (err) => {
        if (err) console.log(err)
      });
    fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
      if (err) console.log(err)
    });

    fs.writeFile("./timeparch.json", JSON.stringify(timeparch), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./potvide.json", JSON.stringify(potvide), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./kiwritepourparchmin.json", JSON.stringify(kiwritepourparchmin), (err) => {
      if (err) console.log(err)
    });
    message.channel.send(`Vous avez lancé la production de 1 ${pot50emote}, elle sera disponible dans ${PR2TimeObj.minutes} minutes.\nPour la récuperer pensez à faire ${trucbizarre}!prod claim${trucbizarre}`)
  }
}
if(message.content === "!prod 11" && uclassen > 0 && uatelier > 4) {
  if(utimeparch <= Date.now() && utimeparch > 0) message.channel.send("Vous avez quelque chose à récupérer dans l'atelier avant.")
  if(utimeparch > Date.now()) message.channel.send(`Vous êtes déjà en train de produire quelque chose.\nTemps restant: ${IkTimeObj.minutes} minutes`)
  if(upot100 >= placemax) message.channel.send(`Vous avez trop de potions de régénération III sur vous`)
  if(uPieceor < costregen3PO || upotvide ===  0 || fishglobal[message.author.id].fish3 === 0 && utimeparch === 0 ) message.channel.send("Vous n'avez pas assez de ressources")
  if(utimeparch === 0 && upotvide > 0 && uPieceor >= costregen3PO && upot100 < placemax && fishglobal[message.author.id].fish3 != 0){

    Pieceor[message.author.id] = {
      Pieceor: uPieceor - costregen3PO
    };
    kiwritepourparchmin[message.author.id] = {
      kiwritepourparchmin: 11
    };
     potvide[message.author.id] = {
      potvide: upotvide - 1
    }
      timeparch[message.author.id] = {
         timeparch: Date.now() + tempsregen3
       };
       fishglobal[message.author.id] = {
        fish3: fishglobal[message.author.id].fish3 - 1
      };   
       fs.writeFile("./fishglobal.json", JSON.stringify(fishglobal), (err) => {
        if (err) console.log(err)
      });
    fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
      if (err) console.log(err)
    });

    fs.writeFile("./timeparch.json", JSON.stringify(timeparch), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./potvide.json", JSON.stringify(potvide), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./kiwritepourparchmin.json", JSON.stringify(kiwritepourparchmin), (err) => {
      if (err) console.log(err)
    });
    message.channel.send(`Vous avez lancé la production de 1 ${pot100emote}, elle sera disponible dans ${PR3TimeObj.minutes} minutes.\nPour la récuperer pensez à faire ${trucbizarre}!prod claim${trucbizarre}`)
  }
}
if(message.content === "!prod 12" && uclassen > 0 && uatelier > 3) {
  if(utimeparch <= Date.now() && utimeparch > 0) message.channel.send("Vous avez quelque chose à récupérer dans l'atelier avant.")
  if(utimeparch > Date.now()) message.channel.send(`Vous êtes déjà en train de produire quelque chose.\nTemps restant: ${IkTimeObj.minutes} minutes`)
  if(upotatk >= placemax) message.channel.send(`Vous avez trop de potions d'attaque sur vous`)
  if(uPieceor < costatkPO || upotvide ===  0 || fishglobal[message.author.id].fish2 === 0 && utimeparch === 0 ) message.channel.send("Vous n'avez pas assez de ressources")
  if(utimeparch === 0 && upotvide > 0 && uPieceor >= costatkPO && upotatk < placemax && fishglobal[message.author.id].fish2 != 0){

    Pieceor[message.author.id] = {
      Pieceor: uPieceor - costatkPO
    };
    kiwritepourparchmin[message.author.id] = {
      kiwritepourparchmin: 12
    };
     potvide[message.author.id] = {
      potvide: upotvide - 1
    }
      timeparch[message.author.id] = {
         timeparch: Date.now() + tempsatk
       };
       fishglobal[message.author.id] = {
        fish2: fishglobal[message.author.id].fish2 - 1
      };   
       fs.writeFile("./fishglobal.json", JSON.stringify(fishglobal), (err) => {
        if (err) console.log(err)
      });
    fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
      if (err) console.log(err)
    });

    fs.writeFile("./timeparch.json", JSON.stringify(timeparch), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./potvide.json", JSON.stringify(potvide), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./kiwritepourparchmin.json", JSON.stringify(kiwritepourparchmin), (err) => {
      if (err) console.log(err)
    });
    message.channel.send(`Vous avez lancé la production de 1 ${potatkemote}, elle sera disponible dans ${PATimeObj.minutes} minutes.\nPour la récuperer pensez à faire ${trucbizarre}!prod claim${trucbizarre}`)
  }
}
if(message.content === "!prod 13" && uclassen > 0 && uatelier > 3) {
  if(utimeparch <= Date.now() && utimeparch > 0) message.channel.send("Vous avez quelque chose à récupérer dans l'atelier avant.")
  if(utimeparch > Date.now()) message.channel.send(`Vous êtes déjà en train de produire quelque chose.\nTemps restant: ${IkTimeObj.minutes} minutes`)
  if(upotdef >= placemax) message.channel.send(`Vous avez trop de potions de défense sur vous`)
  if(uPieceor < costdefPO || upotvide ===  0|| fishglobal[message.author.id].fish2 === 0 && utimeparch === 0 ) message.channel.send("Vous n'avez pas assez de ressources")
  if(utimeparch === 0 && upotvide > 0 && uPieceor >= costdefPO && upotdef < placemax && fishglobal[message.author.id].fish2 != 0){

    Pieceor[message.author.id] = {
      Pieceor: uPieceor - costdefPO
    };
    kiwritepourparchmin[message.author.id] = {
      kiwritepourparchmin: 13
    };
     potvide[message.author.id] = {
      potvide: upotvide - 1
    }
      timeparch[message.author.id] = {
         timeparch: Date.now() + tempsdef
       };
       fishglobal[message.author.id] = {
        fish2: fishglobal[message.author.id].fish2 - 1
      };   
       fs.writeFile("./fishglobal.json", JSON.stringify(fishglobal), (err) => {
        if (err) console.log(err)
      });
    fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
      if (err) console.log(err)
    });

    fs.writeFile("./timeparch.json", JSON.stringify(timeparch), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./potvide.json", JSON.stringify(potvide), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./kiwritepourparchmin.json", JSON.stringify(kiwritepourparchmin), (err) => {
      if (err) console.log(err)
    });
    message.channel.send(`Vous avez lancé la production de 1 ${potdefemote}, elle sera disponible dans ${PDTimeObj.minutes} minutes.\nPour la récuperer pensez à faire ${trucbizarre}!prod claim${trucbizarre}`)
  }
}
if(message.content === "!prod 14" && uclassen > 0 && uatelier > 5) {
  if(utimeparch <= Date.now() && utimeparch > 0) message.channel.send("Vous avez quelque chose à récupérer dans l'atelier avant.")
  if(utimeparch > Date.now()) message.channel.send(`Vous êtes déjà en train de produire quelque chose.\nTemps restant: ${IkTimeObj.minutes} minutes`)
  if(upotpv >= placemax) message.channel.send(`Vous avez trop de potions de vie sur vous`)
  if(uPieceor < costpvPO || upotvide ===  0 || fishglobal[message.author.id].fish3 === 0 && utimeparch === 0 ) message.channel.send("Vous n'avez pas assez de ressources")
  if(utimeparch === 0 && upotvide > 0 && uPieceor >= costpvPO && upotpv < placemax && fishglobal[message.author.id].fish3 != 0){

    Pieceor[message.author.id] = {
      Pieceor: uPieceor - costpvPO
    };
    kiwritepourparchmin[message.author.id] = {
      kiwritepourparchmin: 14
    };
     potvide[message.author.id] = {
      potvide: upotvide - 1
    }
      timeparch[message.author.id] = {
         timeparch: Date.now() + tempspv
       };
       fishglobal[message.author.id] = {
        fish3: fishglobal[message.author.id].fish3 - 1
      };   
       fs.writeFile("./fishglobal.json", JSON.stringify(fishglobal), (err) => {
        if (err) console.log(err)
      });
    fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
      if (err) console.log(err)
    });

    fs.writeFile("./timeparch.json", JSON.stringify(timeparch), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./potvide.json", JSON.stringify(potvide), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./kiwritepourparchmin.json", JSON.stringify(kiwritepourparchmin), (err) => {
      if (err) console.log(err)
    });
    message.channel.send(`Vous avez lancé la production de 1 ${potpvemote}, elle sera disponible dans ${PPTimeObj.minutes} minutes.\nPour la récuperer pensez à faire ${trucbizarre}!prod claim${trucbizarre}`)
  }
}
if(message.content === "!prod 3" && uclassen > 0 && uatelier > 2) {
  if(utimeparch <= Date.now() && utimeparch > 0) message.channel.send("Vous avez quelque chose à récupérer dans l'atelier avant.")
  if(utimeparch > Date.now()) message.channel.send(`Vous êtes déjà en train de produire quelque chose.\nTemps restant: ${IkTimeObj.minutes} minutes`)
  if(uparcheminepic >= placemax) message.channel.send(`Vous avez trop de parchemins épiques sur vous`)
  if(uPieceor < costepicPO || uparcheminvierge ===  0 || uparchemincommun < 7  || uparcheminrare < 3 && utimeparch === 0 ) message.channel.send("Vous n'avez pas assez de ressources")
  if(utimeparch === 0 && uparcheminvierge > 0 && uPieceor >= costepicPO && uparchemincommun > 6 && uparcheminrare > 2 && uparcheminepic < placemax){

    Pieceor[message.author.id] = {
      Pieceor: uPieceor - costepicPO
    };
    kiwritepourparchmin[message.author.id] = {
      kiwritepourparchmin: 3
    };
     parchemincommun[message.author.id] = {
       parchemincommun: uparchemincommun - 7
     }
     parcheminvierge[message.author.id] = {
      parcheminvierge: uparcheminvierge - 1
    }
     parcheminrare[message.author.id] = {
      parcheminrare: uparcheminrare - 3
    }
      timeparch[message.author.id] = {
         timeparch: Date.now() + tempsepic
       };

    fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./parchemincommun.json", JSON.stringify(parchemincommun), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./parcheminrare.json", JSON.stringify(parcheminrare), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./timeparch.json", JSON.stringify(timeparch), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./parcheminvierge.json", JSON.stringify(parcheminvierge), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./kiwritepourparchmin.json", JSON.stringify(kiwritepourparchmin), (err) => {
      if (err) console.log(err)
    });
    message.channel.send(`Vous avez lancé la production de 1 ${emoteparcheminepic}, il sera disponible dans ${EPTimeObj.minutes} minutes.\nPour le récuperer pensez à faire ${trucbizarre}!prod claim${trucbizarre}`)
  }
}
if(message.content === "!prod 4" && uclassen > 0 && uatelier > 3) {
  if(utimeparch <= Date.now() && utimeparch > 0) message.channel.send("Vous avez quelque chose à récupérer dans l'atelier avant.")
  if(utimeparch > Date.now()) message.channel.send(`Vous êtes déjà en train de produire quelque chose.\nTemps restant: ${IkTimeObj.minutes} minutes`)
  if(uparcheminlegendaire >= placemax) message.channel.send(`Vous avez trop de parchemins légendaires sur vous`)
  if(uPieceor < costlegendPO || uparcheminvierge ===  0 || uparchemincommun < 15  || uparcheminrare < 10 || uparcheminepic < 5 && utimeparch === 0 ) message.channel.send("Vous n'avez pas assez de ressources")
  if(utimeparch === 0 && uparcheminvierge > 0 && uPieceor >= costlegendPO && uparchemincommun > 14 && uparcheminrare > 9 && uparcheminepic > 4 && uparcheminlegendaire < placemax){

    Pieceor[message.author.id] = {
      Pieceor: uPieceor - costlegendPO
    };
    kiwritepourparchmin[message.author.id] = {
      kiwritepourparchmin: 4
    };
     parchemincommun[message.author.id] = {
       parchemincommun: uparchemincommun - 15
     }
     parcheminrare[message.author.id] = {
      parcheminrare: uparcheminrare - 10
    }
    parcheminepic[message.author.id] = {
      parcheminepic: uparcheminepic - 5
    }
    parcheminvierge[message.author.id] = {
      parcheminvierge: uparcheminvierge - 1
    }
      timeparch[message.author.id] = {
         timeparch: Date.now() + tempslegend
       };

    fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./parchemincommun.json", JSON.stringify(parchemincommun), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./parcheminrare.json", JSON.stringify(parcheminrare), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./parcheminepic.json", JSON.stringify(parcheminepic), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./parcheminvierge.json", JSON.stringify(parcheminvierge), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./timeparch.json", JSON.stringify(timeparch), (err) => {
      if (err) console.log(err)
    });

    fs.writeFile("./kiwritepourparchmin.json", JSON.stringify(kiwritepourparchmin), (err) => {
      if (err) console.log(err)
    });
    message.channel.send(`Vous avez lancé la production de 1 ${emoteparcheminlegendaire}, il sera disponible dans ${LPTimeObj.minutes} minutes.\nPour le récuperer pensez à faire ${trucbizarre}!prod claim${trucbizarre}`)
  }
}
if(message.content === "!prod claim" && uclassen > 0 && uatelier > 0) {
  if(utimeparch === 0 ) message.channel.send(`Vous n'avez rien en cours de production, pour produire quelque chose, faites ${trucbizarre}!prod [ID]${trucbizarre}`)
  if(utimeparch > Date.now()) message.channel.send(`Reviens dans: ${IkTimeObj.minutes} minutes et ${IkTimeObj.seconds} secondes`)
  if(utimeparch <= Date.now() && utimeparch > 0 || uAdmin===1){

    total_parchemin[message.author.id] = {
      total_parchemin: utotal_parchemin + parcheminadd
    };
    total_potion[message.author.id] = {
      total_potion: utotal_potion + potionadd
    };
    kiwritepourparchmin[message.author.id] = {
      kiwritepourparchmin: 0
    };
     parchemincommun[message.author.id] = {
       parchemincommun: uparchemincommun + ajoutcommon
     }
     parcheminrare[message.author.id] = {
      parcheminrare: uparcheminrare + ajoutrare
    }
    parcheminepic[message.author.id] = {
      parcheminepic: uparcheminepic + ajoutepic
    }
    parcheminlegendaire[message.author.id] = {
      parcheminlegendaire: uparcheminlegendaire + ajoutlegend
    }
    potxp1[message.author.id] = {
      potxp1: upotxp1 + ajoutxp1
    }
    potxp2[message.author.id] = {
      potxp2: upotxp2 + ajoutxp2
    }
    potxp3[message.author.id] = {
      potxp3: upotxp3 + ajoutxp3
    }
    pot25[message.author.id] = {
      pot25: upot25 + ajoutregen1
    }
    pot50[message.author.id] = {
      pot50: upot50 + ajoutregen2
    }
    pot100[message.author.id] = {
      pot100: upot100 + ajoutregen3
    }
    potatk[message.author.id] = {
      potatk: upotatk + ajoutatk
    }
    potdef[message.author.id] = {
      potdef: upotdef + ajoutdef
    }
    potpv[message.author.id] = {
      potpv: upotpv + ajoutpv
    }
      timeparch[message.author.id] = {
         timeparch: 0
       };

    fs.writeFile("./parchemincommun.json", JSON.stringify(parchemincommun), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./parcheminrare.json", JSON.stringify(parcheminrare), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./parcheminepic.json", JSON.stringify(parcheminepic), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./parcheminlegendaire.json", JSON.stringify(parcheminlegendaire), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./potxp1.json", JSON.stringify(potxp1), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./potxp2.json", JSON.stringify(potxp2), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./potxp3.json", JSON.stringify(potxp3), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./pot25.json", JSON.stringify(pot25), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./pot50.json", JSON.stringify(pot50), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./pot100.json", JSON.stringify(pot100), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./potatk.json", JSON.stringify(potatk), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./potdef.json", JSON.stringify(potdef), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./potpv.json", JSON.stringify(potpv), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./total_parchemin.json", JSON.stringify(total_parchemin), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./total_potion.json", JSON.stringify(total_potion), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./timeparch.json", JSON.stringify(timeparch), (err) => {
      if (err) console.log(err)
    });

    fs.writeFile("./kiwritepourparchmin.json", JSON.stringify(kiwritepourparchmin), (err) => {
      if (err) console.log(err)
    });
    message.channel.send(`Vous avez bien produit 1 ${emoteduparcheminencours} !`)
  }
}

let specialinventaireEmbed = new Discord.RichEmbed()
.setAuthor(message.author.username)
.setColor("#FF0000")
.addField(`Gemmes:`, `${gemme1emote} **${gemme1name}**: Tier ${ugemme1}\n${desc1}\n${gemme2emote} **${gemme2name}**: Tier ${ugemme2}\n${desc2}\n${gemme3emote} **${gemme3name}**: Tier ${ugemme3}\n${desc3}\n${gemme4emote} **${gemme4name}**: Tier ${ugemme4}\n${desc4}\n${gemme5emote} **${gemme5name}**: Tier ${ugemme5}\n${desc5}\n${fragemote} **Fragments**: ${millify(ufragments, 1)}`)
.addField(`Pet:`, `${petnameinv}\n**ATK**: ${Math.trunc(petatkboosted)}\n**DEF**: ${Math.trunc(petdefboosted)}\n**Pv**: ${Math.trunc(petpvboosted)}\n${desceffet1}\n${desceffet2}\n${desceffet3}`)
.addField(`Boosts`, `Attaque:${messagedeboostatk}\nDéfense:${messagedeboostdef}\nVie:${messagedeboostpv}`);

if(message.content === "!si" && uclassen > 0 )  message.channel.send(specialinventaireEmbed)

let aalname = ""
let aalcost = ""
let upname = ""

let kitem4 = 0
let kitem5 = 0
let kitem7 = 0
let kitem11 = 0
let kitem15 = 0
let kitem18 = 0
let kitem19 = 0
let kitem25 = 0
let kitem30 = 0
let kitem38 = 0
let kitem42 = 0
let kitem43 = 0
let kitem44 = 0
let ftemps = require("./ftemps.json")

if(!ftemps[message.author.id]){
  ftemps[message.author.id] = {
    ftemps: 0
  };

fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
  if (err) console.log(err)
});
}
let uftemps = ftemps[message.author.id].ftemps
let mathrandomaa1 = require("./mathrandomaa1.json")
if(!mathrandomaa1[message.author.id]){
  mathrandomaa1[message.author.id] = {
    mathrandomaa1: Math.floor(Math.random() * 3) + 1
  };

fs.writeFile("./mathrandomaa1.json", JSON.stringify(mathrandomaa1), (err) => {
  if (err) console.log(err)
});
}
let phrasedeclaimforge = ""
let umathrandomaa1 = mathrandomaa1[message.author.id].mathrandomaa1
let countarmecreate = uitem4+uitem5+uitem7+uitem11+uitem15+uitem18+uitem19+uitem25+uitem30+uitem38+uitem42+uitem43+uitem44

if(umathrandomaa1 === 1 && uitem4 === 0) {
   kitem4 = 1
   phrasedeclaimforge = `Tu as forgé l'arme Epée en bois <:Epee4:596994186771693568> [ID:4]\nRareté: Commune`
}
if(umathrandomaa1 === 1 && uitem4 > 0 && uitem5 === 0) {
  kitem5 = 1
  phrasedeclaimforge = `Tu as forgé l'arme Gants de boxe <:gants5:596994206732386305> [ID:5]\nRareté: Commune`
}
if(umathrandomaa1 === 1 && uitem4 > 0 && uitem5 > 0 && uitem7 === 0) {
  kitem7 = 1
  phrasedeclaimforge = `Tu as forgé l'arme Cuter <:cuter7:597399140561059841> [ID:7]\nRareté: Commune`
}
if(umathrandomaa1 === 1 && uitem4 > 0 && uitem5 > 0 && uitem7 > 0 && uitem11 === 0) {
  kitem11 = 1
  phrasedeclaimforge = `Tu as forgé l'arme Grenade <:grenade11:597399227051802664> [ID:11]\nRareté: Rare`
}
if(umathrandomaa1 === 1 && uitem4 > 0 && uitem5 > 0 && uitem7 > 0 && uitem11 > 0 && uitem15 === 0) {
  kitem15 = 1
  phrasedeclaimforge = `Tu as forgé l'arme Lance-Pierre <:lancepierre15:597152778363731987> [ID:15]\nRareté: Rare`
}
if(umathrandomaa1 === 1 && uitem4 > 0 && uitem5 > 0 && uitem7 > 0 && uitem11 > 0 && uitem15 > 0 && uitem18 === 0) {
  kitem18 = 1
  phrasedeclaimforge = `Tu as forgé l'arme Lance-Flamme <:lanceflammeelonmusk18:597399327496863774> [ID:18]\nRareté: Rare`
}
if(umathrandomaa1 === 1 && uitem4 > 0 && uitem5 > 0 && uitem7 > 0 && uitem11 > 0 && uitem15 > 0 && uitem18 > 0 && uitem19 === 0) {
  kitem19 = 1
  phrasedeclaimforge = `Tu as forgé l'arme Hache de combat en plastique <:hachecombat19:597365129918545920> [ID:19]\nRareté: Epique`
}
if(umathrandomaa1 === 1 && uitem4 > 0 && uitem5 > 0 && uitem7 > 0 && uitem11 > 0 && uitem15 > 0 && uitem18 > 0 && uitem19 > 0 && uitem25 === 0) {
  kitem25 = 1
  phrasedeclaimforge = `Tu as forgé l'arme Scissors Blades <:scissorblade25:597399474742099989> [ID:25]\nRareté: Epique`
}
if(umathrandomaa1 === 1 && uitem4 > 0 && uitem5 > 0 && uitem7 > 0 && uitem11 > 0 && uitem15 > 0 && uitem18 > 0 && uitem19 > 0 && uitem25 > 0 && uitem30 === 0) {
  kitem30 = 1
  phrasedeclaimforge = `Tu as forgé l'arme Excalibur Dorée <:SwordExcaliburSAO30:597399625284059146> [ID:30]\nRareté: Epique`
}
if(umathrandomaa1 === 1 && uitem4 > 0 && uitem5 > 0 && uitem7 > 0 && uitem11 > 0 && uitem15 > 0 && uitem18 > 0 && uitem19 > 0 && uitem25 > 0  && uitem30 > 0 && uitem44 === 0) {
  kitem44 = 1
  phrasedeclaimforge = `Tu as forgé l'arme Epée de Gryffondor <:epeedegryffondor:777837809671208960> [ID:44]\nRareté: Epique`
}
if(umathrandomaa1 === 1 && uitem4 > 0 && uitem5 > 0 && uitem7 > 0 && uitem11 > 0 && uitem15 > 0 && uitem18 > 0 && uitem19 > 0 && uitem25 > 0  && uitem30 > 0 && uitem44 > 0 && uitem38 === 0) {
  kitem38 = 1
  phrasedeclaimforge = `Tu as forgé l'arme Equipement Tridimensionnel <:EQP38:597752229323210771> [ID:38]\nRareté: Légendaire`
}
if(umathrandomaa1 === 1 && uitem4 > 0 && uitem5 > 0 && uitem7 > 0 && uitem11 > 0 && uitem15 > 0 && uitem18 > 0 && uitem19 > 0 && uitem25 > 0  && uitem30 > 0 && uitem38 > 0 && uitem42 === 0 && uitem44 > 0) {
  kitem42 = 1
  phrasedeclaimforge = `Tu as forgé l'arme Pistolet laser <:pistoletlaser42:725792300642599063> [ID:42]\nRareté: Légendaire`
}
if(umathrandomaa1 === 1 && uitem4 > 0 && uitem5 > 0 && uitem7 > 0 && uitem11 > 0 && uitem15 > 0 && uitem18 > 0 && uitem19 > 0 && uitem25 > 0  && uitem30 > 0 && uitem38 > 0 && uitem42 > 0 && uitem43 === 0 && uitem44 > 0) {
  kitem43 = 1
  phrasedeclaimforge = `Tu as forgé l'arme Baguette de sureau <:baguettesureau43:731095435170545679> [ID:43]\nRareté: Légendaire`
}


if(umathrandomaa1 === 2 && uitem5 === 0) {
  kitem5 = 1
  phrasedeclaimforge = `Tu as forgé l'arme Gants de boxe <:gants5:596994206732386305> [ID:5]\nRareté: Commune`
}
if(umathrandomaa1 === 2 && uitem5 > 0 && uitem4 === 0) {
 kitem4 = 1
 phrasedeclaimforge = `Tu as forgé l'arme Epée en bois <:Epee4:596994186771693568> [ID:4]\nRareté: Commune`
}
if(umathrandomaa1 === 2 && uitem4 > 0 && uitem5 > 0 && uitem7 === 0) {
 kitem7 = 1
 phrasedeclaimforge = `Tu as forgé l'arme Cuter <:cuter7:597399140561059841> [ID:7]\nRareté: Commune`
}
if(umathrandomaa1 === 2 && uitem4 > 0 && uitem5 > 0 && uitem7 > 0 && uitem11 === 0) {
 kitem11 = 1
 phrasedeclaimforge = `Tu as forgé l'arme Grenade <:grenade11:597399227051802664> [ID:11]\nRareté: Rare`
}
if(umathrandomaa1 === 2 && uitem4 > 0 && uitem5 > 0 && uitem7 > 0 && uitem11 > 0 && uitem15 === 0) {
 kitem15 = 1
 phrasedeclaimforge = `Tu as forgé l'arme Lance-Pierre <:lancepierre15:597152778363731987> [ID:15]\nRareté: Rare`
}
if(umathrandomaa1 === 2 && uitem4 > 0 && uitem5 > 0 && uitem7 > 0 && uitem11 > 0 && uitem15 > 0 && uitem18 === 0) {
 kitem18 = 1
 phrasedeclaimforge = `Tu as forgé l'arme Lance-Flamme <:lanceflammeelonmusk18:597399327496863774> [ID:18]\nRareté: Rare`
}
if(umathrandomaa1 === 2 && uitem4 > 0 && uitem5 > 0 && uitem7 > 0 && uitem11 > 0 && uitem15 > 0 && uitem18 > 0 && uitem19 === 0) {
 kitem19 = 1
 phrasedeclaimforge = `Tu as forgé l'arme Hache de combat en plastique <:hachecombat19:597365129918545920> [ID:19]\nRareté: Epique`
}
if(umathrandomaa1 === 2 && uitem4 > 0 && uitem5 > 0 && uitem7 > 0 && uitem11 > 0 && uitem15 > 0 && uitem18 > 0 && uitem19 > 0 && uitem25 === 0) {
 kitem25 = 1
 phrasedeclaimforge = `Tu as forgé l'arme Scissors Blades <:scissorblade25:597399474742099989> [ID:25]\nRareté: Epique`
}
if(umathrandomaa1 === 2 && uitem4 > 0 && uitem5 > 0 && uitem7 > 0 && uitem11 > 0 && uitem15 > 0 && uitem18 > 0 && uitem19 > 0 && uitem25 > 0 && uitem30 === 0) {
 kitem30 = 1
 phrasedeclaimforge = `Tu as forgé l'arme Excalibur Dorée <:SwordExcaliburSAO30:597399625284059146> [ID:30]\nRareté: Epique`
}
if(umathrandomaa1 === 2 && uitem4 > 0 && uitem5 > 0 && uitem7 > 0 && uitem11 > 0 && uitem15 > 0 && uitem18 > 0 && uitem19 > 0 && uitem25 > 0  && uitem30 > 0 && uitem44 === 0) {
  kitem44 = 1
  phrasedeclaimforge = `Tu as forgé l'arme Epée de Gryffondor <:epeedegryffondor:777837809671208960> [ID:44]\nRareté: Epique`
}
if(umathrandomaa1 === 2 && uitem4 > 0 && uitem5 > 0 && uitem7 > 0 && uitem11 > 0 && uitem15 > 0 && uitem18 > 0 && uitem19 > 0 && uitem25 > 0  && uitem30 > 0 && uitem44 > 0 && uitem38 === 0) {
  kitem38 = 1
  phrasedeclaimforge = `Tu as forgé l'arme Equipement Tridimensionnel <:EQP38:597752229323210771> [ID:38]\nRareté: Légendaire`
}
if(umathrandomaa1 === 2 && uitem4 > 0 && uitem5 > 0 && uitem7 > 0 && uitem11 > 0 && uitem15 > 0 && uitem18 > 0 && uitem19 > 0 && uitem25 > 0  && uitem30 > 0 && uitem38 > 0 && uitem42 === 0 && uitem44 > 0) {
  kitem42 = 1
  phrasedeclaimforge = `Tu as forgé l'arme Pistolet laser <:pistoletlaser42:725792300642599063> [ID:42]\nRareté: Légendaire`
}
if(umathrandomaa1 === 2 && uitem4 > 0 && uitem5 > 0 && uitem7 > 0 && uitem11 > 0 && uitem15 > 0 && uitem18 > 0 && uitem19 > 0 && uitem25 > 0  && uitem30 > 0 && uitem38 > 0 && uitem42 > 0 && uitem43 === 0 && uitem44 > 0) {
  kitem43 = 1
  phrasedeclaimforge = `Tu as forgé l'arme Baguette de sureau <:baguettesureau43:731095435170545679> [ID:43]\nRareté: Légendaire`
}

if(umathrandomaa1 === 3 && uitem7 === 0) {
  kitem7 = 1
  phrasedeclaimforge = `Tu as forgé l'arme Cuter <:cuter7:597399140561059841> [ID:7]\nRareté: Commune`
}
if(umathrandomaa1 === 3 && uitem7 > 0 && uitem5 === 0) {
 kitem5 = 1
 phrasedeclaimforge = `Tu as forgé l'arme Gants de boxe <:gants5:596994206732386305> [ID:5]\nRareté: Commune`
}
if(umathrandomaa1 === 3 && uitem7 > 0 && uitem5 > 0 && uitem4 === 0) {
 kitem4 = 1
 phrasedeclaimforge = `Tu as forgé l'arme Epée en bois <:Epee4:596994186771693568 > [ID:4]\nRareté: Commune`
}
if(umathrandomaa1 === 3 && uitem4 > 0 && uitem5 > 0 && uitem7 > 0 && uitem11 === 0) {
 kitem11 = 1
 phrasedeclaimforge = `Tu as forgé l'arme Grenade <:grenade11:597399227051802664> [ID:11]\nRareté: Rare`
}
if(umathrandomaa1 === 3 && uitem4 > 0 && uitem5 > 0 && uitem7 > 0 && uitem11 > 0 && uitem15 === 0) {
 kitem15 = 1
 phrasedeclaimforge = `Tu as forgé l'arme Lance-Pierre <:lancepierre15:597152778363731987> [ID:15]\nRareté: Rare`
}
if(umathrandomaa1 === 3 && uitem4 > 0 && uitem5 > 0 && uitem7 > 0 && uitem11 > 0 && uitem15 > 0 && uitem18 === 0) {
 kitem18 = 1
 phrasedeclaimforge = `Tu as forgé l'arme Lance-Flamme <:lanceflammeelonmusk18:597399327496863774> [ID:18]\nRareté: Rare`
}
if(umathrandomaa1 === 3 && uitem4 > 0 && uitem5 > 0 && uitem7 > 0 && uitem11 > 0 && uitem15 > 0 && uitem18 > 0 && uitem19 === 0) {
 kitem19 = 1
 phrasedeclaimforge = `Tu as forgé l'arme Hache de combat en plastique <:hachecombat19:597365129918545920> [ID:19]\nRareté: Epique`
}
if(umathrandomaa1 === 3 && uitem4 > 0 && uitem5 > 0 && uitem7 > 0 && uitem11 > 0 && uitem15 > 0 && uitem18 > 0 && uitem19 > 0 && uitem25 === 0) {
 kitem25 = 1
 phrasedeclaimforge = `Tu as forgé l'arme Scissors Blades <:scissorblade25:597399474742099989> [ID:25]\nRareté: Epique`
}
if(umathrandomaa1 === 3 && uitem4 > 0 && uitem5 > 0 && uitem7 > 0 && uitem11 > 0 && uitem15 > 0 && uitem18 > 0 && uitem19 > 0 && uitem25 > 0 && uitem30 === 0) {
 kitem30 = 1
 phrasedeclaimforge = `Tu as forgé l'arme Excalibur Dorée <:SwordExcaliburSAO30:597399625284059146> [ID:30]\nRareté: Epique`
}
if(umathrandomaa1 === 3 && uitem4 > 0 && uitem5 > 0 && uitem7 > 0 && uitem11 > 0 && uitem15 > 0 && uitem18 > 0 && uitem19 > 0 && uitem25 > 0  && uitem30 > 0 && uitem44 === 0) {
  kitem44 = 1
  phrasedeclaimforge = `Tu as forgé l'arme Epée de Gryffondor <:epeedegryffondor:777837809671208960> [ID:44]\nRareté: Epique`
}
if(umathrandomaa1 === 3 && uitem4 > 0 && uitem5 > 0 && uitem7 > 0 && uitem11 > 0 && uitem15 > 0 && uitem18 > 0 && uitem19 > 0 && uitem25 > 0  && uitem30 > 0 && uitem44 > 0 && uitem38 === 0) {
  kitem38 = 1
  phrasedeclaimforge = `Tu as forgé l'arme Equipement Tridimensionnel <:EQP38:597752229323210771> [ID:38]\nRareté: Légendaire`
}
if(umathrandomaa1 === 3 && uitem4 > 0 && uitem5 > 0 && uitem7 > 0 && uitem11 > 0 && uitem15 > 0 && uitem18 > 0 && uitem19 > 0 && uitem25 > 0  && uitem30 > 0 && uitem38 > 0 && uitem42 === 0 && uitem44 > 0) {
  kitem42 = 1
  phrasedeclaimforge = `Tu as forgé l'arme Pistolet laser <:pistoletlaser42:725792300642599063> [ID:42]\nRareté: Légendaire`
}
if(umathrandomaa1 === 3 && uitem4 > 0 && uitem5 > 0 && uitem7 > 0 && uitem11 > 0 && uitem15 > 0 && uitem18 > 0 && uitem19 > 0 && uitem25 > 0  && uitem30 > 0 && uitem38 > 0 && uitem42 > 0 && uitem43 === 0 && uitem44 > 0) {
  kitem43 = 1
  phrasedeclaimforge = `Tu as forgé l'arme Baguette de sureau <:baguettesureau43:731095435170545679> [ID:43]\nRareté: Légendaire`
}
let kshining = require("./kshining.json")




if(!kshining[message.author.id]){
  kshining[message.author.id] = {
    kshining: 0
  };

fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
  if (err) console.log(err)
});
}
let ukshining = kshining[message.author.id].kshining
if(message.content === "!forge create" && uclassen > 0 && uforge > 1) {
   if(countarmecreate === 13 && uftemps === 0) message.channel.send("Vous avez déjà toutes les armes forgeables.")
   if(ucristal < 5 && uftemps === 0 && countarmecreate < 12) message.channel.send("Vous n'avez pas assez de cristaux.")
   if(uftemps > 0) message.channel.send("Vous êtes déjà en train de produire quelque chose.")
   if(countarmecreate < 12, ucristal >= 5 && uftemps === 0) {

    cristal[message.author.id] = {
      cristal: ucristal - 5
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
      kshining: 2
    }
 fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
   if (err) console.log(err)
 });
 fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
  if (err) console.log(err)
});
   fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
  if (err) console.log(err)
   });
   message.channel.send(`La production d'une arme aléatoire a bien commencée, elle sera disponible dans 6 heures\nPour la récupérer, faites ${trucbizarre}!forge claim${trucbizarre}`)
   }
}


if(uforge > 1) {
   aalname = `\n**Forger une arme aléatoire** ${trucbizarre}(!forge create)${trucbizarre}`
   aalcost = `\nCoût: 5 Cristaux ${cristalemote}\nTemps de production: 6 heures`
}
let tiermax = ""
if(uforge === 3) {
  tiermax = ":star:"
}
if(uforge === 4) {
  tiermax = ":star: ou :star::star:"
}
if(uforge === 5) {
  tiermax = ":star: ou :star::star: ou :star::star::star:"
}

if(message.content === "!forge cristal" && uclassen > 0 && uforge > 0) {
  if(uRxCoins < 3500 && uftemps === 0) message.channel.send("Vous n'avez pas assez de RxCoins.")
  if(uftemps > 0 && uRxCoins >= 3500) message.channel.send("Vous êtes déjà en train de produire quelque chose.")
  if(uftemps > 0 && uRxCoins < 3500) message.channel.send("Vous êtes déjà en train de produire quelque chose")
  if(uRxCoins >= 3500 && uftemps === 0) {

   RxCoins[message.author.id] = {
     RxCoins: uRxCoins - 3500
   };
   ftemps[message.author.id] = {
     ftemps: Date.now() + 1800000
   };
   kshining[message.author.id] = {
    kshining: 1
  }
       fs.writeFile("./RxCoins.json", JSON.stringify(RxCoins), (err) => {
     if (err) console.log(err)
      });
      fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
       if (err) console.log(err)
        });
      fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
     if (err) console.log(err)
    });
       message.channel.send(`La production d'un cristal a bien commencée, il sera disponible dans 30 minutes\nPour le récupérer, faites ${trucbizarre}!forge claim${trucbizarre}`)
    }
}

let messagedeproduction = ""
let STKTimeObj = ms(uftemps - Date.now())
if(ukshining === 1 && uftemps > Date.now()) {
  messagedeproduction = `Vous êtes en train de produire un cristal\nTemps restant: ${STKTimeObj.minutes} minutes`
}
if(ukshining === 1 && uftemps <= Date.now()) {
  messagedeproduction = `Vous pouvez récuperer votre production en faisant ${trucbizarre}!forge claim${trucbizarre}`
}
if(ukshining === 2 && uftemps <= Date.now()) {
  messagedeproduction = `Vous pouvez récuperer votre production en faisant ${trucbizarre}!forge claim${trucbizarre}`
}
if(ukshining === 2 && uftemps > Date.now()) {
  messagedeproduction = `Vous êtes en train de produire une arme aléatoire\nTemps restant: ${STKTimeObj.hours} heures et ${STKTimeObj.minutes} minutes`
}
if(ukshining > 3 && uftemps > Date.now()) {
  messagedeproduction = `Vous êtes en train d'améliorer une arme\nTemps restant: ${STKTimeObj.hours} heures et ${STKTimeObj.minutes} minutes`
}
if(ukshining > 3 && uftemps <= Date.now()) {
  messagedeproduction = `Vous pouvez récuperer votre production en faisant ${trucbizarre}!forge claim${trucbizarre}`
}
let kaddcristal = 0
if(ukshining === 1) {
  phrasedeclaimforge = `Vous avez produit 1 Cristal ${cristalemote}`
  kaddcristal = 1
}
let kaddup1 = 0
let kaddup2 = 0
let kaddup3 = 0
let kaddup4 = 0
let kaddup5 = 0
let kaddup6 = 0
let kaddup7 = 0
let kaddup8 = 0
let kaddup9 = 0
let kaddup10 = 0
let kaddup11 = 0
let kaddup12 = 0
let kaddup13 = 0
let kaddup14 = 0
let kaddup15 = 0
let kaddup16 = 0
let kaddup17 = 0
let kaddup18 = 0
let kaddup19 = 0
let kaddup20 = 0
let kaddup21 = 0
let kaddup22 = 0
let kaddup23 = 0
let kaddup24 = 0
let kaddup25 = 0
let kaddup26 = 0
let kaddup27 = 0
let kaddup28 = 0
let kaddup29 = 0
let kaddup30 = 0
let kaddup31 = 0
let kaddup32 = 0
let kaddup33 = 0
let kaddup34 = 0
let kaddup35 = 0
let kaddup36 = 0
let kaddup37 = 0
let kaddup38 = 0
let kaddup39 = 0
let kaddup40 = 0
let kaddup41 = 0
let kaddup42 = 0
let kaddup43 = 0
let kaddup44 = 0
if(uforge > 2) {
  upname = `\n**Améliorer une arme ${tiermax}** ${trucbizarre}(!forge up [ID de l'arme])${trucbizarre}\nPour consulter les coûts et les temps de production, faites ${trucbizarre}!forge up info${trucbizarre} `
}
if(message.content === "!forge up 1" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem1 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem1 === 1 && uarmeb1+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem1 === 1 && uarmeb1+2 < uforge && ucristal < Math.pow(2, uarmeb1)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem1=== 1 && uarmeb1+2 < uforge && ucristal >= Math.pow(2, uarmeb1)) {
    cristal[message.author.id] = {
      cristal: ucristal - Math.pow(2, uarmeb1)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 11
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(ukshining === 11) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item1name} ${item1emote} (${uarmeb1}:star: -> ${uarmeb1+1}:star:)`
  kaddup1 = 1
}
if(ukshining === 12) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item2name} ${item2emote} (${uarmeb2}:star: -> ${uarmeb2+1}:star:)`
  kaddup2 = 1
}
if(ukshining === 13) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item3name} ${item3emote} (${uarmeb3}:star: -> ${uarmeb3+1}:star:)`
  kaddup3 = 1
}
if(ukshining === 14) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item4name} ${item4emote} (${uarmeb4}:star: -> ${uarmeb4+1}:star:)`
  kaddup4 = 1
}
if(ukshining === 15) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item5name} ${item5emote} (${uarmeb5}:star: -> ${uarmeb5+1}:star:)`
  kaddup5 = 1
}
if(ukshining === 16) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item6name} ${item6emote} (${uarmeb6}:star: -> ${uarmeb6+1}:star:)`
  kaddup6 = 1
}
if(ukshining === 17) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item7name} ${item7emote} (${uarmeb7}:star: -> ${uarmeb7+1}:star:)`
  kaddup7 = 1
}
if(ukshining === 18) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item8name} ${item8emote} (${uarmeb8}:star: -> ${uarmeb8+1}:star:)`
  kaddup8 = 1
}
if(ukshining === 19) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item9name} ${item9emote} (${uarmeb9}:star: -> ${uarmeb9+1}:star:)`
  kaddup9 = 1
}
if(ukshining === 20) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item10name} ${item10emote} (${uarmeb10}:star: -> ${uarmeb10+1}:star:)`
  kaddup10 = 1
}
if(ukshining === 21) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item11name} ${item11emote} (${uarmeb11}:star: -> ${uarmeb11+1}:star:)`
  kaddup11 = 1
}
if(ukshining === 22) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item12name} ${item12emote} (${uarmeb12}:star: -> ${uarmeb12+1}:star:)`
  kaddup12 = 1
}
if(ukshining === 23) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item13name} ${item13emote} (${uarmeb13}:star: -> ${uarmeb13+1}:star:)`
  kaddup13 = 1
}
if(ukshining === 24) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item14name} ${item14emote} (${uarmeb14}:star: -> ${uarmeb14+1}:star:)`
  kaddup14 = 1
}
if(ukshining === 25) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item15name} ${item15emote} (${uarmeb15}:star: -> ${uarmeb15+1}:star:)`
  kaddup15 = 1
}
if(ukshining === 26) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item16name} ${item16emote} (${uarmeb16}:star: -> ${uarmeb16+1}:star:)`
  kaddup16 = 1
}
if(ukshining === 27) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item17name} ${item17emote} (${uarmeb17}:star: -> ${uarmeb17+1}:star:)`
  kaddup17 = 1
}
if(ukshining === 28) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item18name} ${item18emote} (${uarmeb18}:star: -> ${uarmeb18+1}:star:)`
  kaddup18 = 1
}
if(ukshining === 29) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item19name} ${item19emote} (${uarmeb19}:star: -> ${uarmeb19+1}:star:)`
  kaddup19 = 1
}
if(ukshining === 30) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item20name} ${item20emote} (${uarmeb20}:star: -> ${uarmeb20+1}:star:)`
  kaddup20 = 1
}
if(ukshining === 31) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item21name} ${item21emote} (${uarmeb21}:star: -> ${uarmeb21+1}:star:)`
  kaddup21 = 1
}
if(ukshining === 32) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item22name} ${item22emote} (${uarmeb22}:star: -> ${uarmeb22+1}:star:)`
  kaddup22 = 1
}
if(ukshining === 33) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item23name} ${item23emote} (${uarmeb23}:star: -> ${uarmeb23+1}:star:)`
  kaddup23 = 1
}
if(ukshining === 34) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item24name} ${item24emote} (${uarmeb24}:star: -> ${uarmeb24+1}:star:)`
  kaddup24 = 1
}
if(ukshining === 35) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item25name} ${item25emote} (${uarmeb25}:star: -> ${uarmeb25+1}:star:)`
  kaddup25 = 1

}
if(ukshining === 36) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item26name} ${item26emote} (${uarmeb26}:star: -> ${uarmeb26+1}:star:)`
  kaddup26 = 1
}
if(ukshining === 37) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item27name} ${item27emote} (${uarmeb27}:star: -> ${uarmeb27+1}:star:)`
  kaddup27 = 1
}
if(ukshining === 38) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item28name} ${item28emote} (${uarmeb28}:star: -> ${uarmeb28+1}:star:)`
  kaddup28 = 1
}
if(ukshining === 39) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item29name} ${item29emote} (${uarmeb29}:star: -> ${uarmeb29+1}:star:)`
  kaddup29 = 1
}
if(ukshining === 40) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item30name} ${item30emote} (${uarmeb30}:star: -> ${uarmeb30+1}:star:)`
  kaddup30 = 1
}
if(ukshining === 41) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item31name} ${item31emote} (${uarmeb31}:star: -> ${uarmeb31+1}:star:)`
  kaddup31 = 1
}
if(ukshining === 42) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item32name} ${item32emote} (${uarmeb32}:star: -> ${uarmeb32+1}:star:)`
  kaddup32 = 1
}
if(ukshining === 43) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item33name} ${item33emote} (${uarmeb33}:star: -> ${uarmeb33+1}:star:)`
  kaddup33 = 1
}
if(ukshining === 44) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item34name} ${item34emote} (${uarmeb34}:star: -> ${uarmeb34+1}:star:)`
  kaddup34 = 1
}
if(ukshining === 45) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item35name} ${item35emote} (${uarmeb35}:star: -> ${uarmeb35+1}:star:)`
  kaddup35 = 1
}
if(ukshining === 46) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item36name} ${item36emote} (${uarmeb36}:star: -> ${uarmeb36+1}:star:)`
  kaddup36 = 1
}
if(ukshining === 47) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item37name} ${item37emote} (${uarmeb37}:star: -> ${uarmeb37+1}:star:)`
  kaddup37 = 1
}
if(ukshining === 48) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item38name} ${item38emote} (${uarmeb38}:star: -> ${uarmeb38+1}:star:)`
  kaddup38 = 1
}
if(ukshining === 49) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item39name} ${item39emote} (${uarmeb39}:star: -> ${uarmeb39+1}:star:)`
  kaddup39 = 1
}
if(ukshining === 50) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item40name} ${item40emote} (${uarmeb40}:star: -> ${uarmeb40+1}:star:)`
  kaddup40 = 1
}
if(ukshining === 51) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item41name} ${item41emote} (${uarmeb41}:star: -> ${uarmeb41+1}:star:)`
  kaddup41 = 1
}
if(ukshining === 52) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item42name} ${item42emote} (${uarmeb42}:star: -> ${uarmeb42+1}:star:)`
  kaddup42 = 1
}
if(ukshining === 53) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item43name} ${item43emote} (${uarmeb43}:star: -> ${uarmeb43+1}:star:)`
  kaddup43 = 1
}
if(ukshining === 54) {
  phrasedeclaimforge = `Vous avez bien améliorée votre arme ${item44name} ${item44emote} (${uarmeb44}:star: -> ${uarmeb44+1}:star:)`
  kaddup44 = 1
}


if(message.content === "!forge up 2" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem2 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem2 === 1 && uarmeb2+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem2 === 1 && uarmeb2+2 < uforge && ucristal < Math.pow(2, uarmeb2)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem2=== 1 && uarmeb2+2 < uforge && ucristal >= Math.pow(2, uarmeb2)) {
    cristal[message.author.id] = {
      cristal: ucristal - Math.pow(2, uarmeb2)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 12
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}

if(message.content === "!forge up 3" && uclassen > 0 && uforge > 2 && uftemps === 0)  {
  if(uitem3 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem3 === 1 && uarmeb3+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem3 === 1 && uarmeb3+2 < uforge && ucristal < Math.pow(2, uarmeb3)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem3=== 1 && uarmeb3+2 < uforge && ucristal >= Math.pow(2, uarmeb3)) {
    cristal[message.author.id] = {
      cristal: ucristal - Math.pow(2, uarmeb3)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 13
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 4" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem4 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem4 === 1 && uarmeb4+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem4 === 1 && uarmeb4+2 < uforge && ucristal < Math.pow(2, uarmeb4)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem4=== 1 && uarmeb4+2 < uforge && ucristal >= Math.pow(2, uarmeb4)) {
    cristal[message.author.id] = {
      cristal: ucristal - Math.pow(2, uarmeb4)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 14
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 5" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem5 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem5 === 1 && uarmeb5+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem5 === 1 && uarmeb5+2 < uforge && ucristal < Math.pow(2, uarmeb5)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem5=== 1 && uarmeb5+2 < uforge && ucristal >= Math.pow(2, uarmeb5)) {
    cristal[message.author.id] = {
      cristal: ucristal - Math.pow(2, uarmeb5)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 15
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 6" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem6 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem6 === 1 && uarmeb6+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem6 === 1 && uarmeb6+2 < uforge && ucristal < Math.pow(2, uarmeb6)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem6 === 1 && uarmeb6+2 < uforge && ucristal >= Math.pow(2, uarmeb6)) {
    cristal[message.author.id] = {
      cristal: ucristal - Math.pow(2, uarmeb6)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 16
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 7" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem7 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem7 === 1 && uarmeb7+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem7 === 1 && uarmeb7+2 < uforge && ucristal < Math.pow(2, uarmeb7)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem7=== 1 && uarmeb7+2 < uforge && ucristal >= Math.pow(2, uarmeb7)) {
    cristal[message.author.id] = {
      cristal: ucristal - Math.pow(2, uarmeb7)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 17
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 8" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem8 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem8 === 1 && uarmeb8+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem8 === 1 && uarmeb8+2 < uforge && ucristal < Math.pow(2, uarmeb8)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem8=== 1 && uarmeb8+2 < uforge && ucristal >= Math.pow(2, uarmeb8)) {
    cristal[message.author.id] = {
      cristal: ucristal - Math.pow(2, uarmeb8)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 18
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 9" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem9 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem9 === 1 && uarmeb9+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem9 === 1 && uarmeb9+2 < uforge && ucristal < 2*Math.pow(2, uarmeb9)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem9=== 1 && uarmeb9+2 < uforge && ucristal >= 2*Math.pow(2, uarmeb9)) {
    cristal[message.author.id] = {
      cristal: ucristal - 2*Math.pow(2, uarmeb9)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 19
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 10" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem10 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem10 === 1 && uarmeb10+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem10 === 1 && uarmeb10+2 < uforge && ucristal < 2*Math.pow(2, uarmeb10)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem10=== 1 && uarmeb10+2 < uforge && ucristal >= 2*Math.pow(2, uarmeb10)) {
    cristal[message.author.id] = {
      cristal: ucristal - 2*Math.pow(2, uarmeb10)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 20
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 11" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem11 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem11 === 1 && uarmeb11+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem11 === 1 && uarmeb11+2 < uforge && ucristal < 2*Math.pow(2, uarmeb11)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem11=== 1 && uarmeb11+2 < uforge && ucristal >= 2*Math.pow(2, uarmeb11)) {
    cristal[message.author.id] = {
      cristal: ucristal - 2*Math.pow(2, uarmeb11)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 21
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 12" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem12 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem12 === 1 && uarmeb12+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem12 === 1 && uarmeb12+2 < uforge && ucristal < 2*Math.pow(2, uarmeb12)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem12=== 1 && uarmeb12+2 < uforge && ucristal >= 2*Math.pow(2, uarmeb12)) {
    cristal[message.author.id] = {
      cristal: ucristal - 2*Math.pow(2, uarmeb12)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 22
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 13" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem13 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem13 === 1 && uarmeb13+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem13 === 1 && uarmeb13+2 < uforge && ucristal < 2*Math.pow(2, uarmeb13)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem13=== 1 && uarmeb13+2 < uforge && ucristal >= 2*Math.pow(2, uarmeb13)) {
    cristal[message.author.id] = {
      cristal: ucristal - 2*Math.pow(2, uarmeb13)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 23
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}

if(message.content === "!forge up 14" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem14 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem14 === 1 && uarmeb14+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem14 === 1 && uarmeb14+2 < uforge && ucristal < 2*Math.pow(2, uarmeb14)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem14=== 1 && uarmeb14+2 < uforge && ucristal >= 2*Math.pow(2, uarmeb14)) {
    cristal[message.author.id] = {
      cristal: ucristal - 2*Math.pow(2, uarmeb14)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 24
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 15" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem15 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem15 === 1 && uarmeb15+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem15 === 1 && uarmeb15+2 < uforge && ucristal < 2*Math.pow(2, uarmeb15)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem15=== 1 && uarmeb15+2 < uforge && ucristal >= 2*Math.pow(2, uarmeb15)) {
    cristal[message.author.id] = {
      cristal: ucristal - 2*Math.pow(2, uarmeb15)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 25
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 16" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem16 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem16 === 1 && uarmeb16+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem16 === 1 && uarmeb16+2 < uforge && ucristal < 2*Math.pow(2, uarmeb16)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem16=== 1 && uarmeb16+2 < uforge && ucristal >= 2*Math.pow(2, uarmeb16)) {
    cristal[message.author.id] = {
      cristal: ucristal - 2*Math.pow(2, uarmeb16)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 26
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 17" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem17 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem17 === 1 && uarmeb17+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem17 === 1 && uarmeb17+2 < uforge && ucristal < 2*Math.pow(2, uarmeb17)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem17=== 1 && uarmeb17+2 < uforge && ucristal >= 2*Math.pow(2, uarmeb17)) {
    cristal[message.author.id] = {
      cristal: ucristal - 2*Math.pow(2, uarmeb17)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 27
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 18" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem18 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem18 === 1 && uarmeb18+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem18 === 1 && uarmeb18+2 < uforge && ucristal < 2*Math.pow(2, uarmeb18)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem18=== 1 && uarmeb18+2 < uforge && ucristal >= 2*Math.pow(2, uarmeb18)) {
    cristal[message.author.id] = {
      cristal: ucristal - 2*Math.pow(2, uarmeb18)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 28
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 19" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem19 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem19 === 1 && uarmeb19+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem19 === 1 && uarmeb19+2 < uforge && ucristal < 4*Math.pow(2, uarmeb19)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem19=== 1 && uarmeb19+2 < uforge && ucristal >= 4*Math.pow(2, uarmeb19)) {
    cristal[message.author.id] = {
      cristal: ucristal - 4*Math.pow(2, uarmeb19)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 29
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 20" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem20 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem20 === 1 && uarmeb20+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem20 === 1 && uarmeb20+2 < uforge && ucristal < 4*Math.pow(2, uarmeb20)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem20=== 1 && uarmeb20+2 < uforge && ucristal >= 4*Math.pow(2, uarmeb20)) {
    cristal[message.author.id] = {
      cristal: ucristal - 4*Math.pow(2, uarmeb20)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 30
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 21" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem21 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem21 === 1 && uarmeb21+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem21 === 1 && uarmeb21+2 < uforge && ucristal < 4*Math.pow(2, uarmeb21)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem21=== 1 && uarmeb21+2 < uforge && ucristal >= 4*Math.pow(2, uarmeb21)) {
    cristal[message.author.id] = {
      cristal: ucristal - 4*Math.pow(2, uarmeb21)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 31
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 22" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem22 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem22 === 1 && uarmeb22+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem22 === 1 && uarmeb22+2 < uforge && ucristal < 4*Math.pow(2, uarmeb22)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem22=== 1 && uarmeb22+2 < uforge && ucristal >= 4*Math.pow(2, uarmeb22)) {
    cristal[message.author.id] = {
      cristal: ucristal - 4*Math.pow(2, uarmeb22)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 32
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 23" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem23 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem23 === 1 && uarmeb23+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem23 === 1 && uarmeb23+2 < uforge && ucristal < 4*Math.pow(2, uarmeb23)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem23=== 1 && uarmeb23+2 < uforge && ucristal >= 4*Math.pow(2, uarmeb23)) {
    cristal[message.author.id] = {
      cristal: ucristal - 4*Math.pow(2, uarmeb23)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 33
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 24" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem24 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem24 === 1 && uarmeb24+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem24 === 1 && uarmeb24+2 < uforge && ucristal < 4*Math.pow(2, uarmeb24)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem24=== 1 && uarmeb24+2 < uforge && ucristal >= 4*Math.pow(2, uarmeb24)) {
    cristal[message.author.id] = {
      cristal: ucristal - 4*Math.pow(2, uarmeb24)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 34
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 25" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem25 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem25 === 1 && uarmeb25+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem25 === 1 && uarmeb25+2 < uforge && ucristal < 4*Math.pow(2, uarmeb25)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem25=== 1 && uarmeb25+2 < uforge && ucristal >= 4*Math.pow(2, uarmeb25)) {
    cristal[message.author.id] = {
      cristal: ucristal - 4*Math.pow(2, uarmeb25)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 35
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 26" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem26 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem26 === 1 && uarmeb26+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem26 === 1 && uarmeb26+2 < uforge && ucristal < 4*Math.pow(2, uarmeb26)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem26=== 1 && uarmeb26+2 < uforge && ucristal >= 4*Math.pow(2, uarmeb26)) {
    cristal[message.author.id] = {
      cristal: ucristal - 4*Math.pow(2, uarmeb26)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 36
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 27" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem27 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem27 === 1 && uarmeb27+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem27 === 1 && uarmeb27+2 < uforge && ucristal < 4*Math.pow(2, uarmeb27)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem27=== 1 && uarmeb27+2 < uforge && ucristal >= 4*Math.pow(2, uarmeb27)) {
    cristal[message.author.id] = {
      cristal: ucristal - 4*Math.pow(2, uarmeb27)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 37
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 28" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem28 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem28 === 1 && uarmeb28+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem28 === 1 && uarmeb28+2 < uforge && ucristal < 4*Math.pow(2, uarmeb28)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem28=== 1 && uarmeb28+2 < uforge && ucristal >= 4*Math.pow(2, uarmeb28)) {
    cristal[message.author.id] = {
      cristal: ucristal - 4*Math.pow(2, uarmeb28)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 38
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 29" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem29 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem29 === 1 && uarmeb29+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem29 === 1 && uarmeb29+2 < uforge && ucristal < 4*Math.pow(2, uarmeb29)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem29=== 1 && uarmeb29+2 < uforge && ucristal >= 4*Math.pow(2, uarmeb29)) {
    cristal[message.author.id] = {
      cristal: ucristal - 4*Math.pow(2, uarmeb29)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 39
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 30" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem30 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem30 === 1 && uarmeb30+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem30 === 1 && uarmeb30+2 < uforge && ucristal < 4*Math.pow(2, uarmeb30))message.channel.send("Tu n'as pas assez de ressources")
  if(uitem30=== 1 && uarmeb30+2 < uforge && ucristal >= 4*Math.pow(2, uarmeb30)) {
    cristal[message.author.id] = {
      cristal: ucristal - 4*Math.pow(2, uarmeb30)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 40
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 31" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem31 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem31 === 1 && uarmeb31+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem31 === 1 && uarmeb31+2 < uforge && ucristal < 4*Math.pow(2, uarmeb31)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem31=== 1 && uarmeb31+2 < uforge && ucristal >= 4*Math.pow(2, uarmeb31)) {
    cristal[message.author.id] = {
      cristal: ucristal - 4*Math.pow(2, uarmeb31)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 41
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 32" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem32 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem32 === 1 && uarmeb32+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem32 === 1 && uarmeb32+2 < uforge && ucristal < 4*Math.pow(2, uarmeb32)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem32=== 1 && uarmeb32+2 < uforge && ucristal >= 4*Math.pow(2, uarmeb32)) {
    cristal[message.author.id] = {
      cristal: ucristal - 4*Math.pow(2, uarmeb32)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 42
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 33" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem33 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem33 === 1 && uarmeb33+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem33 === 1 && uarmeb33+2 < uforge && ucristal < 4*Math.pow(2, uarmeb33)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem33=== 1 && uarmeb33+2 < uforge && ucristal >= 4*Math.pow(2, uarmeb33)) {
    cristal[message.author.id] = {
      cristal: ucristal - 4*Math.pow(2, uarmeb33)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 43
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 44" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem44 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem44 === 1 && uarmeb44+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem44 === 1 && uarmeb44+2 < uforge && ucristal < 4*Math.pow(2, uarmeb44)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem44=== 1 && uarmeb44+2 < uforge && ucristal >= 4*Math.pow(2, uarmeb44)) {
    cristal[message.author.id] = {
      cristal: ucristal - 4*Math.pow(2, uarmeb44)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 54
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 34" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem34 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem34 === 1 && uarmeb34+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem34 === 1 && uarmeb34+2 < uforge && ucristal < 6*Math.pow(2, uarmeb34)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem34=== 1 && uarmeb34+2 < uforge && ucristal >= 6*Math.pow(2, uarmeb34)) {
    cristal[message.author.id] = {
      cristal: ucristal - 6*Math.pow(2, uarmeb34)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 44
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 35" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem35 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem35 === 1 && uarmeb35+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem35 === 1 && uarmeb35+2 < uforge && ucristal < 6*Math.pow(2, uarmeb35)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem35=== 1 && uarmeb35+2 < uforge && ucristal >= 6*Math.pow(2, uarmeb35)) {
    cristal[message.author.id] = {
      cristal: ucristal - 6*Math.pow(2, uarmeb35)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 45
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 36" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem36 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem36 === 1 && uarmeb36+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem36 === 1 && uarmeb36+2 < uforge && ucristal < 6*Math.pow(2, uarmeb36)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem36=== 1 && uarmeb36+2 < uforge && ucristal >= 6*Math.pow(2, uarmeb36)) {
    cristal[message.author.id] = {
      cristal: ucristal - 6*Math.pow(2, uarmeb36)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 46
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 37" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem37 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem37 === 1 && uarmeb37+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem37 === 1 && uarmeb37+2 < uforge && ucristal < 6*Math.pow(2, uarmeb37)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem37=== 1 && uarmeb37+2 < uforge && ucristal >= 6*Math.pow(2, uarmeb37)) {
    cristal[message.author.id] = {
      cristal: ucristal - 6*Math.pow(2, uarmeb37)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 47
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 38" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem38 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem38 === 1 && uarmeb38+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem38 === 1 && uarmeb38+2 < uforge && ucristal < 6*Math.pow(2, uarmeb38)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem38=== 1 && uarmeb38+2 < uforge && ucristal >= 6*Math.pow(2, uarmeb38)) {
    cristal[message.author.id] = {
      cristal: ucristal - 6*Math.pow(2, uarmeb38)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 48
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 39" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem39 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem39 === 1 && uarmeb39+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem39 === 1 && uarmeb39+2 < uforge && ucristal < 6*Math.pow(2, uarmeb39)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem39=== 1 && uarmeb39+2 < uforge && ucristal >= 6*Math.pow(2, uarmeb39)) {
    cristal[message.author.id] = {
      cristal: ucristal - 6*Math.pow(2, uarmeb39)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 49
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 40" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem40 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem40 === 1 && uarmeb40+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem40 === 1 && uarmeb40+2 < uforge && ucristal < 6*Math.pow(2, uarmeb40)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem40=== 1 && uarmeb40+2 < uforge && ucristal >= 6*Math.pow(2, uarmeb40)) {
    cristal[message.author.id] = {
      cristal: ucristal - 6*Math.pow(2, uarmeb40)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 50
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 41" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem41 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem41 === 1 && uarmeb41+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem41 === 1 && uarmeb41+2 < uforge && ucristal < 6*Math.pow(2, uarmeb41)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem41=== 1 && uarmeb41+2 < uforge && ucristal >= 6*Math.pow(2, uarmeb41)) {
    cristal[message.author.id] = {
      cristal: ucristal - 6*Math.pow(2, uarmeb41)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 51
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 42" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem42 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem42 === 1 && uarmeb42+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem42 === 1 && uarmeb42+2 < uforge && ucristal < 6*Math.pow(2, uarmeb42)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem42=== 1 && uarmeb42+2 < uforge && ucristal >= 6*Math.pow(2, uarmeb42)) {
    cristal[message.author.id] = {
      cristal: ucristal - 6*Math.pow(2, uarmeb42)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 52
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up 43" && uclassen > 0 && uforge > 2 && uftemps === 0) {
  if(uitem43 === 0) message.channel.send("Tu n'as pas cette arme")
  if(uitem43 === 1 && uarmeb43+2 === uforge ) message.channel.send("Impossible d'améliorer plus cette arme.")
  if(uitem43 === 1 && uarmeb43+2 < uforge && ucristal < 6*Math.pow(2, uarmeb43)) message.channel.send("Tu n'as pas assez de ressources")
  if(uitem43=== 1 && uarmeb43+2 < uforge && ucristal >= 6*Math.pow(2, uarmeb43)) {
    cristal[message.author.id] = {
      cristal: ucristal - 6*Math.pow(2, uarmeb43)
    };
    ftemps[message.author.id] = {
      ftemps: Date.now() + 21600000
    };
    kshining[message.author.id] = {
     kshining: 53
   }
        fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
       });
       fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
        if (err) console.log(err)
         });
       fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
     });
     message.channel.send("L'amélioration de votre arme à débutée, elle se finira dans 6 heures.")
  }
}
if(message.content === "!forge up info" && uclassen > 0 && uforge > 2) {
  message.channel.send(`Vous pouvez améliorer vos armes en faisant ${trucbizarre}!forge up [ID de l'arme]${trucbizarre}\nCoût pour une amélioration :star: :\nArmes communes: 1 ${cristalemote}\nArmes rares: 2 ${cristalemote}\nArmes épiques: 4 ${cristalemote}\nArmes légendaires: 6 ${cristalemote}\n\nCoût pour une amélioration :star::star: :\n(Forge 4 requise)\nArmes communes: 2 ${cristalemote}\nArmes rares: 4 ${cristalemote}\nArmes épiques: 8 ${cristalemote}\nArmes légendaires: 12 ${cristalemote}\n\nCoût pour une amélioration :star::star::star: :\n(Forge 5 requise)\nArmes communes: 4 ${cristalemote}\nArmes rares: 8 ${cristalemote}\nArmes épiques: 16 ${cristalemote}\nArmes légendaires: 24 ${cristalemote}\n\nTemps de production: 6 heures`)
}

if(message.content === "!forge claim" && uclassen > 0 && uforge > 0) {
  if(uftemps === 0) message.channel.send(`Vous n'avez rien en cours de production, pour consulter la liste des choses pouvant être produites, faites ${trucbizarre}!forge${trucbizarre}`)
  if(uftemps > Date.now()) message.channel.send(`Reviens dans: ${STKTimeObj.minutes} minutes et ${STKTimeObj.seconds} secondes`)
  if(uftemps <= Date.now() && uftemps > 0  || uAdmin === 1){

    

     cristal[message.author.id] = {
       cristal: ucristal + kaddcristal
     }
     item4[message.author.id] = {
      item4: uitem4 + kitem4
    }
    item5[message.author.id] = {
      item5: uitem5 + kitem5
    }
    item7[message.author.id] = {
      item7: uitem7 + kitem7
    }
         item11[message.author.id] = {
      item11: uitem11 + kitem11
    }
         item15[message.author.id] = {
      item15: uitem15 + kitem15
    }
    item18[message.author.id] = {
      item18: uitem18 + kitem18
    }
    item19[message.author.id] = {
      item19: uitem19 + kitem19
    }
    item25[message.author.id] = {
      item25: uitem25 + kitem25
    }
    item30[message.author.id] = {
      item30: uitem30 + kitem30
    }
    item38[message.author.id] = {
      item38: uitem38 + kitem38
    }
    item42[message.author.id] = {
      item42: uitem42 + kitem42
    }
    item43[message.author.id] = {
      item43: uitem43 + kitem43
    }
        item44[message.author.id] = {
      item44: uitem44 + kitem44
    }
    armeb1[message.author.id] = {
      armeb1: uarmeb1 + kaddup1
    }
    armeb2[message.author.id] = {
      armeb2: uarmeb2 + kaddup2
    }
    armeb3[message.author.id] = {
      armeb3: uarmeb3 + kaddup3
    }
    armeb4[message.author.id] = {
      armeb4: uarmeb4 + kaddup4
    }
    armeb5[message.author.id] = {
      armeb5: uarmeb5 + kaddup5
    }
    armeb6[message.author.id] = {
      armeb6: uarmeb6 + kaddup6
    }
    armeb7[message.author.id] = {
      armeb7: uarmeb7 + kaddup7
    }
    armeb8[message.author.id] = {
      armeb8: uarmeb8 + kaddup8
    }
    armeb9[message.author.id] = {
      armeb9: uarmeb9 + kaddup9
    }
    armeb10[message.author.id] = {
      armeb10: uarmeb10 + kaddup10
    }

    armeb11[message.author.id] = {
      armeb11: uarmeb11 + kaddup11
    }
    armeb12[message.author.id] = {
      armeb12: uarmeb12 + kaddup12
    }
    armeb13[message.author.id] = {
      armeb13: uarmeb13 + kaddup13
    }
    armeb14[message.author.id] = {
      armeb14: uarmeb14 + kaddup14
    }
    armeb15[message.author.id] = {
      armeb15: uarmeb15 + kaddup15
    }
    armeb16[message.author.id] = {
      armeb16: uarmeb16 + kaddup16
    }
    armeb17[message.author.id] = {
      armeb17: uarmeb17 + kaddup17
    }
    armeb18[message.author.id] = {
      armeb18: uarmeb18 + kaddup18
    }
    armeb19[message.author.id] = {
      armeb19: uarmeb19 + kaddup19
    }
    armeb20[message.author.id] = {
      armeb20: uarmeb20 + kaddup20
    }
    armeb21[message.author.id] = {
      armeb21: uarmeb21 + kaddup21
    }
    armeb22[message.author.id] = {
      armeb22: uarmeb22 + kaddup22
    }
    armeb23[message.author.id] = {
      armeb23: uarmeb23 + kaddup23
    }
    armeb24[message.author.id] = {
      armeb24: uarmeb24 + kaddup24
    }
  
    armeb25[message.author.id] = {
      armeb25: uarmeb25 + kaddup25
    }
    armeb26[message.author.id] = {
      armeb26: uarmeb26 + kaddup26
    }
        armeb27[message.author.id] = {
      armeb27: uarmeb27 + kaddup27
    }
    armeb28[message.author.id] = {
      armeb28: uarmeb28 + kaddup28
    }
    armeb29[message.author.id] = {
      armeb29: uarmeb29 + kaddup29
    }
    armeb30[message.author.id] = {
      armeb30: uarmeb30 + kaddup30
    }
    armeb31[message.author.id] = {
      armeb31: uarmeb31 + kaddup31
    }
    armeb32[message.author.id] = {
      armeb32: uarmeb32 + kaddup32
    }
    armeb33[message.author.id] = {
      armeb33: uarmeb33 + kaddup33
    }
    armeb34[message.author.id] = {
      armeb34: uarmeb34 + kaddup34
    }
    armeb35[message.author.id] = {
      armeb35: uarmeb35 + kaddup35
    }
    armeb36[message.author.id] = {
      armeb36: uarmeb36 + kaddup36
    }
    armeb37[message.author.id] = {
      armeb37: uarmeb37 + kaddup37
    }
    armeb38[message.author.id] = {
      armeb38: uarmeb38 + kaddup38
    }
    armeb39[message.author.id] = {
      armeb39: uarmeb39 + kaddup39
    }
    armeb40[message.author.id] = {
      armeb40: uarmeb40 + kaddup40
    }
    armeb41[message.author.id] = {
      armeb41: uarmeb41 + kaddup41
    }
    armeb42[message.author.id] = {
      armeb42: uarmeb42 + kaddup42
    }
    armeb43[message.author.id] = {
      armeb43: uarmeb43 + kaddup43
    }
    armeb44[message.author.id] = {
      armeb44: uarmeb44 + kaddup44
    }
      ftemps[message.author.id] = {
         ftemps: 0
       };
       kshining[message.author.id] = {
        kshining: 0
      };
    fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./item4.json", JSON.stringify(item4), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./item5.json", JSON.stringify(item5), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./item7.json", JSON.stringify(item7), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./item11.json", JSON.stringify(item11), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./item15.json", JSON.stringify(item15), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./item18.json", JSON.stringify(item18), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./item19.json", JSON.stringify(item19), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./item25.json", JSON.stringify(item25), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./item30.json", JSON.stringify(item30), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./item38.json", JSON.stringify(item38), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./item42.json", JSON.stringify(item42), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./item43.json", JSON.stringify(item43), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./item44.json", JSON.stringify(item44), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb1.json", JSON.stringify(armeb1), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb2.json", JSON.stringify(armeb2), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb3.json", JSON.stringify(armeb3), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb4.json", JSON.stringify(armeb4), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb5.json", JSON.stringify(armeb5), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb6.json", JSON.stringify(armeb6), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb7.json", JSON.stringify(armeb7), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb8.json", JSON.stringify(armeb8), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb9.json", JSON.stringify(armeb9), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb10.json", JSON.stringify(armeb10), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb11.json", JSON.stringify(armeb11), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb12.json", JSON.stringify(armeb12), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb13.json", JSON.stringify(armeb13), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb14.json", JSON.stringify(armeb14), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb15.json", JSON.stringify(armeb15), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb16.json", JSON.stringify(armeb16), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb17.json", JSON.stringify(armeb17), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb18.json", JSON.stringify(armeb18), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb19.json", JSON.stringify(armeb19), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb20.json", JSON.stringify(armeb20), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb21.json", JSON.stringify(armeb21), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb22.json", JSON.stringify(armeb22), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb23.json", JSON.stringify(armeb23), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb24.json", JSON.stringify(armeb24), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb25.json", JSON.stringify(armeb25), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb26.json", JSON.stringify(armeb26), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb27.json", JSON.stringify(armeb27), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb28.json", JSON.stringify(armeb28), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb29.json", JSON.stringify(armeb29), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb30.json", JSON.stringify(armeb30), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb31.json", JSON.stringify(armeb31), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb32.json", JSON.stringify(armeb32), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb33.json", JSON.stringify(armeb33), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb34.json", JSON.stringify(armeb34), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb35.json", JSON.stringify(armeb35), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb36.json", JSON.stringify(armeb36), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb37.json", JSON.stringify(armeb37), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb38.json", JSON.stringify(armeb38), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb39.json", JSON.stringify(armeb39), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb40.json", JSON.stringify(armeb40), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb41.json", JSON.stringify(armeb41), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb42.json", JSON.stringify(armeb42), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb43.json", JSON.stringify(armeb43), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./armeb44.json", JSON.stringify(armeb44), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./ftemps.json", JSON.stringify(ftemps), (err) => {
      if (err) console.log(err)
    });

    fs.writeFile("./kshining.json", JSON.stringify(kshining), (err) => {
      if (err) console.log(err)
    });
    message.channel.send(`${phrasedeclaimforge}`)
  }
}
let forgeembed = new Discord.RichEmbed()
.addField(`**:hammer_pick: Forge [${uforge}]** ${cristalemote} Cristaux: ${ucristal}`,`\n\n${cristalemote} **Forger un cristal** ${trucbizarre}(!forge cristal)${trucbizarre}\nCoût: 3500 ${RXemote}\nTemps de production: 30 minutes${aalname}${aalcost}${upname}\n\n${messagedeproduction}`);
if(message.content === "!forge" && uclassen > 0) {
   if(uforge === 0) message.channel.send("Ta forge est niveau 0, améliore la au niveau 1 pour l'utiliser.")
   if(uforge > 0) message.channel.send(forgeembed)
}
let statembed = new Discord.RichEmbed()
.setAuthor(message.author.username)
.setTitle("**[Stats globales]**")
.addField(`:arrow_double_up: **Points de Statistiques:**`,`\nAttaque: ${uAtk+(boostAtkClasse*4)} (${uAtk})\nDéfense: ${uDef+(boostDefClasse*4)} (${uDef})\nPv: ${uPvmax+(boostPVClasse*4)} (${uPvmax})\n${trucbizarre}Points de statistiques restants:${utotalpoints_non_use} (!info train) ${trucbizarre}`)
.addField(`\n**Ressources collectées:**`,`\nCollectes effectuées: ${utotalcollecte}\n${emotepierre} Pierre: ${millify(writeressminiere[message.author.id].allstone, 1)}\n${emoteacier} Acier: ${millify(writeressminiere[message.author.id].allacier, 1)}\n${emotefer} Fer: ${millify(writeressminiere[message.author.id].allfer, 1)}\n${emoteor} Or: ${millify(writeressminiere[message.author.id].allgold, 1)}\n${emoteplatine} Platine: ${millify(writeressminiere[message.author.id].allplatine, 1)}\n${emotediamant} Diamant: ${millify(writeressminiere[message.author.id].alldiamond, 1)}\n${emotepluto} Plutonium: ${millify(writeressminiere[message.author.id].allpluto, 1)}\n${emotePN} Pierres Noires: ${millify(writeressminiere[message.author.id].allpn, 1)}\n${emotebs} Bois de sapin: ${millify(writeressbois[message.author.id].allbs, 1)}\n${emotebbl} Bois de bouleau: ${millify(writeressbois[message.author.id].allbbl, 1)}\n${emotebc} Bois de chêne: ${millify(writeressbois[message.author.id].allbc, 1)}\n${emotegwood} Bois doré: ${millify(writeressbois[message.author.id].allgw, 1)}`)
.addField(`\n**Autres:**`,`\nHourlies récupérés: ${total_hourly[message.author.id].total_hourly}\nDailies récupérés: ${total_daily[message.author.id].total_daily}\n${emoteparcheminvierge} Parchemins créées: ${utotal_parchemin}\n${potvideemote} Potions créées: ${utotal_potion}`);
if(message.content === "!stats"){
  message.channel.send(statembed)
}
if(message.content === "!info train" && uclassen != 0) {
  message.channel.send(`**Page d'information**\nL'entrainement vous permet de dépenser vos points de statisstiques dans 3 domaines:
  \n-L'Attaque\n-La Défense\n-Les Points de Vie\nPour vous entrainer, faites ${trucbizarre}!train [catégorie] [nombre de points]${trucbizarre}\n${trucbizarre}Vous possédez actuellement ${utotalpoints_non_use} Points de Statistiques${trucbizarre}`)
}
let achatotal = require("./achatotal.json");
if(!achatotal[message.author.id]){
  achatotal[message.author.id] = {
    achatotal: 0
  };

fs.writeFile("./achatotal.json", JSON.stringify(achatotal), (err) => {
  if (err) console.log(err)
});
}
let uachatotal = achatotal[message.author.id].achatotal
let costdutruc = 1+ 3*uachatotal
let delta = ((6*uachatotal -1) * (6*uachatotal -1)) + 8*udailypoints
let x1 = ((-6*uachatotal +1) - Math.sqrt(delta)) / 2
let x2 = ((-6*uachatotal +1) + (Math.sqrt(delta))) /2
let dailyshopembed = new Discord.RichEmbed()
.setTitle("**[Shop]**")
.addField('Boxs',`[ID:1] ${boxcommonemote} Box Commune:\n${trucbizarre}Coût: 10 ${trucbizarre}${dailyemote}\n[ID:2] ${boxrareemote} Box Rare:\n${trucbizarre}Coût: 25 ${trucbizarre}${dailyemote}\n[ID:3] ${boxepicemote} Box Epique:\n${trucbizarre}Coût: 50 ${trucbizarre}${dailyemote}\n[ID:4] ${boxmysteryemote} Box Mystérieuse:\n${trucbizarre}Coût: 100 ${trucbizarre}${dailyemote}\n[ID:5] ${boxgoldemote} Box Dorée:\n${trucbizarre}Coût: 5 ${trucbizarre}${PPlemote}\n[ID:6] ${boxsupremeemote} Box Suprême:\n${trucbizarre}Coût: 15${trucbizarre}${PPlemote}`)
.addField(`Autres`, `[ID:7] Points de Statistiques:\n${trucbizarre}Coût: ${costdutruc} ${trucbizarre}${dailyemote}\n\nVous possédez actuellement ${udailypoints} ${dailyemote} ainsi que ${ligneshopgold}\nPour acheter un item, il vous suffit de faire: ${trucbizarre}!buy [ID de l'objet] [quant]${trucbizarre}`)


if(message.content === "!shop" || message.content === "!sh" || message.content === "!echope"){
  if(uclassen === 0) message.channel.send("")
  if(uclassen != 0) message.channel.send(dailyshopembed)
}
if(command === 'buy') {
  if(args.length != 2) {
    return message.channel.send(`La commande doit être de la forme:\n${trucbizarre}!buy [ID] [quant]${trucbizarre}`);
  }
  if(isNaN(args[1]) || 0 > args[1]){
    message.channel.send("Arguments invalides.")
  }
  let necessary1 = parseInt(args[1], 10)* 10
 
  if(args[0] === "1" && args[1] > 0) {
    if(necessary1 > udailypoints) {
      message.channel.send("Vous n'avez pas assez de DailyPoints pour cet achat.")
    }
    if(udailypoints >= necessary1 && args[1] > 0 && args[0] === "1") {
      dailypoints[message.author.id] = {
        dailypoints: udailypoints - necessary1
     };
     boxcommune[message.author.id] = {
      boxcommune: uboxcommune + parseInt(args[1], 10)
     };
     fs.writeFile("./dailypoints.json", JSON.stringify(dailypoints), (err) => {
      if (err) console.log(err)
   });
        fs.writeFile("./boxcommune.json", JSON.stringify(boxcommune), (err) => {
           if (err) console.log(err)
        });
       message.channel.send(`Vous avez bien acheté ${Math.trunc(millify(parseInt(args[1], 10), 1))} ${boxcommonemote}!`)
  }
}

let necessary2 = parseInt(args[1], 10)* 25
 
  if(args[0] === "2" && args[1] > 0) {
    if(necessary2 > udailypoints) {
      message.channel.send("Vous n'avez pas assez de DailyPoints pour cet achat.")
    }
    if(udailypoints >= necessary2 && args[1] > 0 && args[0] === "2") {
      dailypoints[message.author.id] = {
        dailypoints: udailypoints - necessary2
     };
     boxrare[message.author.id] = {
      boxrare: uboxrare + parseInt(args[1], 10)
     };
     fs.writeFile("./dailypoints.json", JSON.stringify(dailypoints), (err) => {
      if (err) console.log(err)
   });
        fs.writeFile("./boxrare.json", JSON.stringify(boxrare), (err) => {
           if (err) console.log(err)
        });
       message.channel.send(`Vous avez bien acheté ${Math.trunc(millify(parseInt(args[1], 10), 1))} ${boxrareemote}`)
  }
}

let necessary3 = parseInt(args[1], 10)* 50
 
  if(args[0] === "3" && args[1] > 0) {
    if(necessary3 > udailypoints) {
      message.channel.send("Vous n'avez pas assez de DailyPoints pour cet achat.")
    }
    if(udailypoints >= necessary3 && args[1] > 0 && args[0] === "3") {
      dailypoints[message.author.id] = {
        dailypoints: udailypoints - necessary3
     };
     boxepique[message.author.id] = {
      boxepique: uboxepique + parseInt(args[1], 10)
     };
     fs.writeFile("./dailypoints.json", JSON.stringify(dailypoints), (err) => {
      if (err) console.log(err)
   });
        fs.writeFile("./boxepique.json", JSON.stringify(boxepique), (err) => {
           if (err) console.log(err)
        });
       message.channel.send(`Vous avez bien acheté ${Math.trunc(millify(parseInt(args[1], 10), 1))} ${boxepicemote}`)
  }
}
let necessary4 = parseInt(args[1], 10)* 100
 
  if(args[0] === "4" && args[1] > 0) {
    if(necessary4 > udailypoints) {
      message.channel.send("Vous n'avez pas assez de DailyPoints pour cet achat.")
    }
    if(udailypoints >= necessary4 && args[1] > 0 && args[0] === "4") {
      dailypoints[message.author.id] = {
        dailypoints: udailypoints - necessary4
     };
     mysterybox[message.author.id] = {
      mysterybox: umysterybox + parseInt(args[1], 10)
     };
     fs.writeFile("./dailypoints.json", JSON.stringify(dailypoints), (err) => {
      if (err) console.log(err)
   });
        fs.writeFile("./mysterybox.json", JSON.stringify(mysterybox), (err) => {
           if (err) console.log(err)
        });
       message.channel.send(`Vous avez bien acheté ${Math.trunc(millify(parseInt(args[1], 10), 1))} ${boxmysteryemote}`)
  }
}

let necessary5 = parseInt(args[1], 10)* 5000
 
  if(args[0] === "5" && args[1] > 0) {
    if(necessary5 > uPieceor) {
      message.channel.send("Vous n'avez pas assez d'argent pour cet achat.")
    }
    if(uPieceor >= necessary5 && args[1] > 0 && args[0] === "5") {
      Pieceor[message.author.id] = {
        Pieceor: uPieceor - necessary5
     };
     goldbox[message.author.id] = {
      goldbox: ugoldbox + parseInt(args[1], 10)
     };
     fs.writeFile("./goldbox.json", JSON.stringify(goldbox), (err) => {
      if (err) console.log(err)
   });
        fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
           if (err) console.log(err)
        });
       message.channel.send(`Vous avez bien acheté ${Math.trunc(millify(parseInt(args[1], 10), 1))} ${boxgoldemote}`)
  }
}

let necessary6 = parseInt(args[1], 10)* 15000
 
  if(args[0] === "6" && args[1] > 0) {
    if(necessary6 > uPieceor) {
      message.channel.send("Vous n'avez pas assez d'argent pour cet achat.")
    }
    if(uPieceor >= necessary6 && args[1] > 0 && args[0] === "6") {
      Pieceor[message.author.id] = {
        Pieceor: uPieceor - necessary6
     };
     supremebox[message.author.id] = {
      supremebox: usupremebox + parseInt(args[1], 10)
     };
     fs.writeFile("./supremebox.json", JSON.stringify(supremebox), (err) => {
      if (err) console.log(err)
   });
        fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
           if (err) console.log(err)
        });
       message.channel.send(`Vous avez bien acheté ${Math.trunc(millify(parseInt(args[1], 10), 1))} ${boxsupremeemote}`)
  }
}
let keee = uachatotal + args[1] -1
let teee = uachatotal
let necessary7 = Math.trunc(args[1] * ((-1 +6 *uachatotal + 3 * args[1])/2))

  if(args[0] === "7" && args[1] > 0) {
    if(necessary7 > udailypoints) {
      message.channel.send(`Vous n'avez pas assez de DailyPoints pour cet achat.`)
    }
    if(udailypoints >= necessary7 && args[1] > 0 && args[0] === "7") {
      dailypoints[message.author.id] = {
        dailypoints: udailypoints - Math.trunc(necessary7)
     };
     totalpoints_non_use[message.author.id] = {
      totalpoints_non_use: utotalpoints_non_use + parseInt(args[1], 10)
     };
     achatotal[message.author.id] = {
      achatotal: uachatotal + parseInt(args[1], 10)
     };
     fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
      if (err) console.log(err)
   });
        fs.writeFile("./dailypoints.json", JSON.stringify(dailypoints), (err) => {
           if (err) console.log(err)
        });

        fs.writeFile("./achatotal.json", JSON.stringify(achatotal), (err) => {
          if (err) console.log(err)
       });

       message.channel.send(`Vous avez bien acheté ${Math.trunc(millify(parseInt(args[1], 10), 1))} Points de Statistiques !`)
  }
}
}
if(command === 'train') {
  if(args.length != 2) {
    return message.channel.send(`La commande doit être de la forme:\n${trucbizarre}!train [catégorie] [nombre de points]${trucbizarre}`);
  }
  if(isNaN(args[0]) === false ||  isNaN(args[1])){
    message.channel.send("Arguments invalides.")
  }
 
  if(args[0] === "Atk" || args[0] === "atk" || args[0] === "ATK"|| args[0] === "Attaque"|| args[0] === "attaque"|| args[0] === "attack"|| args[0] === "Attack"|| args[0] === "At"|| args[0] === "at" || args[0] === "AT" || args[0] === "ATTACK") {
    if(args[1] > utotalpoints_non_use || 0 >= args[1] ) {
      message.channel.send("Vous n'avez pas assez de points de statistiques pour faire cet entrainement.")
    }
    if(utotalpoints_non_use >= args[1] && args[1] > 0) {
    totalpoints_non_use[message.author.id] = {
      totalpoints_non_use: utotalpoints_non_use - parseInt(args[1], 10)
     };
     Atk[message.author.id] = {
      Atk: uAtk + parseInt(args[1], 10)
     };
     fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
      if (err) console.log(err)
   });
        fs.writeFile("./Atk.json", JSON.stringify(Atk), (err) => {
           if (err) console.log(err)
        });
       message.channel.send(`Vous avez bien dépensé ${Math.trunc(millify(parseInt(args[1], 10), 1))} points de statistiques dans l'Attaque. Elle a donc augmentée!`)
  }
}
if(args[0] === "Def" || args[0] === "def" || args[0] === "DEF"|| args[0] === "Defense"|| args[0] === "defense"|| args[0] === "défense"|| args[0] === "défense"|| args[0] === "de"|| args[0] === "De" || args[0] === "DE" || args[0] === "DEFENSE") {
  if(args[1] > utotalpoints_non_use || 0 >= args[1] ) {
    message.channel.send("Vous n'avez pas assez de points de statistiques pour faire cet entrainement.")
  }
  if(utotalpoints_non_use >= args[1] && args[1] > 0) {
  totalpoints_non_use[message.author.id] = {
    totalpoints_non_use: utotalpoints_non_use - parseInt(args[1], 10)
   };
   Def[message.author.id] = {
    Def: uDef + parseInt(args[1], 10)
   };
   fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if (err) console.log(err)
 });
      fs.writeFile("./Def.json", JSON.stringify(Def), (err) => {
         if (err) console.log(err)
      });
     message.channel.send(`Vous avez bien dépensé ${Math.trunc(millify(parseInt(args[1], 10), 1))} points de statistiques dans la Défense. Elle a donc augmentée!`)
}
}
if(args[0] === "Pv" || args[0] === "PV" || args[0] === "pv"|| args[0] === "Hp"|| args[0] === "HP"|| args[0] === "hp"|| args[0] === "pvs"|| args[0] === "PVS"|| args[0] === "Pvs" || args[0] === "HPS" || args[0] === "hps" || args[0] === "vie" || args[0] === "Vie" || args[0] === "life") {
  if(args[1] > utotalpoints_non_use || 0 >= args[1] ) {
    message.channel.send("Vous n'avez pas assez de points de statistiques pour faire cet entrainement.")
  }
  if(utotalpoints_non_use >= args[1] && args[1] > 0) {
  totalpoints_non_use[message.author.id] = {
    totalpoints_non_use: utotalpoints_non_use - parseInt(args[1], 10)
   };
   Pvmax[message.author.id] = {
    Pvmax: uPvmax + parseInt(args[1], 10)
   };
   fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
    if (err) console.log(err)
 });
      fs.writeFile("./Pvmax.json", JSON.stringify(Pvmax), (err) => {
         if (err) console.log(err)
      });
     message.channel.send(`Vous avez bien dépensé ${Math.trunc(millify(parseInt(args[1], 10), 1))} points de statistiques dans les Points de Vie. Ils ont donc augmentés!`)
}
}
}


const DateNow1 = Date.now();
// !system ID add/set ITEM NB
if(command === "runuser" && uAdmin != 0) {
   if(args.length != 4) {
     return message.channel.send("Erreur de Syntaxe, 4 arguments sont requis")
   } 
   const usercible1 = message.mentions.users.first()

   if(isNaN(args[3]) ||!usercible1 || isNaN(args[2]) === false || isNaN(args[1]) === false ) {
     message.channel.send("Arguments invalides")
   }

   if(args[1] === "add") {
      if(args[2] === "RxCoins" && isNaN(args[3]) === false ) {
        RxCoins[usercible1.id] = {
          RxCoins: RxCoins[usercible1.id].RxCoins + parseInt(args[3], 10)
         };
         fs.writeFile("./RxCoins.json", JSON.stringify(RxCoins), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "Pierre" && isNaN(args[3]) === false ) {
        Pierre[usercible1.id] = {
          Pierre: Pierre[usercible1.id].Pierre + parseInt(args[3], 10)
         };
         fs.writeFile("./Pierre.json", JSON.stringify(Pierre), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "Acier" && isNaN(args[3]) === false ) {
        Acier[usercible1.id] = {
          Acier: Acier[usercible1.id].Acier + parseInt(args[3], 10)
         };
         fs.writeFile("./Acier.json", JSON.stringify(Acier), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "Fer" && isNaN(args[3]) === false ) {
        Fer[usercible1.id] = {
          Fer: Fer[usercible1.id].Fer + parseInt(args[3], 10)
         };
         fs.writeFile("./Fer.json", JSON.stringify(Fer), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "Or" && isNaN(args[3]) === false ) {
        Or[usercible1.id] = {
          Or: Or[usercible1.id].Or + parseInt(args[3], 10)
         };
         fs.writeFile("./Or.json", JSON.stringify(Or), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "Platine" && isNaN(args[3]) === false ) {
        Platine[usercible1.id] = {
          Platine: Platine[usercible1.id].Platine + parseInt(args[3], 10)
         };
         fs.writeFile("./Platine.json", JSON.stringify(Platine), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "Plutonium" && isNaN(args[3]) === false ) {
        Plutonium[usercible1.id] = {
          Plutonium: Plutonium[usercible1.id].Plutonium + parseInt(args[3], 10)
         };
         fs.writeFile("./Plutonium.json", JSON.stringify(Plutonium), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "Diamant" && isNaN(args[3]) === false ) {
        Diamant[usercible1.id] = {
          Diamant: Diamant[usercible1.id].Diamant + parseInt(args[3], 10)
         };
         fs.writeFile("./Diamant.json", JSON.stringify(Diamant), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "PierreNoire" && isNaN(args[3]) === false ) {
        PierreNoire[usercible1.id] = {
          PierreNoire: PierreNoire[usercible1.id].PierreNoire + parseInt(args[3], 10)
         };
         fs.writeFile("./PierreNoire.json", JSON.stringify(PierreNoire), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "BoisdeSapin" && isNaN(args[3]) === false ) {
        BoisdeSapin[usercible1.id] = {
          BoisdeSapin: BoisdeSapin[usercible1.id].BoisdeSapin + parseInt(args[3], 10)
         };
         fs.writeFile("./BoisdeSapin.json", JSON.stringify(BoisdeSapin), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "BoisdeChêne" && isNaN(args[3]) === false ) {
        BoisdeChêne[usercible1.id] = {
          BoisdeChêne: BoisdeChêne[usercible1.id].BoisdeChêne + parseInt(args[3], 10)
         };
         fs.writeFile("./BoisdeChêne.json", JSON.stringify(BoisdeChêne), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "BoisdeBouleau" && isNaN(args[3]) === false ) {
        BoisdeBouleau[usercible1.id] = {
          BoisdeBouleau: BoisdeBouleau[usercible1.id].BoisdeBouleau + parseInt(args[3], 10)
         };
         fs.writeFile("./BoisdeBouleau.json", JSON.stringify(BoisdeBouleau), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "BoisDoré" && isNaN(args[3]) === false ) {
        BoisDoré[usercible1.id] = {
          BoisDoré: BoisDoré[usercible1.id].BoisDoré + parseInt(args[3], 10)
         };
         fs.writeFile("./BoisDoré.json", JSON.stringify(BoisDoré), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "BoisdeChêne" && isNaN(args[3]) === false ) {
        BoisdeChêne[usercible1.id] = {
          BoisdeChêne: BoisdeChêne[usercible1.id].BoisdeChêne + parseInt(args[3], 10)
         };
         fs.writeFile("./BoisdeChêne.json", JSON.stringify(BoisdeChêne), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "fragments" && isNaN(args[3]) === false ) {
        fragments[usercible1.id] = {
          fragments: fragments[usercible1.id].fragments + parseInt(args[3], 10)
         };
         fs.writeFile("./fragments.json", JSON.stringify(fragments), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "cristal" && isNaN(args[3]) === false ) {
        cristal[usercible1.id] = {
          cristal: cristal[usercible1.id].cristal + parseInt(args[3], 10)
         };
         fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "Pieceor" && isNaN(args[3]) === false ) {
        Pieceor[usercible1.id] = {
          Pieceor: Pieceor[usercible1.id].Pieceor + parseInt(args[3], 10)
         };
         fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "gemme1" && isNaN(args[3]) === false ) {
        gemme1[usercible1.id] = {
          gemme1: gemme1[usercible1.id].gemme1 + parseInt(args[3], 10)
         };
         fs.writeFile("./gemme1.json", JSON.stringify(gemme1), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "gemme2" && isNaN(args[3]) === false ) {
        gemme2[usercible1.id] = {
          gemme2: gemme2[usercible1.id].gemme2 + parseInt(args[3], 10)
         };
         fs.writeFile("./gemme2.json", JSON.stringify(gemme2), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "gemme3" && isNaN(args[3]) === false ) {
        gemme3[usercible1.id] = {
          gemme3: gemme3[usercible1.id].gemme3 + parseInt(args[3], 10)
         };
         fs.writeFile("./gemme3.json", JSON.stringify(gemme3), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "gemme4" && isNaN(args[3]) === false ) {
        gemme4[usercible1.id] = {
          gemme4: gemme4[usercible1.id].gemme4 + parseInt(args[3], 10)
         };
         fs.writeFile("./gemme4.json", JSON.stringify(gemme4), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "gemme5" && isNaN(args[3]) === false ) {
        gemme5[usercible1.id] = {
          gemme5: gemme5[usercible1.id].gemme5 + parseInt(args[3], 10)
         };
         fs.writeFile("./gemme5.json", JSON.stringify(gemme5), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "boxcommune" && isNaN(args[3]) === false ) {
        boxcommune[usercible1.id] = {
          boxcommune: boxcommune[usercible1.id].boxcommune + parseInt(args[3], 10)
         };
         fs.writeFile("./boxcommune.json", JSON.stringify(boxcommune), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "boxrare" && isNaN(args[3]) === false ) {
        boxrare[usercible1.id] = {
          boxrare: boxrare[usercible1.id].boxrare + parseInt(args[3], 10)
         };
         fs.writeFile("./boxrare.json", JSON.stringify(boxrare), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "boxepique" && isNaN(args[3]) === false ) {
        boxepique[usercible1.id] = {
          boxepique: boxepique[usercible1.id].boxepique + parseInt(args[3], 10)
         };
         fs.writeFile("./boxepique.json", JSON.stringify(boxepique), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "mysterybox" && isNaN(args[3]) === false ) {
        mysterybox[usercible1.id] = {
          mysterybox: mysterybox[usercible1.id].mysterybox + parseInt(args[3], 10)
         };
         fs.writeFile("./mysterybox.json", JSON.stringify(mysterybox), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "goldbox" && isNaN(args[3]) === false ) {
        goldbox[usercible1.id] = {
          goldbox: goldbox[usercible1.id].goldbox + parseInt(args[3], 10)
         };
         fs.writeFile("./goldbox.json", JSON.stringify(goldbox), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "supremebox" && isNaN(args[3]) === false ) {
        supremebox[usercible1.id] = {
          supremebox: supremebox[usercible1.id].supremebox + parseInt(args[3], 10)
         };
         fs.writeFile("./supremebox.json", JSON.stringify(supremebox), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "dailypoints" && isNaN(args[3]) === false ) {
        dailypoints[usercible1.id] = {
          dailypoints: dailypoints[usercible1.id].dailypoints + parseInt(args[3], 10)
         };
         fs.writeFile("./dailypoints.json", JSON.stringify(dailypoints), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "totalpoints_non_use" && isNaN(args[3]) === false ) {
        totalpoints_non_use[usercible1.id] = {
          totalpoints_non_use: totalpoints_non_use[usercible1.id].totalpoints_non_use + parseInt(args[3], 10)
         };
         fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
          if (err) console.log(err)
       });
      }

      if(args[2] === "Hache" && isNaN(args[3]) === false ) {
        Hache[usercible1.id] = {
          Hache: Hache[usercible1.id].Hache + parseInt(args[3], 10)
         };
         fs.writeFile("./Hache.json", JSON.stringify(Hache), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "Foreuse" && isNaN(args[3]) === false ) {
        Foreuse[usercible1.id] = {
          Foreuse: Foreuse[usercible1.id].Foreuse + parseInt(args[3], 10)
         };
         fs.writeFile("./Foreuse.json", JSON.stringify(Foreuse), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "Looting" && isNaN(args[3]) === false ) {
        Looting[usercible1.id] = {
          Looting: Looting[usercible1.id].Looting + parseInt(args[3], 10)
         };
         fs.writeFile("./Looting.json", JSON.stringify(Looting), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "XPBoost" && isNaN(args[3]) === false ) {
        XPBoost[usercible1.id] = {
          XPBoost: XPBoost[usercible1.id].XPBoost + parseInt(args[3], 10)
         };
         fs.writeFile("./XPBoost.json", JSON.stringify(XPBoost), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "TimerReduc" && isNaN(args[3]) === false ) {
        TimerReduc[usercible1.id] = {
          TimerReduc: TimerReduc[usercible1.id].TimerReduc + parseInt(args[3], 10)
         };
         fs.writeFile("./TimerReduc.json", JSON.stringify(TimerReduc), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "atelier" && isNaN(args[3]) === false ) {
        atelier[usercible1.id] = {
          atelier: atelier[usercible1.id].atelier + parseInt(args[3], 10)
         };
         fs.writeFile("./atelier.json", JSON.stringify(atelier), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "forge" && isNaN(args[3]) === false ) {
        forge[usercible1.id] = {
          forge: forge[usercible1.id].forge + parseInt(args[3], 10)
         };
         fs.writeFile("./forge.json", JSON.stringify(forge), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "total_parchemin" && isNaN(args[3]) === false ) {
        total_parchemin[usercible1.id] = {
          total_parchemin: total_parchemin[usercible1.id].total_parchemin + parseInt(args[3], 10)
         };
         fs.writeFile("./total_parchemin.json", JSON.stringify(total_parchemin), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "total_potion" && isNaN(args[3]) === false ) {
        total_potion[usercible1.id] = {
          total_potion: total_potion[usercible1.id].total_potion + parseInt(args[3], 10)
         };
         fs.writeFile("./total_potion.json", JSON.stringify(total_potion), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "total_daily" && isNaN(args[3]) === false ) {
        total_daily[usercible1.id] = {
          total_daily: total_daily[usercible1.id].total_daily + parseInt(args[3], 10)
         };
         fs.writeFile("./total_daily.json", JSON.stringify(total_daily), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "xp_joueur" && isNaN(args[3]) === false ) {
        xp[usercible1.id] = {
          xp: xp[usercible1.id].xp + parseInt(args[3], 10)
         };
         fs.writeFile("./experience.json", JSON.stringify(xp), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "xp_classe" && isNaN(args[3]) === false ) {
        xpclasse[usercible1.id] = {
          xpclasse: xpclasse[usercible1.id].xpclasse + parseInt(args[3], 10),
          levelclasse: xpclasse[usercible1.id].levelclasse
         };
         fs.writeFile("./experienceclasse.json", JSON.stringify(xpclasse), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "level_classe" && isNaN(args[3]) === false ) {
        xpclasse[usercible1.id] = {
          xpclasse: xpclasse[usercible1.id].xpclasse,
          levelclasse: xpclasse[usercible1.id].levelclasse + parseInt(args[3], 10)
         };
         fs.writeFile("./experienceclasse.json", JSON.stringify(xpclasse), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "Epee" && isNaN(args[3]) === false ) {
        Epee[usercible1.id] = {
          Epee: Epee[usercible1.id].Epee + parseInt(args[3], 10)
         };
         fs.writeFile("./Epee.json", JSON.stringify(Epee), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "Bouclier" && isNaN(args[3]) === false ) {
        Bouclier[usercible1.id] = {
          Bouclier: Bouclier[usercible1.id].Bouclier + parseInt(args[3], 10)
         };
         fs.writeFile("./Bouclier.json", JSON.stringify(Bouclier), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "parchemin_vierge" && isNaN(args[3]) === false ) {
        parcheminvierge[usercible1.id] = {
          parcheminvierge: parcheminvierge[usercible1.id].parcheminvierge + parseInt(args[3], 10)
         };
         fs.writeFile("./parcheminvierge.json", JSON.stringify(parcheminvierge), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "parchemin_commun" && isNaN(args[3]) === false ) {
        parchemincommun[usercible1.id] = {
          parchemincommun: parchemincommun[usercible1.id].parchemincommun + parseInt(args[3], 10)
         };
         fs.writeFile("./parchemincommun.json", JSON.stringify(parchemincommun), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "parchemin_rare" && isNaN(args[3]) === false ) {
        parcheminrare[usercible1.id] = {
          parcheminrare: parcheminrare[usercible1.id].parcheminrare + parseInt(args[3], 10)
         };
         fs.writeFile("./parcheminrare.json", JSON.stringify(parcheminrare), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "parchemin_epic" && isNaN(args[3]) === false ) {
        parcheminepic[usercible1.id] = {
          parcheminepic: parcheminepic[usercible1.id].parcheminepic + parseInt(args[3], 10)
         };
         fs.writeFile("./parcheminepic.json", JSON.stringify(parcheminepic), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "parchemin_legendaire" && isNaN(args[3]) === false ) {
        parcheminlegendaire[usercible1.id] = {
          parcheminlegendaire: parcheminlegendaire[usercible1.id].parcheminlegendaire + parseInt(args[3], 10)
         };
         fs.writeFile("./parcheminlegendaire.json", JSON.stringify(parcheminlegendaire), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "potvide" && isNaN(args[3]) === false ) {
        potvide[usercible1.id] = {
          potvide: potvide[usercible1.id].potvide + parseInt(args[3], 10)
         };
         fs.writeFile("./potvide.json", JSON.stringify(potvide), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "potxp1" && isNaN(args[3]) === false ) {
        potxp1[usercible1.id] = {
          potxp1: potxp1[usercible1.id].potxp1 + parseInt(args[3], 10)
         };
         fs.writeFile("./potxp1.json", JSON.stringify(potxp1), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "potxp2" && isNaN(args[3]) === false ) {
        potxp2[usercible1.id] = {
          potxp2: potxp2[usercible1.id].potxp2 + parseInt(args[3], 10)
         };
         fs.writeFile("./potxp2.json", JSON.stringify(potxp2), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "potxp3" && isNaN(args[3]) === false ) {
        potxp3[usercible1.id] = {
          potxp3: potxp3[usercible1.id].potxp3 + parseInt(args[3], 10)
         };
         fs.writeFile("./potxp3.json", JSON.stringify(potxp3), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "pot25" && isNaN(args[3]) === false ) {
        pot25[usercible1.id] = {
          pot25: pot25[usercible1.id].pot25 + parseInt(args[3], 10)
         };
         fs.writeFile("./pot25.json", JSON.stringify(pot25), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "pot50" && isNaN(args[3]) === false ) {
        pot50[usercible1.id] = {
          pot50: pot50[usercible1.id].pot50 + parseInt(args[3], 10)
         };
         fs.writeFile("./pot50.json", JSON.stringify(pot50), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "pot100" && isNaN(args[3]) === false ) {
        pot100[usercible1.id] = {
          pot100: pot100[usercible1.id].pot100 + parseInt(args[3], 10)
         };
         fs.writeFile("./pot100.json", JSON.stringify(pot100), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "potpv" && isNaN(args[3]) === false ) {
        potpv[usercible1.id] = {
          potpv: potpv[usercible1.id].potpv + parseInt(args[3], 10)
         };
         fs.writeFile("./potpv.json", JSON.stringify(potpv), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "potatk" && isNaN(args[3]) === false ) {
        potatk[usercible1.id] = {
          potatk: potpv[usercible1.id].potatk + parseInt(args[3], 10)
         };
         fs.writeFile("./potatk.json", JSON.stringify(potatk), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "potdef" && isNaN(args[3]) === false ) {
        potdef[usercible1.id] = {
          potdef: potdef[usercible1.id].potdef + parseInt(args[3], 10)
         };
         fs.writeFile("./potdef.json", JSON.stringify(potdef), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "donjon_reset_1" && isNaN(args[3]) === false ) {
        resetower[usercible1.id] = {
          resetower: resetower[usercible1.id].resetower + parseInt(args[3], 10)
         };
         fs.writeFile("./resetower.json", JSON.stringify(resetower), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "donjon_reset_2" && isNaN(args[3]) === false ) {
        resetower2[usercible1.id] = {
          resetower2: resetower2[usercible1.id].resetower2 + parseInt(args[3], 10)
         };
         fs.writeFile("./resetower2.json", JSON.stringify(resetower2), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "donjon_reset_3" && isNaN(args[3]) === false ) {
        resetower3[usercible1.id] = {
          resetower3: resetower3[usercible1.id].resetower3 + parseInt(args[3], 10)
         };
         fs.writeFile("./resetower3.json", JSON.stringify(resetower3), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "donjon_reset_4" && isNaN(args[3]) === false ) {
        resetower4[usercible1.id] = {
          resetower4: resetower4[usercible1.id].resetower4 + parseInt(args[3], 10)
         };
         fs.writeFile("./resetower4.json", JSON.stringify(resetower4), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "donjon_reset_5" && isNaN(args[3]) === false ) {
        resetower5[usercible1.id] = {
          resetower5: resetower5[usercible1.id].resetower5 + parseInt(args[3], 10)
         };
         fs.writeFile("./resetower5.json", JSON.stringify(resetower5), (err) => {
          if (err) console.log(err)
       });
      }
         if(args[2] === "donjon_etage_1" && isNaN(args[3]) === false ) {
        etage[usercible1.id] = {
          etage: etage[usercible1.id].etage + parseInt(args[3], 10)
         };
         fs.writeFile("./etage.json", JSON.stringify(etage), (err) => {
          if (err) console.log(err)
       });
      }
  
      if(args[2] === "donjon_etage_2" && isNaN(args[3]) === false ) {
        etage2[usercible1.id] = {
          etage2: etage2[usercible1.id].etage2 + parseInt(args[3], 10)
         };
         fs.writeFile("./etage2.json", JSON.stringify(etage2), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "donjon_etage_3" && isNaN(args[3]) === false ) {
        etage3[usercible1.id] = {
          etage3: etage3[usercible1.id].etage3 + parseInt(args[3], 10)
         };
         fs.writeFile("./etage3.json", JSON.stringify(etage3), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "donjon_etage_4" && isNaN(args[3]) === false ) {
        etage5[usercible1.id] = {
          etage5: etage5[usercible1.id].etage5 + parseInt(args[3], 10)
         };
         fs.writeFile("./etage5.json", JSON.stringify(etage5), (err) => {
          if (err) console.log(err)
       });
      }
      if(args[2] === "donjon_etage_5" && isNaN(args[3]) === false ) {
        etage5[usercible1.id] = {
          etage5: etage5[usercible1.id].etage5 + parseInt(args[3], 10)
         };
         fs.writeFile("./etage5.json", JSON.stringify(etage5), (err) => {
          if (err) console.log(err)
       });
      }
      message.channel.send(`[SYSTEM-ADD] ${usercible1.username} ${args[2]}: ADD ${parseInt(args[3], 10)}`)
      client.channels.get(`775657437247307786`).send(`[System Transaction]\n${message.author.username} (${message.author.id}) ${args[2]}: ADD ${parseInt(args[3], 10)} TO ${usercible1.username} (${usercible1.id})\n${new Date(Date.now()).toString()}`)

   }

   if(args[1] === "set") {
    if(args[2] === "RxCoins" && isNaN(args[3]) === false ) {
      RxCoins[usercible1.id] = {
        RxCoins: parseInt(args[3], 10)
       };
       fs.writeFile("./RxCoins.json", JSON.stringify(RxCoins), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "Pierre" && isNaN(args[3]) === false ) {
      Pierre[usercible1.id] = {
        Pierre: parseInt(args[3], 10)
       };
       fs.writeFile("./Pierre.json", JSON.stringify(Pierre), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "Acier" && isNaN(args[3]) === false ) {
      Acier[usercible1.id] = {
        Acier: parseInt(args[3], 10)
       };
       fs.writeFile("./Acier.json", JSON.stringify(Acier), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "Fer" && isNaN(args[3]) === false ) {
      Fer[usercible1.id] = {
        Fer: parseInt(args[3], 10)
       };
       fs.writeFile("./Fer.json", JSON.stringify(Fer), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "Or" && isNaN(args[3]) === false ) {
      Or[usercible1.id] = {
        Or: parseInt(args[3], 10)
       };
       fs.writeFile("./Or.json", JSON.stringify(Or), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "Platine" && isNaN(args[3]) === false ) {
      Platine[usercible1.id] = {
        Platine: parseInt(args[3], 10)
       };
       fs.writeFile("./Platine.json", JSON.stringify(Platine), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "Plutonium" && isNaN(args[3]) === false ) {
      Plutonium[usercible1.id] = {
        Plutonium: parseInt(args[3], 10)
       };
       fs.writeFile("./Plutonium.json", JSON.stringify(Plutonium), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "Diamant" && isNaN(args[3]) === false ) {
      Diamant[usercible1.id] = {
        Diamant: parseInt(args[3], 10)
       };
       fs.writeFile("./Diamant.json", JSON.stringify(Diamant), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "PierreNoire" && isNaN(args[3]) === false ) {
      PierreNoire[usercible1.id] = {
        PierreNoire: parseInt(args[3], 10)
       };
       fs.writeFile("./PierreNoire.json", JSON.stringify(PierreNoire), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "BoisdeSapin" && isNaN(args[3]) === false ) {
      BoisdeSapin[usercible1.id] = {
        BoisdeSapin: parseInt(args[3], 10)
       };
       fs.writeFile("./BoisdeSapin.json", JSON.stringify(BoisdeSapin), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "BoisdeChêne" && isNaN(args[3]) === false ) {
      BoisdeChêne[usercible1.id] = {
        BoisdeChêne: parseInt(args[3], 10)
       };
       fs.writeFile("./BoisdeChêne.json", JSON.stringify(BoisdeChêne), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "BoisdeBouleau" && isNaN(args[3]) === false ) {
      BoisdeBouleau[usercible1.id] = {
        BoisdeBouleau: parseInt(args[3], 10)
       };
       fs.writeFile("./BoisdeBouleau.json", JSON.stringify(BoisdeBouleau), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "BoisDoré" && isNaN(args[3]) === false ) {
      BoisDoré[usercible1.id] = {
        BoisDoré: parseInt(args[3], 10)
       };
       fs.writeFile("./BoisDoré.json", JSON.stringify(BoisDoré), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "BoisdeChêne" && isNaN(args[3]) === false ) {
      BoisdeChêne[usercible1.id] = {
        BoisdeChêne: parseInt(args[3], 10)
       };
       fs.writeFile("./BoisdeChêne.json", JSON.stringify(BoisdeChêne), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "fragments" && isNaN(args[3]) === false ) {
      fragments[usercible1.id] = {
        fragments: parseInt(args[3], 10)
       };
       fs.writeFile("./fragments.json", JSON.stringify(fragments), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "cristal" && isNaN(args[3]) === false ) {
      cristal[usercible1.id] = {
        cristal: parseInt(args[3], 10)
       };
       fs.writeFile("./cristal.json", JSON.stringify(cristal), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "Pieceor" && isNaN(args[3]) === false ) {
      Pieceor[usercible1.id] = {
        Pieceor: parseInt(args[3], 10)
       };
       fs.writeFile("./Pieceor.json", JSON.stringify(Pieceor), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "gemme1" && isNaN(args[3]) === false ) {
      gemme1[usercible1.id] = {
        gemme1: parseInt(args[3], 10)
       };
       fs.writeFile("./gemme1.json", JSON.stringify(gemme1), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "gemme2" && isNaN(args[3]) === false ) {
      gemme2[usercible1.id] = {
        gemme2: parseInt(args[3], 10)
       };
       fs.writeFile("./gemme2.json", JSON.stringify(gemme2), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "gemme3" && isNaN(args[3]) === false ) {
      gemme3[usercible1.id] = {
        gemme3: parseInt(args[3], 10)
       };
       fs.writeFile("./gemme3.json", JSON.stringify(gemme3), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "gemme4" && isNaN(args[3]) === false ) {
      gemme4[usercible1.id] = {
        gemme4: parseInt(args[3], 10)
       };
       fs.writeFile("./gemme4.json", JSON.stringify(gemme4), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "gemme5" && isNaN(args[3]) === false ) {
      gemme5[usercible1.id] = {
        gemme5: parseInt(args[3], 10)
       };
       fs.writeFile("./gemme5.json", JSON.stringify(gemme5), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "boxcommune" && isNaN(args[3]) === false ) {
      boxcommune[usercible1.id] = {
        boxcommune: parseInt(args[3], 10)
       };
       fs.writeFile("./boxcommune.json", JSON.stringify(boxcommune), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "boxrare" && isNaN(args[3]) === false ) {
      boxrare[usercible1.id] = {
        boxrare: parseInt(args[3], 10)
       };
       fs.writeFile("./boxrare.json", JSON.stringify(boxrare), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "boxepique" && isNaN(args[3]) === false ) {
      boxepique[usercible1.id] = {
        boxepique: parseInt(args[3], 10)
       };
       fs.writeFile("./boxepique.json", JSON.stringify(boxepique), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "mysterybox" && isNaN(args[3]) === false ) {
      mysterybox[usercible1.id] = {
        mysterybox: parseInt(args[3], 10)
       };
       fs.writeFile("./mysterybox.json", JSON.stringify(mysterybox), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "goldbox" && isNaN(args[3]) === false ) {
      goldbox[usercible1.id] = {
        goldbox: parseInt(args[3], 10)
       };
       fs.writeFile("./goldbox.json", JSON.stringify(goldbox), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "supremebox" && isNaN(args[3]) === false ) {
      supremebox[usercible1.id] = {
        supremebox: parseInt(args[3], 10)
       };
       fs.writeFile("./supremebox.json", JSON.stringify(supremebox), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "dailypoints" && isNaN(args[3]) === false ) {
      dailypoints[usercible1.id] = {
        dailypoints: parseInt(args[3], 10)
       };
       fs.writeFile("./dailypoints.json", JSON.stringify(dailypoints), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "totalpoints_non_use" && isNaN(args[3]) === false ) {
      totalpoints_non_use[usercible1.id] = {
        totalpoints_non_use: parseInt(args[3], 10)
       };
       fs.writeFile("./totalpoints_non_use.json", JSON.stringify(totalpoints_non_use), (err) => {
        if (err) console.log(err)
     });
    }

    if(args[2] === "Hache" && isNaN(args[3]) === false ) {
      Hache[usercible1.id] = {
        Hache: parseInt(args[3], 10)
       };
       fs.writeFile("./Hache.json", JSON.stringify(Hache), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "Foreuse" && isNaN(args[3]) === false ) {
      Foreuse[usercible1.id] = {
        Foreuse: parseInt(args[3], 10)
       };
       fs.writeFile("./Foreuse.json", JSON.stringify(Foreuse), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "Looting" && isNaN(args[3]) === false ) {
      Looting[usercible1.id] = {
        Looting: parseInt(args[3], 10)
       };
       fs.writeFile("./Looting.json", JSON.stringify(Looting), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "XPBoost" && isNaN(args[3]) === false ) {
      XPBoost[usercible1.id] = {
        XPBoost: parseInt(args[3], 10)
       };
       fs.writeFile("./XPBoost.json", JSON.stringify(XPBoost), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "TimerReduc" && isNaN(args[3]) === false ) {
      TimerReduc[usercible1.id] = {
        TimerReduc: parseInt(args[3], 10)
       };
       fs.writeFile("./TimerReduc.json", JSON.stringify(TimerReduc), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "atelier" && isNaN(args[3]) === false ) {
      atelier[usercible1.id] = {
        atelier: parseInt(args[3], 10)
       };
       fs.writeFile("./atelier.json", JSON.stringify(atelier), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "forge" && isNaN(args[3]) === false ) {
      forge[usercible1.id] = {
        forge: parseInt(args[3], 10)
       };
       fs.writeFile("./forge.json", JSON.stringify(forge), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "total_parchemin" && isNaN(args[3]) === false ) {
      total_parchemin[usercible1.id] = {
        total_parchemin: parseInt(args[3], 10)
       };
       fs.writeFile("./total_parchemin.json", JSON.stringify(total_parchemin), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "total_potion" && isNaN(args[3]) === false ) {
      total_potion[usercible1.id] = {
        total_potion: parseInt(args[3], 10)
       };
       fs.writeFile("./total_potion.json", JSON.stringify(total_potion), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "total_daily" && isNaN(args[3]) === false ) {
      total_daily[usercible1.id] = {
        total_daily: parseInt(args[3], 10)
       };
       fs.writeFile("./total_daily.json", JSON.stringify(total_daily), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "xp_joueur" && isNaN(args[3]) === false ) {
      xp[usercible1.id] = {
        xp: parseInt(args[3], 10)
       };
       fs.writeFile("./experience.json", JSON.stringify(xp), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "xp_classe" && isNaN(args[3]) === false ) {
      xpclasse[usercible1.id] = {
        xpclasse: parseInt(args[3], 10),
        levelclasse: xpclasse[usercible1.id].levelclasse
       };
       fs.writeFile("./experienceclasse.json", JSON.stringify(xpclasse), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "level_classe" && isNaN(args[3]) === false ) {
      xpclasse[usercible1.id] = {
        xpclasse: xpclasse[usercible1.id].xpclasse,
        levelclasse: parseInt(args[3], 10)
       };
       fs.writeFile("./experienceclasse.json", JSON.stringify(xpclasse), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "Epee" && isNaN(args[3]) === false ) {
      Epee[usercible1.id] = {
        Epee: parseInt(args[3], 10)
       };
       fs.writeFile("./Epee.json", JSON.stringify(Epee), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "Bouclier" && isNaN(args[3]) === false ) {
      Bouclier[usercible1.id] = {
        Bouclier: parseInt(args[3], 10)
       };
       fs.writeFile("./Bouclier.json", JSON.stringify(Bouclier), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "parchemin_vierge" && isNaN(args[3]) === false ) {
      parcheminvierge[usercible1.id] = {
        parcheminvierge: parseInt(args[3], 10)
       };
       fs.writeFile("./parcheminvierge.json", JSON.stringify(parcheminvierge), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "parchemin_commun" && isNaN(args[3]) === false ) {
      parchemincommun[usercible1.id] = {
        parchemincommun: parseInt(args[3], 10)
       };
       fs.writeFile("./parchemincommun.json", JSON.stringify(parchemincommun), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "parchemin_rare" && isNaN(args[3]) === false ) {
      parcheminrare[usercible1.id] = {
        parcheminrare: parseInt(args[3], 10)
       };
       fs.writeFile("./parcheminrare.json", JSON.stringify(parcheminrare), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "parchemin_epic" && isNaN(args[3]) === false ) {
      parcheminepic[usercible1.id] = {
        parcheminepic: parseInt(args[3], 10)
       };
       fs.writeFile("./parcheminepic.json", JSON.stringify(parcheminepic), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "parchemin_legendaire" && isNaN(args[3]) === false ) {
      parcheminlegendaire[usercible1.id] = {
        parcheminlegendaire: parseInt(args[3], 10)
       };
       fs.writeFile("./parcheminlegendaire.json", JSON.stringify(parcheminlegendaire), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "potvide" && isNaN(args[3]) === false ) {
      potvide[usercible1.id] = {
        potvide: parseInt(args[3], 10)
       };
       fs.writeFile("./potvide.json", JSON.stringify(potvide), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "potxp1" && isNaN(args[3]) === false ) {
      potxp1[usercible1.id] = {
        potxp1: parseInt(args[3], 10)
       };
       fs.writeFile("./potxp1.json", JSON.stringify(potxp1), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "potxp2" && isNaN(args[3]) === false ) {
      potxp2[usercible1.id] = {
        potxp2: parseInt(args[3], 10)
       };
       fs.writeFile("./potxp2.json", JSON.stringify(potxp2), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "potxp3" && isNaN(args[3]) === false ) {
      potxp3[usercible1.id] = {
        potxp3: parseInt(args[3], 10)
       };
       fs.writeFile("./potxp3.json", JSON.stringify(potxp3), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "pot25" && isNaN(args[3]) === false ) {
      pot25[usercible1.id] = {
        pot25: parseInt(args[3], 10)
       };
       fs.writeFile("./pot25.json", JSON.stringify(pot25), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "pot50" && isNaN(args[3]) === false ) {
      pot50[usercible1.id] = {
        pot50: parseInt(args[3], 10)
       };
       fs.writeFile("./pot50.json", JSON.stringify(pot50), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "pot100" && isNaN(args[3]) === false ) {
      pot100[usercible1.id] = {
        pot100: parseInt(args[3], 10)
       };
       fs.writeFile("./pot100.json", JSON.stringify(pot100), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "potpv" && isNaN(args[3]) === false ) {
      potpv[usercible1.id] = {
        potpv: parseInt(args[3], 10)
       };
       fs.writeFile("./potpv.json", JSON.stringify(potpv), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "potatk" && isNaN(args[3]) === false ) {
      potatk[usercible1.id] = {
        potatk: parseInt(args[3], 10)
       };
       fs.writeFile("./potatk.json", JSON.stringify(potatk), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "potdef" && isNaN(args[3]) === false ) {
      potdef[usercible1.id] = {
        potdef: parseInt(args[3], 10)
       };
       fs.writeFile("./potdef.json", JSON.stringify(potdef), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "donjon_reset_1" && isNaN(args[3]) === false ) {
      resetower[usercible1.id] = {
        resetower: parseInt(args[3], 10)
       };
       fs.writeFile("./resetower.json", JSON.stringify(resetower), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "donjon_reset_2" && isNaN(args[3]) === false ) {
      resetower2[usercible1.id] = {
        resetower2: parseInt(args[3], 10)
       };
       fs.writeFile("./resetower2.json", JSON.stringify(resetower2), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "donjon_reset_3" && isNaN(args[3]) === false ) {
      resetower3[usercible1.id] = {
        resetower3: parseInt(args[3], 10)
       };
       fs.writeFile("./resetower3.json", JSON.stringify(resetower3), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "donjon_reset_4" && isNaN(args[3]) === false ) {
      resetower4[usercible1.id] = {
        resetower4: parseInt(args[3], 10)
       };
       fs.writeFile("./resetower4.json", JSON.stringify(resetower4), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "donjon_reset_5" && isNaN(args[3]) === false ) {
      resetower5[usercible1.id] = {
        resetower5: parseInt(args[3], 10)
       };
       fs.writeFile("./resetower5.json", JSON.stringify(resetower5), (err) => {
        if (err) console.log(err)
     });
    }
       if(args[2] === "donjon_etage_1" && isNaN(args[3]) === false ) {
      etage[usercible1.id] = {
        etage: parseInt(args[3], 10)
       };
       fs.writeFile("./etage.json", JSON.stringify(etage), (err) => {
        if (err) console.log(err)
     });
    }

    if(args[2] === "donjon_etage_2" && isNaN(args[3]) === false ) {
      etage2[usercible1.id] = {
        etage2: parseInt(args[3], 10)
       };
       fs.writeFile("./etage2.json", JSON.stringify(etage2), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "donjon_etage_3" && isNaN(args[3]) === false ) {
      etage3[usercible1.id] = {
        etage3: parseInt(args[3], 10)
       };
       fs.writeFile("./etage3.json", JSON.stringify(etage3), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "donjon_etage_4" && isNaN(args[3]) === false ) {
      etage5[usercible1.id] = {
        etage5: parseInt(args[3], 10)
       };
       fs.writeFile("./etage5.json", JSON.stringify(etage5), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "donjon_etage_5" && isNaN(args[3]) === false ) {
      etage5[usercible1.id] = {
        etage5: parseInt(args[3], 10)
       };
       fs.writeFile("./etage5.json", JSON.stringify(etage5), (err) => {
        if (err) console.log(err)
     });
    }
    if(args[2] === "classe_select" && isNaN(args[3]) === false ) {
      classe[usercible1.id] = {
        classe: parseInt(args[3], 10)
       };
       fs.writeFile("./classe.json", JSON.stringify(classe), (err) => {
        if (err) console.log(err)
     });
    }
    message.channel.send(`[SYSTEM-SET] ${usercible1.username}  ${args[2]}: ${parseInt(args[3], 10)}`)
    client.channels.get(`775657437247307786`).send(`[System Transaction]\n${message.author.username} (${message.author.id}) SET ${args[2]} x${parseInt(args[3], 10)} TO ${usercible1.username} (${usercible1.id})\n${new Date(Date.now()).toString()}`)

 }
 if(args[1] === "inv") {
  if(args[2] === "open" && args[3] === "0" ) {

    let klignegold = ""
    
    let kppldxi = Math.trunc(Pieceor[usercible1.id].Pieceor/1000)
    if(Pieceor[usercible1.id].Pieceor >= 1000) {
      klignegold = `\n${PPlemote} **Pièces de Platine**: ${Math.trunc(Pieceor[usercible1.id].Pieceor/1000)}\n${POemote} **Pièces d'Or**: ${Math.trunc(Pieceor[usercible1.id].Pieceor - (kppldxi*1000))}`
    }
    if(Pieceor[usercible1.id].Pieceor <= 999 && Pieceor[usercible1.id].Pieceor != 0) {
      klignegold = `\n${POemote} **Pièces d'Or**: ${Math.trunc(Pieceor[usercible1.id].Pieceor)}`
    }
    if(Pieceor[usercible1.id].Pieceor === 0) {
      klignegold = ""
    }

    let inventaireadminEmbed = new Discord.RichEmbed()
    .setAuthor(usercible1.username, usercible1.avatarURL)
    .setColor("#000001")
    .addField(`Banque`, `${RXemote}**RxCoins**: ${Math.trunc(RxCoins[usercible1.id].RxCoins)}${klignegold}`)
    .addField(":scroll:Informations:", `**Classe**: **${globalwriting[usercible1.id].kclassename}** ${globalwriting[usercible1.id].kheroemote}\n**Niveau Classe**: ${xpclasse[usercible1.id].levelclasse}\n**${xp2emote} XP Classe**: ${millify(Math.trunc(xpclasse[usercible1.id].xpclasse), 1)}\n**Niveau Joueur**: ${Math.trunc(Math.pow(xp[usercible1.id].xp, 1/3.8))}\n**${xp1emote} XP Joueur**: ${Math.trunc(xp[usercible1.id].xp)}\n**Rang**:${globalwriting[usercible1.id].krank}\n**PV**: ${millify(Math.trunc(Pv[usercible1.id].Pv), 1)}/${millify(Math.trunc(globalwriting[usercible1.id].kmaxpv),1)}\n**Puissance d'attaque**: ${millify(globalwriting[usercible1.id].kmaxatk, 2)}\n**Puissance Défensive**: ${millify(globalwriting[usercible1.id].kmaxdef,2)}`)
    .addField(`Ressources minières (8)`, `\n${emotepierre} **Pierre**: ${millify(Math.trunc(Pierre[usercible1.id].Pierre), 1)}\n${emoteacier} **Acier**: ${millify(Math.trunc(Acier[usercible1.id].Acier), 1)}\n${emotefer} **Fer**: ${millify(Math.trunc(Fer[usercible1.id].Fer), 1)}\n${emoteor} **Or**: ${millify(Math.trunc(Or[usercible1.id].Or), 1)}\n${emoteplatine} **Platine**: ${millify(Math.trunc(Platine[usercible1.id].Platine), 1)}\n${emotediamant} **Diamant**: ${millify(Math.trunc(Diamant[usercible1.id].Diamant), 1)}\n${emotepluto} **Plutonium**: ${millify(Math.trunc(Plutonium[usercible1.id].Plutonium), 1)}\n${emotePN} **Pierres Noires**: ${millify(Math.trunc(PierreNoire[usercible1.id].PierreNoire), 1)}`)
    .addField(`Ressources naturelles (4)`, `\n${emotebs} **Bois de Sapin**: ${millify(Math.trunc(BoisdeSapin[usercible1.id].BoisdeSapin), 1)}\n${emotebbl} **Bois de Bouleau**: ${millify(Math.trunc(BoisdeBouleau[usercible1.id].BoisdeBouleau), 1)}\n${emotebc} **Bois de Chêne**: ${millify(Math.trunc(BoisdeChêne[usercible1.id].BoisdeChêne), 1)}\n${emotegwood} **Bois Doré**: ${millify(Math.trunc(BoisDoré[usercible1.id].BoisDoré), 1)}`)
    .addField(":crossed_swords:Armes et armures:", `${globalwriting[usercible1.id].kinvemote} ${globalwriting[usercible1.id].kinvname} ${globalwriting[usercible1.id].kstarinv}\n${globalwriting[usercible1.id].ksemote} **${globalwriting[usercible1.id].ksname}**: Niveau ${Epee[usercible1.id].Epee}\n${globalwriting[usercible1.id].kshemote} **${globalwriting[usercible1.id].kbname}**: Niveau ${Bouclier[usercible1.id].Bouclier}`)
    .addField(":hammer_pick:Outils:", `${globalwriting[usercible1.id].kfemote} **${globalwriting[usercible1.id].kfname}**: Niveau ${Foreuse[usercible1.id].Foreuse} ${globalwriting[usercible1.id].kpfor}\n${globalwriting[usercible1.id].khemote} **${globalwriting[usercible1.id].khname}**: Niveau ${Hache[usercible1.id].Hache} ${globalwriting[usercible1.id].kphache}`)
    .addField(":arrow_double_up:Améliorations:", `${globalwriting[usercible1.id].keloot} **Looting**: Niveau ${Looting[usercible1.id].Looting}\n${globalwriting[usercible1.id].kexp} **XPBoost**: Niveau ${XPBoost[usercible1.id].XPBoost}\n${globalwriting[usercible1.id].keti} **TimerReduc**: Niveau ${TimerReduc[usercible1.id].TimerReduc}`)
    .addField(":office:Bâtiments:",`:house: **Atelier**: Niveau ${atelier[usercible1.id].atelier}\n:hammer_pick: **Forge**: Niveau ${forge[usercible1.id].forge}`);
    message.channel.send(inventaireadminEmbed)
}
if(args[2] === "open" && args[3] === "1" ) {
  let kplacemax = 1 + (2*bag[usercible1.id].bag * (bag[usercible1.id].bag /2))
  let sacembedadmin = new Discord.RichEmbed()

  .setAuthor(usercible1.username)
  .setColor("#000001")
  .addField(`**__Parchemins:__**`, `\n${emoteparcheminvierge} Vierge ${parcheminvierge[usercible1.id].parcheminvierge}/${kplacemax}\n${emoteparchemincommun} Commun ${parchemincommun[usercible1.id].parchemincommun}/${kplacemax}\n${emoteparcheminrare} Rare ${parcheminrare[usercible1.id].parcheminrare}/${kplacemax}\n${emoteparcheminepic} Epique ${parcheminepic[usercible1.id].parcheminepic}/${kplacemax}\n${emoteparcheminlegendaire}Légendaire ${parcheminlegendaire[usercible1.id].parcheminlegendaire}/${kplacemax}`)
  .addField(`\n**__(1)Potions:__**`, `\n${potvideemote} Flacon vide ${potvide[usercible1.id].potvide}/${kplacemax}\n${potatkemote} Potion d'Attaque ${potatk[usercible1.id].potatk}/${kplacemax}\n${potdefemote} Potion de Défense ${potdef[usercible1.id].potdef}/${kplacemax}\n${potpvemote} Potion de Vie ${potpv[usercible1.id].potpv}/${kplacemax}`)
  .addField(`\n**__(2)Potions:__**`,`\n${pot25emote} Potion de régénération I ${pot25[usercible1.id].pot25}/${kplacemax}\n${pot50emote} Potion de régénération II ${pot50[usercible1.id].pot50}/${kplacemax}\n${pot100emote} Potion de régénération III ${pot100[usercible1.id].pot100}/${kplacemax}`)
  .addField(`\n**__(3)Potions:__**`, `\n${potxp1emote} Potion d'expérience I ${potxp1[usercible1.id].potxp1}/${kplacemax}\n${potxp2emote} Potion d'expérience II ${potxp2[usercible1.id].potxp2}/${kplacemax}\n${potxp3emote} Potion d'expérience III ${potxp3[usercible1.id].potxp3}/${kplacemax}`);
  message.channel.send(sacembedadmin)

}
if(args[2] === "open" && args[3] === "2") {


let messagedeboostatk1 = "+0%"
let messagedeboostdef1 = "+0%"
let messagedeboostpv1 = "+0%"


if(useatkpot[usercible1.id].useatkpot > 0) {
  potatkbouste = 1.25
  messagedeboostatk1 = `+25% pour les ${useatkpot[usercible1.id].useatkpot} prochain combats`
}
if(usedefpot[usercible1.id].usedefpot > 0) {
  messagedeboostatk1 = `+25% pour les ${usedefpot[usercible1.id].usedefpot} prochain combats`
}
if(usepvpot[usercible1.id].usepvpot > 0) {
  messagedeboostatk1 = `+25% pour les ${usepvpot[usercible1.id].usepvpot} prochain combats`
}

  let specialinventaireadminEmbed = new Discord.RichEmbed()
 .setAuthor(usercible1.username)
 .setColor("#000001")
 .addField(`Gemmes:`, `${globalwriting2[usercible1.id].kgemme1emote} **${globalwriting2[usercible1.id].kgemme1name}**: Tier ${gemme1[usercible1.id].gemme1}\n${desc1}\n${globalwriting2[usercible1.id].kgemme2emote} **${globalwriting2[usercible1.id].kgemme2name}**: Tier ${gemme2[usercible1.id].gemme2}\n${desc2}\n${globalwriting2[usercible1.id].kgemme3emote} **${globalwriting2[usercible1.id].kgemme3name}**: Tier ${gemme3[usercible1.id].gemme3}\n${desc3}\n${globalwriting2[usercible1.id].kgemme4emote} **${globalwriting2[usercible1.id].kgemme4name}**: Tier ${gemme4[usercible1.id].gemme4}\n${desc4}\n${globalwriting2[usercible1.id].kgemme5emote} **${globalwriting2[usercible1.id].kgemme5name}**: Tier ${gemme5[usercible1.id].gemme5}\n${desc5}\n${fragemote} **Fragments**: ${millify(fragments[usercible1.id].fragments, 1)}`)
 .addField(`Pet:`, `${globalwriting2[usercible1.id].kpetnameinv}\n**ATK**: ${Math.trunc(globalwriting2[usercible1.id].kpetatkboosted)}\n**DEF**: ${Math.trunc(globalwriting2[usercible1.id].kpetdefboosted)}\n**Pv**: ${Math.trunc(globalwriting2[usercible1.id].kpetpvboosted)}\n${globalwriting2[usercible1.id].kdesceffet1}\n${globalwriting2[usercible1.id].kdesceffet2}\n${globalwriting2[usercible1.id].kdesceffet3}`)
 .addField(`Boosts`, `Attaque:${messagedeboostatk1}\nDéfense:${messagedeboostdef1}\nVie:${messagedeboostpv1}`);

  message.channel.send(specialinventaireadminEmbed)
}
 }




}





















if(command === 'give') {

  if(args.length != 3) {  
    return message.channel.send(`La commande doit être de la forme:\n${trucbizarre}!give [ressource] [quant] @user${trucbizarre}`);
  };
  const usercible = message.mentions.users.first();
  if(isNaN(args[1]) || isNaN(args[0]) === false || !usercible ||  0 > args[1] || usercible === message.author) {
    message.channel.send("Arguments invalides.")
  }

   if(args[0] === "Rx" || args[0] === "rx" || args[0] === "Rxcoins" || args[0] === "RxCoins" || args[0] === "RX" ||args[0] === "RXCOINS" ||  args[0] === "rxcoins") {
    
    
    if(args[1] > uRxCoins || 0 >= args[1]) {
      message.channel.send("Vous n'avez pas assez de ressources pour effectuer la transaction.")
    }
    if(args[1] <= uRxCoins && args[1] > 0 && usercible != message.author && args[1] > 0) {
   RxCoins[usercible.id] = {
     RxCoins: RxCoins[usercible.id].RxCoins + parseInt(args[1], 10)
   };
   RxCoins[message.author.id] = {
     RxCoins: uRxCoins - parseInt(args[1], 10)
    };
       fs.writeFile("./RxCoins.json", JSON.stringify(RxCoins), (err) => {
          if (err) console.log(err)
       });
             message.channel.send(`Vous avez bien transmis ${RXemote} ${millify(parseInt(args[1], 10),1)} RxCoins à ${usercible.username}`)
             client.channels.get(`776915888729227294`).send(`[GIVE]\n@${message.author.username} (${message.author.id}) a envoyé ${RXemote} ${millify(parseInt(args[1], 10),2)} RxCoins à ${usercible.username} (${usercible.id})\n${new Date(DateNow1).toString()}`)
      }
    }
//PIERRE
  if(args[0] === "Pi" || args[0] === "pi" || args[0] === "Pierre" || args[0] === "pierre" || args[0] === "stone" ||args[0] === "Stone" ||  args[0] === "STONE") {
    
    
    if(args[1] > uPierre || 0 >= args[1]) {
      message.channel.send("Vous n'avez pas assez de ressources pour effectuer la transaction.")
    }
    if(args[1] <= uPierre && args[1] > 0 && usercible != message.author && args[1] > 0) {
   Pierre[usercible.id] = {
     Pierre: Pierre[usercible.id].Pierre + parseInt(args[1], 10)
   };
   Pierre[message.author.id] = {
     Pierre: uPierre - parseInt(args[1], 10)
    };
       fs.writeFile("./Pierre.json", JSON.stringify(Pierre), (err) => {
          if (err) console.log(err)
       });
             message.channel.send(`Vous avez bien transmis ${emotepierre} ${millify(parseInt(args[1], 10),1)} Pierres à ${usercible.username}`)
             client.channels.get(`776915888729227294`).send(`[GIVE]\n@${message.author.username} (${message.author.id}) a envoyé ${emotepierre} ${millify(parseInt(args[1], 10),2)} Pierres à ${usercible.username} (${usercible.id})\n${new Date(DateNow1).toString()}`)
      }
    }                        
    if(args[0] === "Fer" || args[0] === "fer" || args[0] === "fe" || args[0] === "Fe" || args[0] === "FER" ||args[0] === "iron" ||  args[0] === "Iron") {
    
    
      if(args[1] > uFer || 0 >= args[1]) {
        message.channel.send("Vous n'avez pas assez de ressources pour effectuer la transaction.")
      }
      if(args[1] <= uFer && args[1] > 0 && usercible != message.author && args[1] > 0) {
     Fer[usercible.id] = {
       Fer: Fer[usercible.id].Fer + parseInt(args[1], 10)
     };
     Fer[message.author.id] = {
       Fer: uFer - parseInt(args[1], 10)
      };
         fs.writeFile("./Fer.json", JSON.stringify(Fer), (err) => {
            if (err) console.log(err)
         });
               message.channel.send(`Vous avez bien transmis ${emotefer} ${millify(parseInt(args[1], 10),1)} Fers à ${usercible.username}`)
               client.channels.get(`776915888729227294`).send(`[GIVE]\n@${message.author.username} (${message.author.id}) a envoyé ${emotefer} ${millify(parseInt(args[1], 10),2)} Fers à ${usercible.username} (${usercible.id})\n${new Date(DateNow1).toString()}`)
        }
      }
      if(args[0] === "Acier" || args[0] === "acier" || args[0] === "ac" || args[0] === "Ac" || args[0] === "steel" ||args[0] === "Steel" ||  args[0] === "AC") {
    
    
        if(args[1] > uAcier || 0 >= args[1]) {
          message.channel.send("Vous n'avez pas assez de ressources pour effectuer la transaction.")
        }
        if(args[1] <= uAcier && args[1] > 0 && usercible != message.author && args[1] > 0) {
       Acier[usercible.id] = {
         Acier: Acier[usercible.id].Acier + parseInt(args[1], 10)
       };
       Acier[message.author.id] = {
         Acier: uAcier - parseInt(args[1], 10)
        };
           fs.writeFile("./Acier.json", JSON.stringify(Acier), (err) => {
              if (err) console.log(err)
           });
                 message.channel.send(`Vous avez bien transmis ${emoteacier} ${millify(parseInt(args[1], 10),1)} Aciers à ${usercible.username}`)
                 client.channels.get(`776915888729227294`).send(`[GIVE]\n@${message.author.username} (${message.author.id}) a envoyé ${emoteacier} ${millify(parseInt(args[1], 10),2)} Aciers à ${usercible.username} (${usercible.id})\n${new Date(DateNow1).toString()}`)
          }
        }   
        if(args[0] === "Or" || args[0] === "or" || args[0] === "gold" || args[0] === "GOLD" || args[0] === "Gold" ||args[0] === "OR" ||  args[0] === "go") {
    
    
          if(args[1] > uOr || 0 >= args[1]) {
            message.channel.send("Vous n'avez pas assez de ressources pour effectuer la transaction.")
          }
          if(args[1] <= uOr && args[1] > 0 && usercible != message.author && args[1] > 0) {
         Or[usercible.id] = {
           Or: Or[usercible.id].Or + parseInt(args[1], 10)
         };
         Or[message.author.id] = {
           Or: uOr - parseInt(args[1], 10)
          };
             fs.writeFile("./Or.json", JSON.stringify(Or), (err) => {
                if (err) console.log(err)
             });
                   message.channel.send(`Vous avez bien transmis ${emoteor} ${millify(parseInt(args[1], 10),1)} Ors à ${usercible.username}`)
                   client.channels.get(`776915888729227294`).send(`[GIVE]\n@${message.author.username} (${message.author.id}) a envoyé ${emoteor} ${millify(parseInt(args[1], 10),2)} Ors à ${usercible.username} (${usercible.id})\n${new Date(DateNow1).toString()}`)
            }
          } 
          if(args[0] === "pla" || args[0] === "Pla" || args[0] === "Platine" || args[0] === "platine" || args[0] === "PLATINE" ||args[0] === "PLA" ||  args[0] === "PLa") {
    
    
            if(args[1] > uPlatine || 0 >= args[1]) {
              message.channel.send("Vous n'avez pas assez de ressources pour effectuer la transaction.")
            }
            if(args[1] <= uPlatine && args[1] > 0 && usercible != message.author && args[1] > 0) {
           Platine[usercible.id] = {
             Platine: Platine[usercible.id].Platine + parseInt(args[1], 10)
           };
           Platine[message.author.id] = {
             Platine: uPlatine - parseInt(args[1], 10)
            };
               fs.writeFile("./Platine.json", JSON.stringify(Platine), (err) => {
                  if (err) console.log(err)
               });
                     message.channel.send(`Vous avez bien transmis ${emoteplatine} ${millify(parseInt(args[1], 10),1)} Platines à ${usercible.username}`)
                     client.channels.get(`776915888729227294`).send(`[GIVE]\n@${message.author.username} (${message.author.id}) a envoyé ${emoteplatine} ${millify(parseInt(args[1], 10),2)} Platines à ${usercible.username} (${usercible.id})\n${new Date(DateNow1).toString()}`)
              }
            } 
            if(args[0] === "dia" || args[0] === "Dia" || args[0] === "Diamant" || args[0] === "diamant" || args[0] === "diamond" ||args[0] === "Diamond" ||  args[0] === "diam") {
    
    
              if(args[1] > uDiamant || 0 >= args[1]) {
                message.channel.send("Vous n'avez pas assez de ressources pour effectuer la transaction.")
              }
              if(args[1] <= uDiamant && args[1] > 0 && usercible != message.author && args[1] > 0) {
                Diamant[usercible.id] = {
                  Diamant: Diamant[usercible.id].Diamant + parseInt(args[1], 10)
             };
             Diamant[message.author.id] = {
              Diamant: uDiamant - parseInt(args[1], 10)
              };
                 fs.writeFile("./Diamant.json", JSON.stringify(Diamant), (err) => {
                    if (err) console.log(err)
                 });
                       message.channel.send(`Vous avez bien transmis ${emotediamant} ${millify(parseInt(args[1], 10),1)} Diamants à ${usercible.username}`)
                       client.channels.get(`776915888729227294`).send(`[GIVE]\n@${message.author.username} (${message.author.id}) a envoyé ${emotediamant} ${millify(parseInt(args[1], 10),2)} Diamants à ${usercible.username} (${usercible.id})\n${new Date(DateNow1).toString()}`)
                }
              }  
              if(args[0] === "plu" || args[0] === "Plu" || args[0] === "Pluto" || args[0] === "pluto" || args[0] === "plutonium" ||args[0] === "Plutonium" ||  args[0] === "PLUTONIUM") {
    
    
                if(args[1] > uPlutonium || 0 >= args[1]) {
                  message.channel.send("Vous n'avez pas assez de ressources pour effectuer la transaction.")
                }
                if(args[1] <= uPlutonium && args[1] > 0 && usercible != message.author && args[1] > 0) {
                  Plutonium[usercible.id] = {
                    Plutonium: Plutonium[usercible.id].Plutonium + parseInt(args[1], 10)
               };
               Plutonium[message.author.id] = {
                Plutonium: uPlutonium - parseInt(args[1], 10)
                };
                   fs.writeFile("./Plutonium.json", JSON.stringify(Plutonium), (err) => {
                      if (err) console.log(err)
                   });
                         message.channel.send(`Vous avez bien transmis ${emotepluto} ${millify(parseInt(args[1], 10),1)} Plutoniums à ${usercible.username}`)
                         client.channels.get(`776915888729227294`).send(`[GIVE]\n@${message.author.username} (${message.author.id}) a envoyé ${emotepluto} ${millify(parseInt(args[1], 10),2)} Plutoniums à ${usercible.username} (${usercible.id})\n${new Date(DateNow1).toString()}`)
                  }
                }  
                if(args[0] === "pn" || args[0] === "Pn" || args[0] === "PN" || args[0] === "DS" || args[0] === "ds" ||args[0] === "Ds" ||  args[0] === "Darkstone") {
    
    
                  if(args[1] > uPierreNoire || 0 >= args[1]) {
                    message.channel.send("Vous n'avez pas assez de ressources pour effectuer la transaction.")
                  }
                  if(args[1] <= uPierreNoire && args[1] > 0 && usercible != message.author && args[1] > 0) {
                    PierreNoire[usercible.id] = {
                      PierreNoire: PierreNoire[usercible.id].PierreNoire + parseInt(args[1], 10)
                 };
                 PierreNoire[message.author.id] = {
                  PierreNoire: uPierreNoire - parseInt(args[1], 10)
                  };
                     fs.writeFile("./PierreNoire.json", JSON.stringify(PierreNoire), (err) => {
                        if (err) console.log(err)
                     });
                           message.channel.send(`Vous avez bien transmis ${emotePN} ${millify(parseInt(args[1], 10),1)} Pierres Noires à ${usercible.username}`)
                           client.channels.get(`776915888729227294`).send(`[GIVE]\n@${message.author.username} (${message.author.id}) a envoyé ${emotePN} ${millify(parseInt(args[1], 10),2)} Pierres Noires à ${usercible.username} (${usercible.id})\n${new Date(DateNow1).toString()}`)
                    }
                  }
                  if(args[0] === "bs" || args[0] === "BS" || args[0] === "Bs" || args[0] === "sapin" || args[0] === "SAPIN" ||args[0] === "Sapin") {
    
    
                    if(args[1] > uBoisdeSapin || 0 >= args[1]) {
                      message.channel.send("Vous n'avez pas assez de ressources pour effectuer la transaction.")
                    }
                    if(args[1] <= uBoisdeSapin && args[1] > 0 && usercible != message.author && args[1] > 0) {
                      BoisdeSapin[usercible.id] = {
                        BoisdeSapin: BoisdeSapin[usercible.id].BoisdeSapin + parseInt(args[1], 10)
                   };
                   BoisdeSapin[message.author.id] = {
                    BoisdeSapin: uBoisdeSapin - parseInt(args[1], 10)
                    };
                       fs.writeFile("./BoisdeSapin.json", JSON.stringify(BoisdeSapin), (err) => {
                          if (err) console.log(err)
                       });
                             message.channel.send(`Vous avez bien transmis ${emotebs} ${millify(parseInt(args[1], 10),1)} Bois de Sapin à ${usercible.username}`)
                             client.channels.get(`776915888729227294`).send(`[GIVE]\n@${message.author.username} (${message.author.id}) a envoyé ${emotebs} ${millify(parseInt(args[1], 10),2)} Bois de Sapin à ${usercible.username} (${usercible.id})\n${new Date(DateNow1).toString()}`)
                      }
                    }
                    if(args[0] === "bbl" || args[0] === "Bbl" || args[0] === "BBL" || args[0] === "bouleau" || args[0] === "Bouleau" ||args[0] === "BOULEAU") {
    
    
                      if(args[1] > uBoisdeBouleau || 0 >= args[1]) {
                        message.channel.send("Vous n'avez pas assez de ressources pour effectuer la transaction.")
                      }
                      if(args[1] <= uBoisdeBouleau && args[1] > 0 && usercible != message.author && args[1] > 0) {
                        BoisdeBouleau[usercible.id] = {
                          BoisdeBouleau: BoisdeBouleau[usercible.id].BoisdeBouleau + parseInt(args[1], 10)
                     };
                     BoisdeBouleau[message.author.id] = {
                      BoisdeBouleau: uBoisdeBouleau - parseInt(args[1], 10)
                      };
                         fs.writeFile("./BoisdeBouleau.json", JSON.stringify(BoisdeBouleau), (err) => {
                            if (err) console.log(err)
                         });
                               message.channel.send(`Vous avez bien transmis ${emotebbl} ${millify(parseInt(args[1], 10),1)} Bois de Bouleau à ${usercible.username}`)
                               client.channels.get(`776915888729227294`).send(`[GIVE]\n@${message.author.username} (${message.author.id}) a envoyé ${emotebbl} ${millify(parseInt(args[1], 10),2)} Bois de Bouleau à ${usercible.username} (${usercible.id})\n${new Date(DateNow1).toString()}`)
                        }
                      }
                      if(args[0] === "bc" || args[0] === "BC" || args[0] === "Bc" || args[0] === "chene" || args[0] === "Chene" ||args[0] === "CHENE") {
    
    
                        if(args[1] > uBoisdeChêne || 0 >= args[1]) {
                          message.channel.send("Vous n'avez pas assez de ressources pour effectuer la transaction.")
                        }
                        if(args[1] <= uBoisdeChêne && args[1] > 0 && usercible != message.author && args[1] > 0) {
                          BoisdeChêne[usercible.id] = {
                            BoisdeChêne: BoisdeChêne[usercible.id].BoisdeChêne + parseInt(args[1], 10)
                       };
                       BoisdeChêne[message.author.id] = {
                        BoisdeChêne: uBoisdeChêne - parseInt(args[1], 10)
                        };
                           fs.writeFile("./BoisdeChêne.json", JSON.stringify(BoisdeChêne), (err) => {
                              if (err) console.log(err)
                           });
                                 message.channel.send(`Vous avez bien transmis ${emotebc} ${millify(parseInt(args[1], 10),1)} Bois de Chêne à ${usercible.username}`)
                                 client.channels.get(`776915888729227294`).send(`[GIVE]\n@${message.author.username} (${message.author.id}) a envoyé ${emotebc} ${millify(parseInt(args[1], 10),2)} Bois de Chêne à ${usercible.username} (${usercible.id})\n${new Date(DateNow1).toString()}`)
                          }
                        }
                        if(args[0] === "bd" || args[0] === "Bd" || args[0] === "BD" || args[0] === "gw" || args[0] === "GW" ||args[0] === "Gw" || args[0] === "goldwood") {
    
    
                          if(args[1] > uBoisDoré || 0 >= args[1]) {
                            message.channel.send("Vous n'avez pas assez de ressources pour effectuer la transaction.")
                          }
                          if(args[1] <= uBoisDoré && args[1] > 0 && usercible != message.author && args[1] > 0) {
                            BoisDoré[usercible.id] = {
                              BoisDoré: BoisDoré[usercible.id].BoisDoré + parseInt(args[1], 10)
                         };
                         BoisDoré[message.author.id] = {
                          BoisDoré: uBoisDoré - parseInt(args[1], 10)
                          };
                             fs.writeFile("./BoisDoré.json", JSON.stringify(BoisDoré), (err) => {
                                if (err) console.log(err)
                             });
                                   message.channel.send(`Vous avez bien transmis ${emotegwood} ${millify(parseInt(args[1], 10),1)} Bois Doré à ${usercible.username}`)
                                   client.channels.get(`776915888729227294`).send(`[GIVE]\n@${message.author.username} (${message.author.id}) a envoyé ${emotegwood} ${millify(parseInt(args[1], 10),2)} Bois Doré à ${usercible.username} (${usercible.id})\n${new Date(DateNow1).toString()}`)
                            }
                          }



           }

let turn = 0
if(command === "battle") {
  const usercible2 = message.mentions.users.first()
  let pvcible = globalwriting[usercible2.id].kppv
  let atkcible = globalwriting[usercible2.id].kmaxatk
  let defcible = globalwriting[usercible2.id].kmaxdef
  let atktotalcible1 = atkcible/(PMaxDef/3)
  let atktotalcible2 = (atkcible/(PMaxDef/3))*1.5
  let atktotaljoueur1 = PMaxAtk/(defcible/3)
  let atktotaljoueur2 = (PMaxAtk/(defcible/3))*1.5
  let pvjoueur = uPv
  let atktotalcible = Math.floor(Math.random() * atktotalcible2) + atktotalcible1
  let atktotaljoueur = Math.floor(Math.random()*atktotaljoueur2)+ atktotaljoueur1
    if(args.length != 1) {
      return message.channel.send(`La commande doit être de la forme:\n${trucbizarre}!battle [user]${trucbizarre}`);
    }
    if(!usercible2 || usercible2 === message.author.id){
      message.channel.send("Arguments invalides.")
    }
      if(uPv <= 0 || Pv[usercible2.id].Pv <= 0){
        return message.channel.send("Vous ou le joueur cible n'avez pas assez de Pv's pour combattre.")
      }


    if(usercible2 != message.author.id && Pv[usercible2.id].Pv > 0 && uPv > 0) {
      while(pvjoueur > 0 && pvcible > 0) {

      turn++
      pvcible = pvcible-atktotaljoueur
      pvjoueur= pvjoueur - atktotalcible
      atktotalcible  = atktotalcible *1.1
      atktotaljoueur = atktotaljoueur *1.1

      if(pvjoueur <= 0 && pvcible > 0){
        message.channel.send(`Combat entre ${message.author.username} et ${usercible2.username}\nTour 1:\n${message.author.username} attaque ${usercible2.username}, il perd ${Math.trunc(atktotaljoueur/(Math.pow(1.1, turn)))} PV (${Math.trunc(globalwriting[usercible2.id].kppv - (atktotaljoueur/ (Math.pow(1.1, turn))))} PV's restants)\n${usercible2.username} attaque ${message.author.username}, il perd ${Math.trunc(atktotalcible/ (Math.pow(1.1, turn) ))} PV (${Math.trunc(uPv - atktotalcible/(Math.pow(1.1, turn)))} PV's restants)\n...\nTour ${turn} ${message.author.username} attaque ${usercible2.username}, il perd ${Math.trunc(atktotaljoueur)} PV (${Math.trunc(pvcible)} PV's restants)\n${usercible2.username} attaque ${message.author.username}, il perd ${Math.trunc(atktotalcible)} PV (0 PV's restants)\nDéfaite de ${message.author.username}`)
      }
      if(pvjoueur > 0 && pvcible <= 0){
        message.channel.send(`Combat entre ${message.author.username} et ${usercible2.username}\nTour 1:\n${message.author.username} attaque ${usercible2.username}, il perd ${Math.trunc(atktotaljoueur/(Math.pow(1.1, turn)))} PV (${Math.trunc(globalwriting[usercible2.id].kppv - (atktotaljoueur/ (Math.pow(1.1, turn))))} PV's restants)\n${usercible2.username} attaque ${message.author.username}, il perd ${Math.trunc(atktotalcible/ (Math.pow(1.1, turn)) )} PV (${Math.trunc(uPv - atktotalcible/(Math.pow(1.1, turn)))} PV's restants)\n...\nTour ${turn} ${message.author.username} attaque ${usercible2.username}, il perd ${Math.trunc(atktotaljoueur)} PV (0 PV's restants)\nDéfaite de ${usercible2.username}`)
      }
        if(pvjoueur <= 0 && pvcible <= 0){
        message.channel.send(`Combat entre ${message.author.username} et ${usercible2.username}\nTour 1:\n${message.author.username} attaque ${usercible2.username}, il perd ${Math.trunc(atktotaljoueur/(Math.pow(1.1, turn)))} PV (${Math.trunc(globalwriting[usercible2.id].kppv - (atktotaljoueur/ (Math.pow(1.1, turn))))} PV's restants)\n${usercible2.username} attaque ${message.author.username}, il perd ${Math.trunc(atktotalcible/ (Math.pow(1.1, turn)))} PV (${Math.trunc(uPv - (atktotalcible / (Math.pow(1.1, turn))))} PV's restants)\n...\nTour ${turn} ${message.author.username} attaque ${usercible2.username}, il perd ${Math.trunc(atktotaljoueur)} PV (0 PV's restants)\n${usercible2.username} attaque ${message.author.username}, il perd ${Math.trunc(atktotalcible)} PV (0 PV's restants)\nEgalité, mort des deux joueurs.`)

}
      }
    }
  }
  if(message.content === "!fi" || message.content === "!fish") {
    if(uclassen === 0) message.channel.send("Choisis d'abord une classe.")
    if(Date.now() < Fpret[message.author.id].Fpret && uclassen != 0) {
      message.channel.send(`Le prochain !fish sera disponible dans ${F2TimeObj.minutes}m et ${F2TimeObj.seconds}s.`);
     } if(Date.now()>= Fpret[message.author.id].Fpret && uclassen != 0 || uAdmin===1) {

  



      fishglobal[message.author.id] = {
        fish1: fishglobal[message.author.id].fish1 +wcfi,
        fish2: fishglobal[message.author.id].fish2 +wrfi,
        fish3: fishglobal[message.author.id].fish3 + wefi,
        fish4: fishglobal[message.author.id].fish4 + wlfi,
        dechet1: fishglobal[message.author.id].dechet1 + wdfi
      };

    Fpret[message.author.id] = {
      Fpret: FishPret
    };
    writeplegend[message.author.id] = {
      writeplegend: Math.floor(Math.random() * 200) + 1
    };

  
    fs.writeFile("./Fpret.json", JSON.stringify(Fpret), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./fishglobal.json", JSON.stringify(fishglobal), (err) => {
      if (err) console.log(err)
    });
    fs.writeFile("./writeplegend.json", JSON.stringify(writeplegend), (err) => {
      if (err) console.log(err)
    });
   return message.channel.send(`${wetexte}\n${trucbizarre}Pour consulter tous vos loots, faites !loots${trucbizarre}`);
    }
  };
  
let lootembed = new Discord.RichEmbed()
.setTitle(`Liste des loots de ${message.author.username}`)
.addField(`**Poissons**`,`${fish1emote}: ${fishglobal[message.author.id].fish1}\n${fish2emote}: ${fishglobal[message.author.id].fish2}\n${fish3emote}: ${fishglobal[message.author.id].fish3}\n${fish4emote}: ${fishglobal[message.author.id].fish4}`)
.addField(`**Loots**`, `${dechetemote}: ${fishglobal[message.author.id].dechet1}`);
if(message.content === "!loots" && uclassen != 0){
  message.channel.send(lootembed)
}

if(uPv > PMaxPv){
  Pv[message.author.id] = {
    Pv: PMaxPv
  };
  fs.writeFile("./Pv.json", JSON.stringify(Pv), (err) => {
    if (err) console.log(err)
  });
}
if(uPv < 0){
  Pv[message.author.id] = {
    Pv: 0
  };
  fs.writeFile("./Pv.json", JSON.stringify(Pv), (err) => {
    if (err) console.log(err)
  });
}
let artefactembed = new Discord.RichEmbed()
.addField(`**Liste des Artefacts de ${message.author.username}**`, `${artefact1name}${artefact2name}${artefact3name}${artefact4name}${artefact5name}${artefact6name}${artefact7name}${artefact8name}${artefact9name}${artefact10name}${artefact11name}`);
if(message.content === "!artefact" || message.content === "!artefacts" && uclassen != 0){
 message.channel.send(artefactembed)
}
let skinphrasedebut = "Vous ne possédez aucun skin spécial."
let skinphrasefin = ""
let numberskin1 = 0
let skinspecialphenix1phrase = ""
let skin01phrase = ""
if(phenixspecial1[message.author.id].unlock === 1 && phenixspecial1[message.author.id].equip === 0){
   skinspecialphenix1phrase = `**[ID du skin: 0]** Phoenix Bleu <:phoenixSP_240:777132343684628520> (ID du pet: 40)\n**Bonus du skin**: +3% Attaque & Défense, +5% Pvs\nSelectionné: :x:`
  numberskin1 = 1
  }
if(phenixspecial1[message.author.id].unlock === 1 && phenixspecial1[message.author.id].equip === 1){
  skinspecialphenix1phrase = `**[ID du skin: 0]** Phoenix Bleu <:phoenixSP_240:777132343684628520> (ID du pet: 40)\n**Bonus du skin**: +3% Attaque & Défense, +5% Pvs\nSelectionné: :white_check_mark: `
  numberskin1 = 1
}

if(numberskin1 != 0) {
  skinphrasedebut = ""
  skinphrasefin = `\n\nPour sélectionner un skin, faites ${trucbizarre}!replace [ID du pet] [ID du skin]${trucbizarre}, pour l'enlever faites, ${trucbizarre}!replace [ID du pet]${trucbizarre}`
}


let skinsembed1 = new Discord.RichEmbed()
.addField(`**Liste des Skins spéciaux de ${message.author.username}**\n`, `\n${skinphrasedebut}${skinspecialphenix1phrase}${skinphrasefin}`);
if(message.content === "!skins" || message.content === "!skin" && uclassen != 0){
  message.channel.send(skinsembed1)
}
if(message.content === "!replace 40 0" && uclassen != 0 && phenixspecial1[message.author.id].unlock === 1){
   if(upet40 === 0) message.channel.send("Tu ne possèdes pas encore ce pet, attends de le débloquer avant de vouloir lui mettre un skin.")
   if(upet40 != 0 && phenixspecial1[message.author.id].equip === 1) message.channel.send(`Tu as déjà équipé un skin sur ce pet, pour l'enlever, fait ${trucbizarre}!replace [ID du pet]${trucbizarre}`)
   if(upet40 != 0 && phenixspecial1[message.author.id].equip === 0){
    phenixspecial1[message.author.id] = {
      unlock: 1,
      equip: 1
    };
    fs.writeFile("./phenixspecial1.json", JSON.stringify(phenixspecial1), (err) => {
      if (err) console.log(err)
    });
    message.channel.send(`Tu as bien équipé le skin Phoenix Bleu <:phoenixSP_240:777132343684628520> [ID:0]`)
   }
}
if(message.content === "!replace 40" && uclassen != 0 && phenixspecial1[message.author.id].unlock === 1 ){
  if(upet40 === 0) message.channel.send("Tu ne possèdes pas encore ce pet, attends de le débloquer avant de vouloir lui enlever un skin.")
  if(upet40 != 0 && phenixspecial1[message.author.id].equip === 0) message.channel.send(`Tu n'as équipé aucun skin de ce pet, pour en équiper un, fait ${trucbizarre}!replace [ID du pet] [ID du skin]${trucbizarre}`)
  if(upet40 != 0 && phenixspecial1[message.author.id].equip === 1){
   phenixspecial1[message.author.id] = {
     unlock: 1,
     equip: 0
   };
   fs.writeFile("./phenixspecial1.json", JSON.stringify(phenixspecial1), (err) => {
     if (err) console.log(err)
   });
   message.channel.send(`Tu as enlevé le skin Phoenix Bleu <:phoenixSP_240:777132343684628520> [ID:0]`)
  }
}

 });

